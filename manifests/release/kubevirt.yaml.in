---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubevirt.io: ""
  name: {{.Namespace}}
---
# Monitoring
apiVersion: v1
kind: Service
metadata:
  name: kubevirt-prometheus-metrics
  namespace: {{.Namespace}}
  labels:
    prometheus.kubevirt.io: ""
    kubevirt.io: ""
spec:
  ports:
    - name: metrics
      port: 443
      targetPort: metrics
      protocol: TCP
  selector:
    prometheus.kubevirt.io: ""
---
# RBAC
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kubevirt.io:admin
  labels:
    kubevirt.io: ""
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups:
      - subresources.kubevirt.io
    resources:
      - virtualmachineinstances/console
      - virtualmachineinstances/vnc
      - virtualmachines/restart
    verbs:
      - get
  - apiGroups:
      - kubevirt.io
    resources:
      - virtualmachineinstances
      - virtualmachines
      - virtualmachineinstancepresets
      - virtualmachineinstancereplicasets
    verbs:
      - get
      - delete
      - create
      - update
      - patch
      - list
      - watch
      - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kubevirt.io:edit
  labels:
    kubevirt.io: ""
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
  - apiGroups:
      - subresources.kubevirt.io
    resources:
      - virtualmachineinstances/console
      - virtualmachineinstances/vnc
      - virtualmachines/restart
    verbs:
      - get
  - apiGroups:
      - kubevirt.io
    resources:
      - virtualmachineinstances
      - virtualmachines
      - virtualmachineinstancepresets
      - virtualmachineinstancereplicasets
    verbs:
      - get
      - delete
      - create
      - update
      - patch
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kubevirt.io:view
  labels:
    kubevirt.io: ""
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
  - apiGroups:
      - kubevirt.io
    resources:
      - virtualmachineinstances
      - virtualmachines
      - virtualmachineinstancepresets
      - virtualmachineinstancereplicasets
    verbs:
      - get
      - list
      - watch
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubevirt-apiserver
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: ""
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kubevirt-apiserver
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: ""
roleRef:
  kind: ClusterRole
  name: kubevirt-apiserver
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubevirt-apiserver
    namespace: {{.Namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kubevirt-apiserver-auth-delegator
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: ""
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: kubevirt-apiserver
  namespace: {{.Namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: kubevirt-apiserver
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: ""
roleRef:
  kind: Role
  name: kubevirt-apiserver
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubevirt-apiserver
    namespace: {{.Namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: kubevirt-apiserver
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: ""
rules:
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - list
      - delete
      - update
      - create
  - apiGroups:
      - ''
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kubevirt-apiserver
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: ""
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - create
      - update
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - get
      - create
      - update
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - get
      - list
  - apiGroups:
      - ''
    resources:
      - configmaps
    resourceNames:
      - extension-apiserver-authentication
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups:
      - kubevirt.io
    resources:
      - virtualmachines
      - virtualmachineinstances
      - virtualmachineinstancemigrations
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ''
    resources:
      - limitranges
    verbs:
      - watch
      - list
  - apiGroups:
      - kubevirt.io
    resources:
      - virtualmachineinstancepresets
    verbs:
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kubevirt-controller
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: ""
rules:
  - apiGroups:
      - ''
    resources:
      - pods
      - configmaps
      - endpoints
    verbs:
      - get
      - list
      - watch
      - delete
      - update
      - create
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - update
      - create
      - patch
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - ''
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kubevirt.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - cdi.kubevirt.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - k8s.cni.cncf.io
    resources:
      - network-attachment-definitions
    verbs:
      - get
      - list
      - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubevirt-controller
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: ""
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubevirt-privileged
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: ""
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kubevirt-controller
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: ""
roleRef:
  kind: ClusterRole
  name: kubevirt-controller
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubevirt-controller
    namespace: {{.Namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kubevirt-privileged-cluster-admin
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: ""
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kubevirt-privileged
    namespace: {{.Namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubevirt.io: ""
    kubernetes.io/bootstrapping: rbac-defaults
  name: kubevirt.io:default
rules:
- apiGroups:
    - subresources.kubevirt.io
  resources:
    - version
  verbs:
    - get
    - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    kubevirt.io: ""
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: kubevirt.io:default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubevirt.io:default
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:unauthenticated
---
apiVersion: v1
kind: Service
metadata:
  name: virt-api
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: "virt-api"
spec:
  ports:
    - port: 443
      targetPort: 8443
      protocol: TCP
  selector:
    kubevirt.io: virt-api
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: virt-api
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: "virt-api"
spec:
  replicas: 2
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: |
                  [
                    {
                      "key": "CriticalAddonsOnly",
                      "operator": "Exists"
                    }
                  ]
      labels:
        kubevirt.io: virt-api
        prometheus.kubevirt.io: ""
    spec:
      serviceAccountName: kubevirt-apiserver
      containers:
        - name: virt-api
          image: {{.DockerPrefix}}/virt-api:{{.DockerTag}}
          imagePullPolicy: {{.ImagePullPolicy}}
          command:
              - "virt-api"
              - "--port"
              - "8443"
              - "--subresources-only"
          ports:
            - containerPort: 8443
              name: "virt-api"
              protocol: "TCP"
            - containerPort: 8443
              name: "metrics"
              protocol: "TCP"
          readinessProbe:
            httpGet:
              scheme: HTTPS
              port: 8443
              path: /apis/subresources.kubevirt.io/v1alpha2/healthz
            initialDelaySeconds: 15
            timeoutSeconds: 10
      securityContext:
        runAsNonRoot: true
---
# kubevirt controller
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: virt-controller
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: "virt-controller"
spec:
  replicas: 2
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: |
                  [
                    {
                      "key": "CriticalAddonsOnly",
                      "operator": "Exists"
                    }
                  ]
      labels:
        kubevirt.io: virt-controller
        prometheus.kubevirt.io: ""
    spec:
      serviceAccountName: kubevirt-controller
      containers:
        - name: virt-controller
          image: {{.DockerPrefix}}/virt-controller:{{.DockerTag}}
          imagePullPolicy: {{.ImagePullPolicy}}
          command:
              - "virt-controller"
              - "--launcher-image"
              - "{{.DockerPrefix}}/virt-launcher:{{.DockerTag}}"
              - "--port"
              - "8443"
          ports:
            - containerPort: 8443
              name: "metrics"
              protocol: "TCP"
          livenessProbe:
            failureThreshold: 8
            httpGet:
              scheme: HTTPS
              port: 8443
              path: /healthz
            initialDelaySeconds: 15
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              scheme: HTTPS
              port: 8443
              path: /leader
            initialDelaySeconds: 15
            timeoutSeconds: 10
          securityContext:
            runAsNonRoot: true
---
# virt-handler daemon set
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: virt-handler
  namespace: {{.Namespace}}
  labels:
    kubevirt.io: "virt-handler"
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: virt-handler
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        scheduler.alpha.kubernetes.io/tolerations: |
                  [
                    {
                      "key": "CriticalAddonsOnly",
                      "operator": "Exists"
                    }
                  ]
      labels:
        kubevirt.io: virt-handler
        prometheus.kubevirt.io: ""
    spec:
      serviceAccountName: kubevirt-privileged
      hostPID: true
      containers:
        - name: virt-handler
          ports:
            - containerPort: 8443
              name: "metrics"
              protocol: "TCP"
          image: {{.DockerPrefix}}/virt-handler:{{.DockerTag}}
          imagePullPolicy: {{.ImagePullPolicy}}
          command:
            - "virt-handler"
            - "-v"
            - "3"
            -  "--port"
            - "8443"
            - "--hostname-override"
            - "$(NODE_NAME)"
            - "--pod-ip-address"
            - "$(MY_POD_IP)"
          securityContext:
            privileged: true
          volumeMounts:
            - name: libvirt-runtimes
              mountPath: /var/run/kubevirt-libvirt-runtimes
            - name: virt-share-dir
              mountPath: /var/run/kubevirt
            - name: virt-private-dir
              mountPath: /var/run/kubevirt-private
            - name: device-plugin
              mountPath: /var/lib/kubelet/device-plugins
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      volumes:
        - name: libvirt-runtimes
          hostPath:
            path: /var/run/kubevirt-libvirt-runtimes
        - name: virt-share-dir
          hostPath:
            path: /var/run/kubevirt
        - name: virt-private-dir
          hostPath:
            path: /var/run/kubevirt-private
        - name: device-plugin
          hostPath:
            path: /var/lib/kubelet/device-plugins
{{index .GeneratedManifests "vmi-resource.yaml"}}
{{index .GeneratedManifests "vmirs-resource.yaml"}}
{{index .GeneratedManifests "vmipreset-resource.yaml"}}
{{index .GeneratedManifests "vm-resource.yaml"}}
{{index .GeneratedManifests "vmim-resource.yaml"}}
