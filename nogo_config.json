{
  "structtag": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "asmdecl": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "assign": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "atomic": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "bools": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "buildtag": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "cgocall": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "composites": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "copylocks": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "httpresponse": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "loopclosure": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "lostcancel": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "nilfunc": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "printf": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "shift": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "stdmethods": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "tests": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "unreachable": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "unsafeptr": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "rules_go_work-.*/": "necessary due to https://github.com/bazelbuild/rules_go/issues/2513",
      "external/": "externaldoesn't pass vet"
    }
  },
  "unusedresult": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "ineffassign": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "ginkgolinter": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet"
    }
  },
  "longfile": {
    "exclude_files": {
      "vendor/": "vendor doesn't pass vet",
      "external/": "externaldoesn't pass vet",
      "pkg/": "quite some files are big",
      "staging/": "focus on testing for now"
    },
    "analyzer_flags": {
      "exceptions": "tests/infra_test.go:1686,tests/migration_test.go:4382,tests/operator_test.go:2990,tests/storage/restore.go:1621,tests/utils.go:2776,tests/vm_test.go:2301,tests/vmi_configuration_test.go:3053,tests/vmi_lifecycle_test.go:1900,tools/vms-generator/utils/utils.go:1423",
      "max-file-length": 1000,
      "max-test-file-length": 1500
    }
  }
}
