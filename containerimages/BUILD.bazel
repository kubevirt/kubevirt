load("@io_bazel_rules_docker//container:container.bzl", "container_image")

container_image(
    name = "alpine-container-disk-image",
    architecture = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": "ppc64le",
        "//conditions:default": "amd64",
    }),
    directory = "/disk",
    files = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": ["@alpine_image_ppc64le//file"],
        "//conditions:default": ["@alpine_image//file"],
    }),
    mode = "444",
    visibility = ["//visibility:public"],
)

container_image(
    name = "cirros-container-disk-image",
    architecture = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": "ppc64le",
        "//conditions:default": "amd64",
    }),
    directory = "/disk",
    files = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": ["@cirros_image_ppc64le//file"],
        "//conditions:default": ["@cirros_image//file"],
    }),
    mode = "444",
    visibility = ["//visibility:public"],
)

# used for e2e testing of custom base baths
container_image(
    name = "cirros-custom-container-disk-image",
    architecture = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": "ppc64le",
        "//conditions:default": "amd64",
    }),
    directory = "/custom-disk",
    files = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": ["@cirros_image_ppc64le//file"],
        "//conditions:default": ["@cirros_image//file"],
    }),
    mode = "444",
    visibility = ["//visibility:public"],
)

container_image(
    name = "fedora-cloud-container-disk-image",
    architecture = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": "ppc64le",
        "//conditions:default": "amd64",
    }),
    directory = "/disk",
    files = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": ["@fedora_image_ppc64le//file"],
        "//conditions:default": ["@fedora_image//file"],
    }),
    mode = "444",
    visibility = ["//visibility:public"],
)

container_image(
    name = "microlivecd-container-disk-image",
    directory = "/disk",
    files = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": ["@microlivecd_image_ppc64le//file"],
        "//conditions:default": ["@microlivecd_image//file"],
    }),
    mode = "444",
    visibility = ["//visibility:public"],
)

container_image(
    name = "virtio-container-disk-image",
    architecture = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": "ppc64le",
        "//conditions:default": "amd64",
    }),
    directory = "/disk",
    files = ["@virtio_win_image//file"],
    mode = "444",
    visibility = ["//visibility:public"],
)

container_image(
    name = "fedora-sriov-lane-container-disk-image",
    architecture = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": "ppc64le",
        "//conditions:default": "amd64",
    }),
    base = select({
        "@io_bazel_rules_go//go/platform:linux_ppc64le": "@fedora_sriov_lane_ppc64le//image",
        "//conditions:default": "@fedora_sriov_lane//image",
    }),
    mode = "444",
    visibility = ["//visibility:public"],
)
