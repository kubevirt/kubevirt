load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "affinity.go",
        "attachedvolume.go",
        "awselasticblockstorevolumesource.go",
        "azurediskvolumesource.go",
        "azurefilepersistentvolumesource.go",
        "azurefilevolumesource.go",
        "capabilities.go",
        "cephfspersistentvolumesource.go",
        "cephfsvolumesource.go",
        "cinderpersistentvolumesource.go",
        "cindervolumesource.go",
        "clientipconfig.go",
        "componentcondition.go",
        "componentstatus.go",
        "configmap.go",
        "configmapenvsource.go",
        "configmapkeyselector.go",
        "configmapnodeconfigsource.go",
        "configmapprojection.go",
        "configmapvolumesource.go",
        "container.go",
        "containerimage.go",
        "containerport.go",
        "containerstate.go",
        "containerstaterunning.go",
        "containerstateterminated.go",
        "containerstatewaiting.go",
        "containerstatus.go",
        "csipersistentvolumesource.go",
        "csivolumesource.go",
        "daemonendpoint.go",
        "downwardapiprojection.go",
        "downwardapivolumefile.go",
        "downwardapivolumesource.go",
        "emptydirvolumesource.go",
        "endpointaddress.go",
        "endpointport.go",
        "endpoints.go",
        "endpointsubset.go",
        "envfromsource.go",
        "envvar.go",
        "envvarsource.go",
        "ephemeralcontainer.go",
        "ephemeralcontainercommon.go",
        "ephemeralvolumesource.go",
        "event.go",
        "eventseries.go",
        "eventsource.go",
        "execaction.go",
        "fcvolumesource.go",
        "flexpersistentvolumesource.go",
        "flexvolumesource.go",
        "flockervolumesource.go",
        "gcepersistentdiskvolumesource.go",
        "gitrepovolumesource.go",
        "glusterfspersistentvolumesource.go",
        "glusterfsvolumesource.go",
        "grpcaction.go",
        "hostalias.go",
        "hostpathvolumesource.go",
        "httpgetaction.go",
        "httpheader.go",
        "iscsipersistentvolumesource.go",
        "iscsivolumesource.go",
        "keytopath.go",
        "lifecycle.go",
        "lifecyclehandler.go",
        "limitrange.go",
        "limitrangeitem.go",
        "limitrangespec.go",
        "loadbalanceringress.go",
        "loadbalancerstatus.go",
        "localobjectreference.go",
        "localvolumesource.go",
        "namespace.go",
        "namespacecondition.go",
        "namespacespec.go",
        "namespacestatus.go",
        "nfsvolumesource.go",
        "node.go",
        "nodeaddress.go",
        "nodeaffinity.go",
        "nodecondition.go",
        "nodeconfigsource.go",
        "nodeconfigstatus.go",
        "nodedaemonendpoints.go",
        "nodeselector.go",
        "nodeselectorrequirement.go",
        "nodeselectorterm.go",
        "nodespec.go",
        "nodestatus.go",
        "nodesysteminfo.go",
        "objectfieldselector.go",
        "objectreference.go",
        "persistentvolume.go",
        "persistentvolumeclaim.go",
        "persistentvolumeclaimcondition.go",
        "persistentvolumeclaimspec.go",
        "persistentvolumeclaimstatus.go",
        "persistentvolumeclaimtemplate.go",
        "persistentvolumeclaimvolumesource.go",
        "persistentvolumesource.go",
        "persistentvolumespec.go",
        "persistentvolumestatus.go",
        "photonpersistentdiskvolumesource.go",
        "pod.go",
        "podaffinity.go",
        "podaffinityterm.go",
        "podantiaffinity.go",
        "podcondition.go",
        "poddnsconfig.go",
        "poddnsconfigoption.go",
        "podip.go",
        "podos.go",
        "podreadinessgate.go",
        "podsecuritycontext.go",
        "podspec.go",
        "podstatus.go",
        "podtemplate.go",
        "podtemplatespec.go",
        "portstatus.go",
        "portworxvolumesource.go",
        "preferredschedulingterm.go",
        "probe.go",
        "probehandler.go",
        "projectedvolumesource.go",
        "quobytevolumesource.go",
        "rbdpersistentvolumesource.go",
        "rbdvolumesource.go",
        "replicationcontroller.go",
        "replicationcontrollercondition.go",
        "replicationcontrollerspec.go",
        "replicationcontrollerstatus.go",
        "resourcefieldselector.go",
        "resourcequota.go",
        "resourcequotaspec.go",
        "resourcequotastatus.go",
        "resourcerequirements.go",
        "scaleiopersistentvolumesource.go",
        "scaleiovolumesource.go",
        "scopedresourceselectorrequirement.go",
        "scopeselector.go",
        "seccompprofile.go",
        "secret.go",
        "secretenvsource.go",
        "secretkeyselector.go",
        "secretprojection.go",
        "secretreference.go",
        "secretvolumesource.go",
        "securitycontext.go",
        "selinuxoptions.go",
        "service.go",
        "serviceaccount.go",
        "serviceaccounttokenprojection.go",
        "serviceport.go",
        "servicespec.go",
        "servicestatus.go",
        "sessionaffinityconfig.go",
        "storageospersistentvolumesource.go",
        "storageosvolumesource.go",
        "sysctl.go",
        "taint.go",
        "tcpsocketaction.go",
        "toleration.go",
        "topologyselectorlabelrequirement.go",
        "topologyselectorterm.go",
        "topologyspreadconstraint.go",
        "typedlocalobjectreference.go",
        "volume.go",
        "volumedevice.go",
        "volumemount.go",
        "volumenodeaffinity.go",
        "volumeprojection.go",
        "volumesource.go",
        "vspherevirtualdiskvolumesource.go",
        "weightedpodaffinityterm.go",
        "windowssecuritycontextoptions.go",
    ],
    importmap = "kubevirt.io/kubevirt/vendor/k8s.io/client-go/applyconfigurations/core/v1",
    importpath = "k8s.io/client-go/applyconfigurations/core/v1",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/resource:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/types:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/intstr:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/managedfields:go_default_library",
        "//vendor/k8s.io/client-go/applyconfigurations/internal:go_default_library",
        "//vendor/k8s.io/client-go/applyconfigurations/meta/v1:go_default_library",
    ],
)
