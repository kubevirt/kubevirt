// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Packages Packages
//
// List packages, short view
// swagger:model Packages
type Packages []*PackagesItems0

// Validate validates this packages
func (m Packages) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {
		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {
			if err := m[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// PackagesItems0 test
// swagger:model PackagesItems0
type PackagesItems0 struct {

	// created_at
	//
	// Package creation date
	CreatedAt string `json:"created_at,omitempty"`

	// default-release
	//
	// Default/latest release version
	Default string `json:"default,omitempty"`

	// available-manifests
	//
	// All formats
	Manifests []string `json:"manifests"`

	// package-name
	//
	// Package name
	Name string `json:"name,omitempty"`

	// available-releases
	//
	// All available releases
	Releases []string `json:"releases"`

	// visibility
	//
	// package visibility (public or private)
	Visibility string `json:"visibility,omitempty"`
}

// Validate validates this packages items0
func (m *PackagesItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PackagesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PackagesItems0) UnmarshalBinary(b []byte) error {
	var res PackagesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
