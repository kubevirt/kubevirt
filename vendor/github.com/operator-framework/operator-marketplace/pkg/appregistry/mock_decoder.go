// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/appregistry/decoder.go

// Package appregistry is a generated GoMock package.
package appregistry

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockblobDecoder is a mock of blobDecoder interface
type MockblobDecoder struct {
	ctrl     *gomock.Controller
	recorder *MockblobDecoderMockRecorder
}

// MockblobDecoderMockRecorder is the mock recorder for MockblobDecoder
type MockblobDecoderMockRecorder struct {
	mock *MockblobDecoder
}

// NewMockblobDecoder creates a new mock instance
func NewMockblobDecoder(ctrl *gomock.Controller) *MockblobDecoder {
	mock := &MockblobDecoder{ctrl: ctrl}
	mock.recorder = &MockblobDecoderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockblobDecoder) EXPECT() *MockblobDecoderMockRecorder {
	return m.recorder
}

// Decode mocks base method
func (m *MockblobDecoder) Decode(encoded []byte) ([]byte, error) {
	ret := m.ctrl.Call(m, "Decode", encoded)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Decode indicates an expected call of Decode
func (mr *MockblobDecoderMockRecorder) Decode(encoded interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Decode", reflect.TypeOf((*MockblobDecoder)(nil).Decode), encoded)
}
