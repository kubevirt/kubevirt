load("@io_bazel_rules_go//go:def.bzl", "go_library")

package(
    licenses = ["notice"],  # Apache 2.0
)

go_library(
    name = "go_default_library",
    srcs = [
        "cel.go",
        "decls.go",
        "env.go",
        "folding.go",
        "inlining.go",
        "io.go",
        "library.go",
        "macro.go",
        "optimizer.go",
        "options.go",
        "program.go",
        "validator.go",
    ],
    importmap = "kubevirt.io/kubevirt/vendor/github.com/google/cel-go/cel",
    importpath = "github.com/google/cel-go/cel",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/google/cel-go/checker:go_default_library",
        "//vendor/github.com/google/cel-go/checker/decls:go_default_library",
        "//vendor/github.com/google/cel-go/common:go_default_library",
        "//vendor/github.com/google/cel-go/common/ast:go_default_library",
        "//vendor/github.com/google/cel-go/common/containers:go_default_library",
        "//vendor/github.com/google/cel-go/common/decls:go_default_library",
        "//vendor/github.com/google/cel-go/common/functions:go_default_library",
        "//vendor/github.com/google/cel-go/common/operators:go_default_library",
        "//vendor/github.com/google/cel-go/common/overloads:go_default_library",
        "//vendor/github.com/google/cel-go/common/stdlib:go_default_library",
        "//vendor/github.com/google/cel-go/common/types:go_default_library",
        "//vendor/github.com/google/cel-go/common/types/pb:go_default_library",
        "//vendor/github.com/google/cel-go/common/types/ref:go_default_library",
        "//vendor/github.com/google/cel-go/common/types/traits:go_default_library",
        "//vendor/github.com/google/cel-go/interpreter:go_default_library",
        "//vendor/github.com/google/cel-go/parser:go_default_library",
        "//vendor/google.golang.org/genproto/googleapis/api/expr/v1alpha1:go_default_library",
        "//vendor/google.golang.org/protobuf/proto:go_default_library",
        "//vendor/google.golang.org/protobuf/reflect/protodesc:go_default_library",
        "//vendor/google.golang.org/protobuf/reflect/protoreflect:go_default_library",
        "//vendor/google.golang.org/protobuf/reflect/protoregistry:go_default_library",
        "//vendor/google.golang.org/protobuf/types/descriptorpb:go_default_library",
        "//vendor/google.golang.org/protobuf/types/dynamicpb:go_default_library",
        "//vendor/google.golang.org/protobuf/types/known/anypb:go_default_library",
    ],
)
