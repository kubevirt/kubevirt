// Code generated by swagger-doc. DO NOT EDIT.

package v1alpha1

func (VirtualMachineFlavor) SwaggerDoc() map[string]string {
	return map[string]string{
		"":         "VirtualMachineFlavor resource contains common VirtualMachine configuration\nthat can be used by multiple VirtualMachine resources.\n\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+k8s:openapi-gen=true\n+genclient",
		"profiles": "+listType=map\n+listMapKey=name",
	}
}

func (VirtualMachineFlavorList) SwaggerDoc() map[string]string {
	return map[string]string{
		"": "VirtualMachineFlavorList is a list of VirtualMachineFlavor resources.\n\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+k8s:openapi-gen=true",
	}
}

func (VirtualMachineClusterFlavor) SwaggerDoc() map[string]string {
	return map[string]string{
		"":         "VirtualMachineClusterFlavor is a cluster scoped version of VirtualMachineFlavor resource.\n\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+k8s:openapi-gen=true\n+genclient\n+genclient:nonNamespaced",
		"profiles": "+listType=map\n+listMapKey=name",
	}
}

func (VirtualMachineClusterFlavorList) SwaggerDoc() map[string]string {
	return map[string]string{
		"": "VirtualMachineClusterFlavorList is a list of VirtualMachineClusterFlavor resources.\n\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+k8s:openapi-gen=true",
	}
}

func (VirtualMachineFlavorProfile) SwaggerDoc() map[string]string {
	return map[string]string{
		"":                "VirtualMachineFlavorProfile contains definitions that will be applied to VirtualMachine.\n\n+k8s:openapi-gen=true",
		"name":            "Name specifies the name of this custom profile.",
		"default":         "Default specifies if this VirtualMachineFlavorProfile is the default for the VirtualMachineFlavor.\nZero or one profile can be set to default.\n\n+optional",
		"domainTemplate":  "DomainTemplate specifies domain that will be used to fill missing values in a VMI domain.\nDevices filed is not allowed in DomainTemplate.\n\n+optional",
		"devicesDefaults": "DevicesDefaults specifies default values for various device fields.\n\n+optional",
	}
}

func (VirtualMachineFlavorDomainTemplateSpec) SwaggerDoc() map[string]string {
	return map[string]string{
		"":                "VirtualMachineFlavorDomainTemplateSpec contains the generic spec definition for the flavor.\nNote that resources and devices are optional unlike within a full DomainSpec.\n\n+k8s:openapi-gen=true",
		"resources":       "Resources describes the Compute Resources required by this vmi.\n+optional",
		"cpu":             "CPU allow specified the detailed CPU topology inside the vmi.\n+optional",
		"memory":          "Memory allow specifying the VMI memory features.\n+optional",
		"machine":         "Machine type.\n+optional",
		"firmware":        "Firmware.\n+optional",
		"clock":           "Clock sets the clock and timers of the vmi.\n+optional",
		"features":        "Features like acpi, apic, hyperv, smm.\n+optional",
		"devices":         "Devices allows adding disks, network interfaces, and others\n+optional",
		"ioThreadsPolicy": "Controls whether or not disks will share IOThreads.\nOmitting IOThreadsPolicy disables use of IOThreads.\nOne of: shared, auto\n+optional",
		"chassis":         "Chassis specifies the chassis info passed to the domain.\n+optional",
		"launchSecurity":  "Launch Security setting of the vmi.\n+optional",
	}
}

func (DevicesDefaults) SwaggerDoc() map[string]string {
	return map[string]string{
		"":                  "DevicesDefaults contains various optional defaults for Disks, Interfaces and Inputs.\n\n+k8s:openapi-gen=true",
		"diskDefaults":      "DiskDefaults optionally contains various preferred defaults for Disk Devices.\n\n+optional",
		"interfaceDefaults": "InterfaceDefaults optionally contains various preferred defaults for Interface Devices.\n\n+optional",
		"inputDefaults":     "InputDefaults optionally contains various preferred defaults for Input Devices.\n\n+optional",
	}
}

func (InputDefaults) SwaggerDoc() map[string]string {
	return map[string]string{
		"":                    "InputDefaults contains optional defaults for Inputs such as the preferred input model.\n\n+k8s:openapi-gen=true",
		"preferredInputModel": "PreferredInputModel specifices the model for Input devices.\n\n+optional",
	}
}

func (DiskDefaults) SwaggerDoc() map[string]string {
	return map[string]string{
		"":                           "DiskDefaults contains optional defaults for Disks such as the preferred bus for each Disk.DiskDevice type, preferred cache etc.\n\n+k8s:openapi-gen=true",
		"preferredDiskBus":           "PreferredDiskBus optionally defines the preffered bus for Disk Disk devices.\n\n+optional",
		"preferredLunBus":            "PreferredLunBus optionally defines the preffered bus for Lun Disk devices.\n\n+optional",
		"preferredCdromBus":          "PreferredCdromBus optionally defines the preffered bus for Cdrom Disk devices.\n\n+optional",
		"preferredDedicatedIoThread": "PreferredDedicatedIoThread optionally enables dedicated IO threads for Disk devices.\n\n+optional",
		"preferredCache":             "PreferredCache optionally defines the DriverCache to be used by Disk devices.\n\n+optional",
		"preferredIo":                "PreferredIo optionally defines the QEMU disk IO mode to be used by Disk devices.\n\n+optional",
		"preferredBlockSize":         "PreferredBlockSize optionally defines the block size of Disk devices.\n\n+optional",
	}
}

func (InterfaceDefaults) SwaggerDoc() map[string]string {
	return map[string]string{
		"":                        "InterfaceDefaults contains optional defaults for Interfaces such as the prefferd model to be used.\n\n+k8s:openapi-gen=true",
		"preferredInterfaceModel": "PreferredInterfaceModel optionally defines the preffered model to be used by Interface devices.\n\n+optional",
	}
}
