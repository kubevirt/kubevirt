// Automatically generated by MockGen. DO NOT EDIT!
// Source: manager.go

package virtwrap

import (
	gomock "github.com/golang/mock/gomock"

	v1 "kubevirt.io/kubevirt/pkg/api/v1"
	isolation "kubevirt.io/kubevirt/pkg/virt-handler/virtwrap/isolation"
	libvirt "kubevirt.io/kubevirt/pkg/virt-handler/virtwrap/libvirt"
)

// Mock of DomainManager interface
type MockDomainManager struct {
	ctrl     *gomock.Controller
	recorder *_MockDomainManagerRecorder
}

// Recorder for MockDomainManager (not exported)
type _MockDomainManagerRecorder struct {
	mock *MockDomainManager
}

func NewMockDomainManager(ctrl *gomock.Controller) *MockDomainManager {
	mock := &MockDomainManager{ctrl: ctrl}
	mock.recorder = &_MockDomainManagerRecorder{mock}
	return mock
}

func (_m *MockDomainManager) EXPECT() *_MockDomainManagerRecorder {
	return _m.recorder
}

func (_m *MockDomainManager) SyncVMSecret(vm *v1.VirtualMachine, usageType string, usageID string, secretValue string) error {
	ret := _m.ctrl.Call(_m, "SyncVMSecret", vm, usageType, usageID, secretValue)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDomainManagerRecorder) SyncVMSecret(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SyncVMSecret", arg0, arg1, arg2, arg3)
}

func (_m *MockDomainManager) RemoveVMSecrets(_param0 *v1.VirtualMachine) error {
	ret := _m.ctrl.Call(_m, "RemoveVMSecrets", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDomainManagerRecorder) RemoveVMSecrets(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RemoveVMSecrets", arg0)
}

func (_m *MockDomainManager) KillVM(_param0 *v1.VirtualMachine) error {
	ret := _m.ctrl.Call(_m, "KillVM", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDomainManagerRecorder) KillVM(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "KillVM", arg0)
}

func (_m *MockDomainManager) GetVirConn() libvirt.Connection {
	ret := _m.ctrl.Call(_m, "GetVirConn")
	ret0, _ := ret[0].(libvirt.Connection)
	return ret0
}

func (_mr *_MockDomainManagerRecorder) GetVirConn() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetVirConn")
}

func (_m *MockDomainManager) GetPodIsolationDetector() isolation.PodIsolationDetector {
	ret := _m.ctrl.Call(_m, "GetPodIsolationDetector")
	ret0, _ := ret[0].(isolation.PodIsolationDetector)
	return ret0
}

func (_mr *_MockDomainManagerRecorder) GetPodIsolationDetector() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetPodIsolationDetector")
}
