// Automatically generated by MockGen. DO NOT EDIT!
// Source: isolation.go

package isolation

import (
	gomock "github.com/golang/mock/gomock"

	v1 "kubevirt.io/kubevirt/pkg/api/v1"
)

// Mock of PodIsolationDetector interface
type MockPodIsolationDetector struct {
	ctrl     *gomock.Controller
	recorder *_MockPodIsolationDetectorRecorder
}

// Recorder for MockPodIsolationDetector (not exported)
type _MockPodIsolationDetectorRecorder struct {
	mock *MockPodIsolationDetector
}

func NewMockPodIsolationDetector(ctrl *gomock.Controller) *MockPodIsolationDetector {
	mock := &MockPodIsolationDetector{ctrl: ctrl}
	mock.recorder = &_MockPodIsolationDetectorRecorder{mock}
	return mock
}

func (_m *MockPodIsolationDetector) EXPECT() *_MockPodIsolationDetectorRecorder {
	return _m.recorder
}

func (_m *MockPodIsolationDetector) Detect(vm *v1.VirtualMachineInstance) (*IsolationResult, error) {
	ret := _m.ctrl.Call(_m, "Detect", vm)
	ret0, _ := ret[0].(*IsolationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockPodIsolationDetectorRecorder) Detect(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Detect", arg0)
}

func (_m *MockPodIsolationDetector) Whitelist(controller []string) PodIsolationDetector {
	ret := _m.ctrl.Call(_m, "Whitelist", controller)
	ret0, _ := ret[0].(PodIsolationDetector)
	return ret0
}

func (_mr *_MockPodIsolationDetectorRecorder) Whitelist(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Whitelist", arg0)
}
