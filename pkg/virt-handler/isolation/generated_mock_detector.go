// Code generated by MockGen. DO NOT EDIT.
// Source: detector.go
//
// Generated by this command:
//
//	mockgen -source detector.go -package=isolation -destination=generated_mock_detector.go
//

// Package isolation is a generated GoMock package.
package isolation

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	v1 "kubevirt.io/api/core/v1"
)

// MockPodIsolationDetector is a mock of PodIsolationDetector interface.
type MockPodIsolationDetector struct {
	ctrl     *gomock.Controller
	recorder *MockPodIsolationDetectorMockRecorder
	isgomock struct{}
}

// MockPodIsolationDetectorMockRecorder is the mock recorder for MockPodIsolationDetector.
type MockPodIsolationDetectorMockRecorder struct {
	mock *MockPodIsolationDetector
}

// NewMockPodIsolationDetector creates a new mock instance.
func NewMockPodIsolationDetector(ctrl *gomock.Controller) *MockPodIsolationDetector {
	mock := &MockPodIsolationDetector{ctrl: ctrl}
	mock.recorder = &MockPodIsolationDetectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPodIsolationDetector) EXPECT() *MockPodIsolationDetectorMockRecorder {
	return m.recorder
}

// AdjustResources mocks base method.
func (m *MockPodIsolationDetector) AdjustResources(vm *v1.VirtualMachineInstance, additionalOverheadRatio *string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AdjustResources", vm, additionalOverheadRatio)
	ret0, _ := ret[0].(error)
	return ret0
}

// AdjustResources indicates an expected call of AdjustResources.
func (mr *MockPodIsolationDetectorMockRecorder) AdjustResources(vm, additionalOverheadRatio any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AdjustResources", reflect.TypeOf((*MockPodIsolationDetector)(nil).AdjustResources), vm, additionalOverheadRatio)
}

// Detect mocks base method.
func (m *MockPodIsolationDetector) Detect(vm *v1.VirtualMachineInstance) (IsolationResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Detect", vm)
	ret0, _ := ret[0].(IsolationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Detect indicates an expected call of Detect.
func (mr *MockPodIsolationDetectorMockRecorder) Detect(vm any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Detect", reflect.TypeOf((*MockPodIsolationDetector)(nil).Detect), vm)
}

// DetectForSocket mocks base method.
func (m *MockPodIsolationDetector) DetectForSocket(socket string) (IsolationResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DetectForSocket", socket)
	ret0, _ := ret[0].(IsolationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DetectForSocket indicates an expected call of DetectForSocket.
func (mr *MockPodIsolationDetectorMockRecorder) DetectForSocket(socket any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DetectForSocket", reflect.TypeOf((*MockPodIsolationDetector)(nil).DetectForSocket), socket)
}
