// Automatically generated by MockGen. DO NOT EDIT!
// Source: base.go

package devices

import (
	gomock "github.com/golang/mock/gomock"

	v1 "kubevirt.io/kubevirt/pkg/api/v1"
	isolation "kubevirt.io/kubevirt/pkg/virt-handler/isolation"
)

// Mock of Device interface
type MockDevice struct {
	ctrl     *gomock.Controller
	recorder *_MockDeviceRecorder
}

// Recorder for MockDevice (not exported)
type _MockDeviceRecorder struct {
	mock *MockDevice
}

func NewMockDevice(ctrl *gomock.Controller) *MockDevice {
	mock := &MockDevice{ctrl: ctrl}
	mock.recorder = &_MockDeviceRecorder{mock}
	return mock
}

func (_m *MockDevice) EXPECT() *_MockDeviceRecorder {
	return _m.recorder
}

func (_m *MockDevice) Setup(vmi *v1.VirtualMachineInstance, hostNamespaces *isolation.IsolationResult, podNamespaces *isolation.IsolationResult) error {
	ret := _m.ctrl.Call(_m, "Setup", vmi, hostNamespaces, podNamespaces)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDeviceRecorder) Setup(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Setup", arg0, arg1, arg2)
}

func (_m *MockDevice) Available() error {
	ret := _m.ctrl.Call(_m, "Available")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDeviceRecorder) Available() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Available")
}
