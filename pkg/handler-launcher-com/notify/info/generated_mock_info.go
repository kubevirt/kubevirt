// Automatically generated by MockGen. DO NOT EDIT!
// Source: pkg/handler-launcher-com/notify/info/info.pb.go

package info

import (
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Mock of NotifyInfoClient interface
type MockNotifyInfoClient struct {
	ctrl     *gomock.Controller
	recorder *_MockNotifyInfoClientRecorder
}

// Recorder for MockNotifyInfoClient (not exported)
type _MockNotifyInfoClientRecorder struct {
	mock *MockNotifyInfoClient
}

func NewMockNotifyInfoClient(ctrl *gomock.Controller) *MockNotifyInfoClient {
	mock := &MockNotifyInfoClient{ctrl: ctrl}
	mock.recorder = &_MockNotifyInfoClientRecorder{mock}
	return mock
}

func (_m *MockNotifyInfoClient) EXPECT() *_MockNotifyInfoClientRecorder {
	return _m.recorder
}

func (_m *MockNotifyInfoClient) Info(ctx context.Context, in *NotifyInfoRequest, opts ...grpc.CallOption) (*NotifyInfoResponse, error) {
	_s := []interface{}{ctx, in}
	for _, _x := range opts {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "Info", _s...)
	ret0, _ := ret[0].(*NotifyInfoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNotifyInfoClientRecorder) Info(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Info", _s...)
}

// Mock of NotifyInfoServer interface
type MockNotifyInfoServer struct {
	ctrl     *gomock.Controller
	recorder *_MockNotifyInfoServerRecorder
}

// Recorder for MockNotifyInfoServer (not exported)
type _MockNotifyInfoServerRecorder struct {
	mock *MockNotifyInfoServer
}

func NewMockNotifyInfoServer(ctrl *gomock.Controller) *MockNotifyInfoServer {
	mock := &MockNotifyInfoServer{ctrl: ctrl}
	mock.recorder = &_MockNotifyInfoServerRecorder{mock}
	return mock
}

func (_m *MockNotifyInfoServer) EXPECT() *_MockNotifyInfoServerRecorder {
	return _m.recorder
}

func (_m *MockNotifyInfoServer) Info(_param0 context.Context, _param1 *NotifyInfoRequest) (*NotifyInfoResponse, error) {
	ret := _m.ctrl.Call(_m, "Info", _param0, _param1)
	ret0, _ := ret[0].(*NotifyInfoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockNotifyInfoServerRecorder) Info(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Info", arg0, arg1)
}
