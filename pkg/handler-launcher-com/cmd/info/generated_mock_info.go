// Automatically generated by MockGen. DO NOT EDIT!
// Source: pkg/handler-launcher-com/cmd/info/info.pb.go

package info

import (
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Mock of CmdInfoClient interface
type MockCmdInfoClient struct {
	ctrl     *gomock.Controller
	recorder *_MockCmdInfoClientRecorder
}

// Recorder for MockCmdInfoClient (not exported)
type _MockCmdInfoClientRecorder struct {
	mock *MockCmdInfoClient
}

func NewMockCmdInfoClient(ctrl *gomock.Controller) *MockCmdInfoClient {
	mock := &MockCmdInfoClient{ctrl: ctrl}
	mock.recorder = &_MockCmdInfoClientRecorder{mock}
	return mock
}

func (_m *MockCmdInfoClient) EXPECT() *_MockCmdInfoClientRecorder {
	return _m.recorder
}

func (_m *MockCmdInfoClient) Info(ctx context.Context, in *CmdInfoRequest, opts ...grpc.CallOption) (*CmdInfoResponse, error) {
	_s := []interface{}{ctx, in}
	for _, _x := range opts {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "Info", _s...)
	ret0, _ := ret[0].(*CmdInfoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCmdInfoClientRecorder) Info(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Info", _s...)
}

// Mock of CmdInfoServer interface
type MockCmdInfoServer struct {
	ctrl     *gomock.Controller
	recorder *_MockCmdInfoServerRecorder
}

// Recorder for MockCmdInfoServer (not exported)
type _MockCmdInfoServerRecorder struct {
	mock *MockCmdInfoServer
}

func NewMockCmdInfoServer(ctrl *gomock.Controller) *MockCmdInfoServer {
	mock := &MockCmdInfoServer{ctrl: ctrl}
	mock.recorder = &_MockCmdInfoServerRecorder{mock}
	return mock
}

func (_m *MockCmdInfoServer) EXPECT() *_MockCmdInfoServerRecorder {
	return _m.recorder
}

func (_m *MockCmdInfoServer) Info(_param0 context.Context, _param1 *CmdInfoRequest) (*CmdInfoResponse, error) {
	ret := _m.ctrl.Call(_m, "Info", _param0, _param1)
	ret0, _ := ret[0].(*CmdInfoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCmdInfoServerRecorder) Info(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Info", arg0, arg1)
}
