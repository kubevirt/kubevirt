// Automatically generated by MockGen. DO NOT EDIT!
// Source: authorizer.go

package rest

import (
	go_restful "github.com/emicklei/go-restful"
	gomock "github.com/golang/mock/gomock"
)

// Mock of VirtApiAuthorizor interface
type MockVirtApiAuthorizor struct {
	ctrl     *gomock.Controller
	recorder *_MockVirtApiAuthorizorRecorder
}

// Recorder for MockVirtApiAuthorizor (not exported)
type _MockVirtApiAuthorizorRecorder struct {
	mock *MockVirtApiAuthorizor
}

func NewMockVirtApiAuthorizor(ctrl *gomock.Controller) *MockVirtApiAuthorizor {
	mock := &MockVirtApiAuthorizor{ctrl: ctrl}
	mock.recorder = &_MockVirtApiAuthorizorRecorder{mock}
	return mock
}

func (_m *MockVirtApiAuthorizor) EXPECT() *_MockVirtApiAuthorizorRecorder {
	return _m.recorder
}

func (_m *MockVirtApiAuthorizor) Authorize(req *go_restful.Request) (bool, string, error) {
	ret := _m.ctrl.Call(_m, "Authorize", req)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockVirtApiAuthorizorRecorder) Authorize(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Authorize", arg0)
}

func (_m *MockVirtApiAuthorizor) AddUserHeaders(header []string) {
	_m.ctrl.Call(_m, "AddUserHeaders", header)
}

func (_mr *_MockVirtApiAuthorizorRecorder) AddUserHeaders(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddUserHeaders", arg0)
}

func (_m *MockVirtApiAuthorizor) GetUserHeaders() []string {
	ret := _m.ctrl.Call(_m, "GetUserHeaders")
	ret0, _ := ret[0].([]string)
	return ret0
}

func (_mr *_MockVirtApiAuthorizorRecorder) GetUserHeaders() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetUserHeaders")
}

func (_m *MockVirtApiAuthorizor) AddGroupHeaders(header []string) {
	_m.ctrl.Call(_m, "AddGroupHeaders", header)
}

func (_mr *_MockVirtApiAuthorizorRecorder) AddGroupHeaders(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddGroupHeaders", arg0)
}

func (_m *MockVirtApiAuthorizor) GetGroupHeaders() []string {
	ret := _m.ctrl.Call(_m, "GetGroupHeaders")
	ret0, _ := ret[0].([]string)
	return ret0
}

func (_mr *_MockVirtApiAuthorizorRecorder) GetGroupHeaders() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetGroupHeaders")
}

func (_m *MockVirtApiAuthorizor) AddExtraPrefixHeaders(header []string) {
	_m.ctrl.Call(_m, "AddExtraPrefixHeaders", header)
}

func (_mr *_MockVirtApiAuthorizorRecorder) AddExtraPrefixHeaders(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddExtraPrefixHeaders", arg0)
}

func (_m *MockVirtApiAuthorizor) GetExtraPrefixHeaders() []string {
	ret := _m.ctrl.Call(_m, "GetExtraPrefixHeaders")
	ret0, _ := ret[0].([]string)
	return ret0
}

func (_mr *_MockVirtApiAuthorizorRecorder) GetExtraPrefixHeaders() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetExtraPrefixHeaders")
}
