load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "common.go",
        "generated_mock_common.go",
        "generated_mock_network.go",
        "generated_mock_podinterface.go",
        "network.go",
        "podinterface.go",
    ],
    importpath = "kubevirt.io/kubevirt/pkg/virt-launcher/virtwrap/network",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/api/v1:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/precond:go_default_library",
        "//pkg/virt-launcher/virtwrap/api:go_default_library",
        "//pkg/virt-launcher/virtwrap/network/dhcp:go_default_library",
        "//vendor/github.com/coreos/go-iptables/iptables:go_default_library",
        "//vendor/github.com/golang/mock/gomock:go_default_library",
        "//vendor/github.com/subgraph/libmacouflage:go_default_library",
        "//vendor/github.com/vishvananda/netlink:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "common_test.go",
        "network_suite_test.go",
        "network_test.go",
        "podinterface_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/api/v1:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/virt-launcher/virtwrap/api:go_default_library",
        "//vendor/github.com/golang/mock/gomock:go_default_library",
        "//vendor/github.com/onsi/ginkgo:go_default_library",
        "//vendor/github.com/onsi/gomega:go_default_library",
        "//vendor/github.com/vishvananda/netlink:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
    ],
)
