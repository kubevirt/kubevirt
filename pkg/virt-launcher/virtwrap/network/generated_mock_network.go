// Automatically generated by MockGen. DO NOT EDIT!
// Source: network.go

package network

import (
	gomock "github.com/golang/mock/gomock"

	v1 "kubevirt.io/client-go/api/v1"
	cache "kubevirt.io/kubevirt/pkg/network/cache"
	driver "kubevirt.io/kubevirt/pkg/network/driver"
	podnic "kubevirt.io/kubevirt/pkg/virt-launcher/virtwrap/network/podnic"
)

// Mock of podNICFactory interface
type MockpodNICFactory struct {
	ctrl     *gomock.Controller
	recorder *_MockpodNICFactoryRecorder
}

// Recorder for MockpodNICFactory (not exported)
type _MockpodNICFactoryRecorder struct {
	mock *MockpodNICFactory
}

func NewMockpodNICFactory(ctrl *gomock.Controller) *MockpodNICFactory {
	mock := &MockpodNICFactory{ctrl: ctrl}
	mock.recorder = &_MockpodNICFactoryRecorder{mock}
	return mock
}

func (_m *MockpodNICFactory) EXPECT() *_MockpodNICFactoryRecorder {
	return _m.recorder
}

func (_m *MockpodNICFactory) NewPodNIC(vmi *v1.VirtualMachineInstance, network *v1.Network, handler driver.NetworkHandler, cacheFactory cache.InterfaceCacheFactory, launcherPID *int) (*podnic.PodNIC, error) {
	ret := _m.ctrl.Call(_m, "NewPodNIC", vmi, network, handler, cacheFactory, launcherPID)
	ret0, _ := ret[0].(*podnic.PodNIC)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockpodNICFactoryRecorder) NewPodNIC(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewPodNIC", arg0, arg1, arg2, arg3, arg4)
}
