{
  "swagger": "2.0",
  "info": {
   "description": "This is KubeVirt API an add-on for Kubernetes.",
   "title": "KubeVirt API",
   "contact": {
    "name": "kubevirt-dev",
    "url": "https://github.com/kubevirt/kubevirt",
    "email": "kubevirt-dev@googlegroups.com"
   },
   "license": {
    "name": "Apache 2.0",
    "url": "https://www.apache.org/licenses/LICENSE-2.0"
   }
  },
  "paths": {
   "/apis": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Get a KubeVirt API GroupList",
     "operationId": "getAPIGroup",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIGroupList"
       }
      },
      "404": {
       "description": "Not Found"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIGroupList"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Get a KubeVirt API group",
     "operationId": "getAPIGroup",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIGroup"
       }
      },
      "404": {
       "description": "Not Found"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIGroup"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Get KubeVirt API Resources",
     "operationId": "getAPIResources",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIResourceList"
       }
      },
      "404": {
       "description": "Not Found"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/healthz": {
    "get": {
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "summary": "Health endpoint",
     "operationId": "checkHealth",
     "responses": {
      "200": {
       "description": "OK"
      },
      "500": {
       "description": "Unhealthy"
      },
      "default": {
       "description": "OK"
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/namespaces/{namespace}/offlinevirtualmachines": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a list of OfflineVirtualMachine objects.",
     "operationId": "listNamespacedOfflineVirtualMachine",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachineList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachineList"
       }
      }
     }
    },
    "post": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Create a OfflineVirtualMachine object.",
     "operationId": "createNamespacedOfflineVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      }
     }
    },
    "delete": {
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Delete a collection of OfflineVirtualMachine objects.",
     "operationId": "deleteCollectionNamespacedOfflineVirtualMachine",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/namespaces/{namespace}/offlinevirtualmachines/{name}": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a OfflineVirtualMachine object.",
     "operationId": "readNamespacedOfflineVirtualMachine",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      }
     }
    },
    "put": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Update a OfflineVirtualMachine object.",
     "operationId": "replaceNamespacedOfflineVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      }
     }
    },
    "delete": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Delete a OfflineVirtualMachine object.",
     "operationId": "deleteNamespacedOfflineVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      },
      {
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      }
     }
    },
    "patch": {
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "summary": "Patch a OfflineVirtualMachine object.",
     "operationId": "patchNamespacedOfflineVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachine"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinepresets": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a list of VirtualMachinePreset objects.",
     "operationId": "listNamespacedVirtualMachinePreset",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePresetList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePresetList"
       }
      }
     }
    },
    "post": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Create a VirtualMachinePreset object.",
     "operationId": "createNamespacedVirtualMachinePreset",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      }
     }
    },
    "delete": {
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Delete a collection of VirtualMachinePreset objects.",
     "operationId": "deleteCollectionNamespacedVirtualMachinePreset",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinepresets/{name}": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a VirtualMachinePreset object.",
     "operationId": "readNamespacedVirtualMachinePreset",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      }
     }
    },
    "put": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Update a VirtualMachinePreset object.",
     "operationId": "replaceNamespacedVirtualMachinePreset",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      }
     }
    },
    "delete": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Delete a VirtualMachinePreset object.",
     "operationId": "deleteNamespacedVirtualMachinePreset",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      },
      {
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      }
     }
    },
    "patch": {
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "summary": "Patch a VirtualMachinePreset object.",
     "operationId": "patchNamespacedVirtualMachinePreset",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePreset"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinereplicasets": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a list of VirtualMachineReplicaSet objects.",
     "operationId": "listNamespacedVirtualMachineReplicaSet",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSetList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSetList"
       }
      }
     }
    },
    "post": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Create a VirtualMachineReplicaSet object.",
     "operationId": "createNamespacedVirtualMachineReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      }
     }
    },
    "delete": {
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Delete a collection of VirtualMachineReplicaSet objects.",
     "operationId": "deleteCollectionNamespacedVirtualMachineReplicaSet",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinereplicasets/{name}": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a VirtualMachineReplicaSet object.",
     "operationId": "readNamespacedVirtualMachineReplicaSet",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      }
     }
    },
    "put": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Update a VirtualMachineReplicaSet object.",
     "operationId": "replaceNamespacedVirtualMachineReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      }
     }
    },
    "delete": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Delete a VirtualMachineReplicaSet object.",
     "operationId": "deleteNamespacedVirtualMachineReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      },
      {
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      }
     }
    },
    "patch": {
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "summary": "Patch a VirtualMachineReplicaSet object.",
     "operationId": "patchNamespacedVirtualMachineReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachines": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a list of VirtualMachine objects.",
     "operationId": "listNamespacedVirtualMachine",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineList"
       }
      }
     }
    },
    "post": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Create a VirtualMachine object.",
     "operationId": "createNamespacedVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      }
     }
    },
    "delete": {
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Delete a collection of VirtualMachine objects.",
     "operationId": "deleteCollectionNamespacedVirtualMachine",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachines/{name}": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a VirtualMachine object.",
     "operationId": "readNamespacedVirtualMachine",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      }
     }
    },
    "put": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Update a VirtualMachine object.",
     "operationId": "replaceNamespacedVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      }
     }
    },
    "delete": {
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "summary": "Delete a VirtualMachine object.",
     "operationId": "deleteNamespacedVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      },
      {
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      }
     }
    },
    "patch": {
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "summary": "Patch a VirtualMachine object.",
     "operationId": "patchNamespacedVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/offlinevirtualmachines": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a list of all OfflineVirtualMachine objects.",
     "operationId": "listOfflineVirtualMachineForAllNamespaces",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachineList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.OfflineVirtualMachineList"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/virtualmachinepresets": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a list of all VirtualMachinePreset objects.",
     "operationId": "listVirtualMachinePresetForAllNamespaces",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePresetList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachinePresetList"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/virtualmachinereplicasets": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a list of all VirtualMachineReplicaSet objects.",
     "operationId": "listVirtualMachineReplicaSetForAllNamespaces",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSetList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineReplicaSetList"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/virtualmachines": {
    "get": {
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "summary": "Get a list of all VirtualMachine objects.",
     "operationId": "listVirtualMachineForAllNamespaces",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineList"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/watch/namespaces/{namespace}/offlinevirtualmachines": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Watch a OfflineVirtualMachine object.",
     "operationId": "watchNamespacedOfflineVirtualMachine",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/watch/namespaces/{namespace}/virtualmachinepresets": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Watch a VirtualMachinePreset object.",
     "operationId": "watchNamespacedVirtualMachinePreset",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/watch/namespaces/{namespace}/virtualmachinereplicasets": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Watch a VirtualMachineReplicaSet object.",
     "operationId": "watchNamespacedVirtualMachineReplicaSet",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/watch/namespaces/{namespace}/virtualmachines": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Watch a VirtualMachine object.",
     "operationId": "watchNamespacedVirtualMachine",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/watch/offlinevirtualmachines": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Watch a OfflineVirtualMachineList object.",
     "operationId": "watchOfflineVirtualMachineListForAllNamespaces",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/watch/virtualmachinepresets": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Watch a VirtualMachinePresetList object.",
     "operationId": "watchVirtualMachinePresetListForAllNamespaces",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/watch/virtualmachinereplicasets": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Watch a VirtualMachineReplicaSetList object.",
     "operationId": "watchVirtualMachineReplicaSetListForAllNamespaces",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1alpha1/watch/virtualmachines": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Watch a VirtualMachineList object.",
     "operationId": "watchVirtualMachineListForAllNamespaces",
     "parameters": [
      {
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Get a KubeVirt API Group",
     "operationId": "getAPIGroup",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIGroup"
       }
      },
      "404": {
       "description": "Not Found"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIGroup"
       }
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha1": {
    "get": {
     "produces": [
      "application/json"
     ],
     "summary": "Get a KubeVirt API resources",
     "operationId": "getAPIResources",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIResourceList"
       }
      },
      "404": {
       "description": "Not Found"
      },
      "default": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIResourceList"
       }
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachines/{name}/console": {
    "get": {
     "summary": "Open a websocket connection to a serial console on the specified VM.",
     "operationId": "console",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachines/{name}/test": {
    "get": {
     "summary": "Test endpoint verifying apiserver connectivity.",
     "operationId": "test",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachines/{name}/vnc": {
    "get": {
     "summary": "Open a websocket connection to connect to VNC on the specified VM.",
     "operationId": "vnc",
     "parameters": [
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "pattern": "[a-z0-9][a-z0-9\\-]*",
       "type": "string",
       "description": "Name of the resource",
       "name": "name",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha1/version": {
    "get": {
     "produces": [
      "application/json"
     ],
     "operationId": "version",
     "responses": {
      "200": {
       "description": "OK"
      }
     }
    }
   }
  },
  "definitions": {
   "types.UID": {},
   "v1.APIGroup": {
    "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
    "required": [
     "name",
     "versions",
     "serverAddressByClientCIDRs"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "name is the name of the group.",
      "type": "string"
     },
     "preferredVersion": {
      "description": "preferredVersion is the version preferred by the API server, which probably is the storage version.",
      "$ref": "#/definitions/v1.GroupVersionForDiscovery"
     },
     "serverAddressByClientCIDRs": {
      "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ServerAddressByClientCIDR"
      }
     },
     "versions": {
      "description": "versions are the versions supported in this group.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.GroupVersionForDiscovery"
      }
     }
    }
   },
   "v1.APIGroupList": {
    "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
    "required": [
     "groups"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "groups": {
      "description": "groups is a list of APIGroup.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.APIGroup"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     }
    }
   },
   "v1.APIResource": {
    "description": "APIResource specifies the name of a resource and whether it is namespaced.",
    "required": [
     "name",
     "singularName",
     "namespaced",
     "kind",
     "verbs"
    ],
    "properties": {
     "categories": {
      "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "group": {
      "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
      "type": "string"
     },
     "kind": {
      "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
      "type": "string"
     },
     "name": {
      "description": "name is the plural name of the resource.",
      "type": "string"
     },
     "namespaced": {
      "description": "namespaced indicates if a resource is namespaced or not.",
      "type": "boolean"
     },
     "shortNames": {
      "description": "shortNames is a list of suggested short names of the resource.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "singularName": {
      "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
      "type": "string"
     },
     "verbs": {
      "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "version": {
      "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
      "type": "string"
     }
    }
   },
   "v1.APIResourceList": {
    "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
    "required": [
     "groupVersion",
     "resources"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "groupVersion": {
      "description": "groupVersion is the group and version this APIResourceList is for.",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "resources": {
      "description": "resources contains the name of the resources and if they are namespaced.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.APIResource"
      }
     }
    }
   },
   "v1.Affinity": {
    "description": "Affinity groups all the affinity rules related to a VM",
    "properties": {
     "nodeAffinity": {
      "description": "Node affinity support",
      "$ref": "#/definitions/v1.NodeAffinity"
     }
    }
   },
   "v1.CDRomTarget": {
    "properties": {
     "bus": {
      "description": "Bus indicates the type of disk device to emulate.\nsupported values: virtio, sata, scsi, ide",
      "type": "string"
     },
     "readonly": {
      "description": "ReadOnly\nDefaults to true",
      "type": "boolean"
     },
     "tray": {
      "description": "Tray indicates if the tray of the device is open or closed.\nAllowed values are \"open\" and \"closed\"\nDefaults to closed\n+optional",
      "type": "string"
     }
    }
   },
   "v1.CPU": {
    "description": "CPU allow specifying the CPU topology",
    "properties": {
     "cores": {
      "description": "Cores specifies the number of cores inside the vm.\nMust be a value greater or equal 1.",
      "type": "integer"
     }
    }
   },
   "v1.Capabilities": {
    "description": "Adds and removes POSIX capabilities from running containers.",
    "properties": {
     "add": {
      "description": "Added capabilities",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Capability"
      }
     },
     "drop": {
      "description": "Removed capabilities",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Capability"
      }
     }
    }
   },
   "v1.Capability": {},
   "v1.Clock": {
    "description": "Represents the clock and timers of a vm",
    "required": [
     "timer"
    ],
    "properties": {
     "timer": {
      "description": "Timer specifies whih timers are attached to the vm",
      "$ref": "#/definitions/v1.Timer"
     },
     "timezone": {
      "description": "Timezone sets the guest clock to the specified timezone.\nZone name follows the TZ environment variable format (e.g. 'America/New_York')",
      "$ref": "#/definitions/v1.ClockOffsetTimezone"
     },
     "utc": {
      "description": "UTC sets the guest clock to UTC on each boot. If an offset is specified,\nguest changes to the clock will be kept during reboots and are not reset.",
      "$ref": "#/definitions/v1.ClockOffsetUTC"
     }
    }
   },
   "v1.ClockOffsetTimezone": {},
   "v1.ClockOffsetUTC": {
    "description": "UTC sets the guest clock to UTC on each boot.",
    "properties": {
     "offsetSeconds": {
      "description": "OffsetSeconds specifies an offset in seconds, relative to UTC. If set,\nguest changes to the clock will be kept during reboots and not reset.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.CloudInitNoCloudSource": {
    "description": "Represents a cloud-init nocloud user data source\nMore info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html",
    "properties": {
     "secretRef": {
      "description": "UserDataSecretRef references a k8s secret that contains NoCloud userdata\n+ optional",
      "$ref": "#/definitions/v1.LocalObjectReference"
     },
     "userData": {
      "description": "UserData contains NoCloud inline cloud-init userdata\n+ optional",
      "type": "string"
     },
     "userDataBase64": {
      "description": "UserDataBase64 contains NoCloud cloud-init userdata as a base64 encoded string\n+ optional",
      "type": "string"
     }
    }
   },
   "v1.ConfigMapEnvSource": {
    "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
    "properties": {
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "optional": {
      "description": "Specify whether the ConfigMap must be defined",
      "type": "boolean"
     }
    }
   },
   "v1.ConfigMapKeySelector": {
    "description": "Selects a key from a ConfigMap.",
    "required": [
     "key"
    ],
    "properties": {
     "key": {
      "description": "The key to select.",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "optional": {
      "description": "Specify whether the ConfigMap or it's key must be defined",
      "type": "boolean"
     }
    }
   },
   "v1.Container": {
    "description": "A single application container that you want to run within a pod.",
    "required": [
     "name"
    ],
    "properties": {
     "args": {
      "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "command": {
      "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "env": {
      "description": "List of environment variables to set in the container. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.EnvVar"
      }
     },
     "envFrom": {
      "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.EnvFromSource"
      }
     },
     "image": {
      "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
      "type": "string"
     },
     "imagePullPolicy": {
      "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
      "type": "string"
     },
     "lifecycle": {
      "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
      "$ref": "#/definitions/v1.Lifecycle"
     },
     "livenessProbe": {
      "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "$ref": "#/definitions/v1.Probe"
     },
     "name": {
      "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
      "type": "string"
     },
     "ports": {
      "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ContainerPort"
      }
     },
     "readinessProbe": {
      "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "$ref": "#/definitions/v1.Probe"
     },
     "resources": {
      "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
      "$ref": "#/definitions/v1.ResourceRequirements"
     },
     "securityContext": {
      "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
      "$ref": "#/definitions/v1.SecurityContext"
     },
     "stdin": {
      "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
      "type": "boolean"
     },
     "stdinOnce": {
      "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
      "type": "boolean"
     },
     "terminationMessagePath": {
      "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
      "type": "string"
     },
     "terminationMessagePolicy": {
      "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
      "type": "string"
     },
     "tty": {
      "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
      "type": "boolean"
     },
     "volumeDevices": {
      "description": "volumeDevices is the list of block devices to be used by the container. This is an alpha feature and may change in the future.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.VolumeDevice"
      }
     },
     "volumeMounts": {
      "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.VolumeMount"
      }
     },
     "workingDir": {
      "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
      "type": "string"
     }
    }
   },
   "v1.ContainerPort": {
    "description": "ContainerPort represents a network port in a single container.",
    "required": [
     "containerPort"
    ],
    "properties": {
     "containerPort": {
      "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536.",
      "type": "integer",
      "format": "int32"
     },
     "hostIP": {
      "description": "What host IP to bind the external port to.",
      "type": "string"
     },
     "hostPort": {
      "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
      "type": "integer",
      "format": "int32"
     },
     "name": {
      "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
      "type": "string"
     },
     "protocol": {
      "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
      "type": "string"
     }
    }
   },
   "v1.DeleteOptions": {
    "description": "DeleteOptions may be provided when deleting an API object.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "gracePeriodSeconds": {
      "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
      "type": "integer",
      "format": "int64"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "orphanDependents": {
      "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
      "type": "boolean"
     },
     "preconditions": {
      "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
      "$ref": "#/definitions/v1.Preconditions"
     },
     "propagationPolicy": {
      "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
      "$ref": "#/definitions/v1.DeletionPropagation"
     }
    }
   },
   "v1.DeletionPropagation": {},
   "v1.Devices": {
    "properties": {
     "disks": {
      "description": "Disks describes disks, cdroms, floppy and luns which are connected to the vm",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Disk"
      }
     },
     "watchdog": {
      "description": "Watchdog describes a watchdog device which can be added to the vm",
      "$ref": "#/definitions/v1.Watchdog"
     }
    }
   },
   "v1.Disk": {
    "required": [
     "name",
     "volumeName"
    ],
    "properties": {
     "cdrom": {
      "description": "Attach a volume as a cdrom to the vm",
      "$ref": "#/definitions/v1.CDRomTarget"
     },
     "disk": {
      "description": "Attach a volume as a disk to the vm",
      "$ref": "#/definitions/v1.DiskTarget"
     },
     "floppy": {
      "description": "Attach a volume as a floppy to the vm",
      "$ref": "#/definitions/v1.FloppyTarget"
     },
     "lun": {
      "description": "Attach a volume as a LUN to the vm",
      "$ref": "#/definitions/v1.LunTarget"
     },
     "name": {
      "description": "Name is the device name",
      "type": "string"
     },
     "volumeName": {
      "description": "Name of the volume which is referenced\nMust match the Name of a Volume.",
      "type": "string"
     }
    }
   },
   "v1.DiskTarget": {
    "properties": {
     "bus": {
      "description": "Bus indicates the type of disk device to emulate.\nsupported values: virtio, sata, scsi, ide",
      "type": "string"
     },
     "readonly": {
      "description": "ReadOnly\nDefaults to false",
      "type": "boolean"
     }
    }
   },
   "v1.DomainSpec": {
    "required": [
     "devices"
    ],
    "properties": {
     "clock": {
      "description": "Clock sets the clock and timers of the vm.\n+optional",
      "$ref": "#/definitions/v1.Clock"
     },
     "cpu": {
      "description": "CPU allow specified the detailed CPU topology inside the vm.\n+optional",
      "$ref": "#/definitions/v1.CPU"
     },
     "devices": {
      "description": "Devices allows adding disks, network interfaces, ...",
      "$ref": "#/definitions/v1.Devices"
     },
     "features": {
      "description": "Features like acpi, apic, hyperv\n+optional",
      "$ref": "#/definitions/v1.Features"
     },
     "firmware": {
      "description": "Firmware\n+optional",
      "$ref": "#/definitions/v1.Firmware"
     },
     "machine": {
      "description": "Machine type\n+optional",
      "$ref": "#/definitions/v1.Machine"
     },
     "resources": {
      "description": "Resources describes the Compute Resources required by this vm.",
      "$ref": "#/definitions/v1.ResourceRequirements"
     }
    }
   },
   "v1.EmptyDiskSource": {
    "description": "EmptyDisk represents a temporary disk which shares the vms lifecycle",
    "required": [
     "capacity"
    ],
    "properties": {
     "capacity": {
      "description": "Capacity of the sparse disk.",
      "type": "string"
     }
    }
   },
   "v1.EnvFromSource": {
    "description": "EnvFromSource represents the source of a set of ConfigMaps",
    "properties": {
     "configMapRef": {
      "description": "The ConfigMap to select from",
      "$ref": "#/definitions/v1.ConfigMapEnvSource"
     },
     "prefix": {
      "description": "An optional identifer to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
      "type": "string"
     },
     "secretRef": {
      "description": "The Secret to select from",
      "$ref": "#/definitions/v1.SecretEnvSource"
     }
    }
   },
   "v1.EnvVar": {
    "description": "EnvVar represents an environment variable present in a Container.",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
      "type": "string"
     },
     "value": {
      "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
      "type": "string"
     },
     "valueFrom": {
      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
      "$ref": "#/definitions/v1.EnvVarSource"
     }
    }
   },
   "v1.EnvVarSource": {
    "description": "EnvVarSource represents a source for the value of an EnvVar.",
    "properties": {
     "configMapKeyRef": {
      "description": "Selects a key of a ConfigMap.",
      "$ref": "#/definitions/v1.ConfigMapKeySelector"
     },
     "fieldRef": {
      "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP.",
      "$ref": "#/definitions/v1.ObjectFieldSelector"
     },
     "resourceFieldRef": {
      "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
      "$ref": "#/definitions/v1.ResourceFieldSelector"
     },
     "secretKeyRef": {
      "description": "Selects a key of a secret in the pod's namespace",
      "$ref": "#/definitions/v1.SecretKeySelector"
     }
    }
   },
   "v1.EphemeralVolumeSource": {
    "properties": {
     "persistentVolumeClaim": {
      "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.\nDirectly attached to the vm via qemu.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n+optional",
      "$ref": "#/definitions/v1.PersistentVolumeClaimVolumeSource"
     }
    }
   },
   "v1.ExecAction": {
    "description": "ExecAction describes a \"run in container\" action.",
    "properties": {
     "command": {
      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.FeatureAPIC": {
    "properties": {
     "enabled": {
      "description": "Enabled determines if the feature should be enabled or disabled on the guest\nDefaults to true\n+optional",
      "type": "boolean"
     },
     "endOfInterrupt": {
      "description": "EndOfInterrupt enables the end of interrupt notification in the guest\nDefaults to false\n+optional",
      "type": "boolean"
     }
    }
   },
   "v1.FeatureHyperv": {
    "description": "Hyperv specific features",
    "properties": {
     "relaxed": {
      "description": "Relaxed relaxes constraints on timer\nDefaults to the machine type setting\n+optional",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "reset": {
      "description": "Reset enables Hyperv reboot/reset for the vm\nDefaults to the machine type setting\n+optional",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "runtime": {
      "description": "Runtime\nDefaults to the machine type setting\n+optional",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "spinlocks": {
      "description": "Spinlocks indicates if spinlocks should be made available to the guest\n+optional",
      "$ref": "#/definitions/v1.FeatureSpinlocks"
     },
     "synic": {
      "description": "SyNIC enable Synthetic Interrupt Controller\nDefaults to the machine type setting\n+optional",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "synictimer": {
      "description": "SyNICTimer enable Synthetic Interrupt Controller timer\nDefaults to the machine type setting\n+optional",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "vapic": {
      "description": "VAPIC indicates whether virtual APIC is enabled\nDefaults to the machine type setting\n+optional",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "vendorid": {
      "description": "VendorID allows setting the hypervisor vendor id\nDefaults to the machine type setting\n+optional",
      "$ref": "#/definitions/v1.FeatureVendorID"
     },
     "vpindex": {
      "description": "VPIndex enables the Virtual Processor Index to help windows identifying virtual processors\nDefaults to the machine type setting\n+optional",
      "$ref": "#/definitions/v1.FeatureState"
     }
    }
   },
   "v1.FeatureSpinlocks": {
    "properties": {
     "enabled": {
      "description": "Enabled determines if the feature should be enabled or disabled on the guest\nDefaults to true\n+optional",
      "type": "boolean"
     },
     "spinlocks": {
      "description": "Retries indicates the number of retries\nMust be a value greater or equal 4096\nDefaults to 4096\n+optional",
      "type": "integer"
     }
    }
   },
   "v1.FeatureState": {
    "description": "Represents if a feature is enabled or disabled",
    "properties": {
     "enabled": {
      "description": "Enabled determines if the feature should be enabled or disabled on the guest\nDefaults to true\n+optional",
      "type": "boolean"
     }
    }
   },
   "v1.FeatureVendorID": {
    "properties": {
     "enabled": {
      "description": "Enabled determines if the feature should be enabled or disabled on the guest\nDefaults to true\n+optional",
      "type": "boolean"
     },
     "vendorid": {
      "description": "VendorID sets the hypervisor vendor id, visible to the vm\nString up to twelve characters",
      "type": "string"
     }
    }
   },
   "v1.Features": {
    "properties": {
     "acpi": {
      "description": "ACPI enables/disables ACPI insidejsondata guest\nDefaults to enabled\n+optional",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "apic": {
      "description": "Defaults to the machine type setting\n+optional",
      "$ref": "#/definitions/v1.FeatureAPIC"
     },
     "hyperv": {
      "description": "Defaults to the machine type setting\n+optional",
      "$ref": "#/definitions/v1.FeatureHyperv"
     }
    }
   },
   "v1.Firmware": {
    "properties": {
     "uuid": {
      "description": "UUID reported by the vm bios\nDefaults to a random generated uid",
      "type": "string"
     }
    }
   },
   "v1.FloppyTarget": {
    "properties": {
     "readonly": {
      "description": "ReadOnly\nDefaults to false",
      "type": "boolean"
     },
     "tray": {
      "description": "Tray indicates if the tray of the device is open or closed.\nAllowed values are \"open\" and \"closed\"\nDefaults to closed\n+optional",
      "type": "string"
     }
    }
   },
   "v1.GroupVersionForDiscovery": {
    "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
    "required": [
     "groupVersion",
     "version"
    ],
    "properties": {
     "groupVersion": {
      "description": "groupVersion specifies the API group and version in the form \"group/version\"",
      "type": "string"
     },
     "version": {
      "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
      "type": "string"
     }
    }
   },
   "v1.HPETTimer": {
    "properties": {
     "present": {
      "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer.\nDefaults to true\n+optional",
      "type": "boolean"
     },
     "tickPolicy": {
      "description": "TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest\nOne of \"delay\", \"catchup\", \"merge\", \"discard\"",
      "type": "string"
     }
    }
   },
   "v1.HTTPGetAction": {
    "description": "HTTPGetAction describes an action based on HTTP Get requests.",
    "required": [
     "port"
    ],
    "properties": {
     "host": {
      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
      "type": "string"
     },
     "httpHeaders": {
      "description": "Custom headers to set in the request. HTTP allows repeated headers.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.HTTPHeader"
      }
     },
     "path": {
      "description": "Path to access on the HTTP server.",
      "type": "string"
     },
     "port": {
      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
      "type": "string"
     },
     "scheme": {
      "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
      "type": "string"
     }
    }
   },
   "v1.HTTPHeader": {
    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
    "required": [
     "name",
     "value"
    ],
    "properties": {
     "name": {
      "description": "The header field name",
      "type": "string"
     },
     "value": {
      "description": "The header field value",
      "type": "string"
     }
    }
   },
   "v1.Handler": {
    "description": "Handler defines a specific action that should be taken",
    "properties": {
     "exec": {
      "description": "One and only one of the following should be specified. Exec specifies the action to take.",
      "$ref": "#/definitions/v1.ExecAction"
     },
     "httpGet": {
      "description": "HTTPGet specifies the http request to perform.",
      "$ref": "#/definitions/v1.HTTPGetAction"
     },
     "tcpSocket": {
      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
      "$ref": "#/definitions/v1.TCPSocketAction"
     }
    }
   },
   "v1.HypervTimer": {
    "properties": {
     "present": {
      "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer.\nDefaults to true\n+optional",
      "type": "boolean"
     }
    }
   },
   "v1.I6300ESBWatchdog": {
    "description": "i6300esb watchdog device",
    "properties": {
     "action": {
      "description": "The action to take. Valid values are poweroff, reset, shutdown.\nDefaults to reset",
      "type": "string"
     }
    }
   },
   "v1.Initializer": {
    "description": "Initializer is information about an initializer that has not yet completed.",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "name of the process that is responsible for initializing this object.",
      "type": "string"
     }
    }
   },
   "v1.Initializers": {
    "description": "Initializers tracks the progress of initialization.",
    "required": [
     "pending"
    ],
    "properties": {
     "pending": {
      "description": "Pending is a list of initializers that must execute in order before this object is visible. When the last pending initializer is removed, and no failing result is set, the initializers struct will be set to nil and the object is considered as initialized and visible to all clients.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Initializer"
      }
     },
     "result": {
      "description": "If result is set with the Failure field, the object will be persisted to storage and then deleted, ensuring that other clients can observe the deletion.",
      "$ref": "#/definitions/v1.Status"
     }
    }
   },
   "v1.KVMTimer": {
    "properties": {
     "present": {
      "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer.\nDefaults to true\n+optional",
      "type": "boolean"
     }
    }
   },
   "v1.LabelSelector": {
    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
    "properties": {
     "matchExpressions": {
      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.LabelSelectorRequirement"
      }
     },
     "matchLabels": {
      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
      "type": "object"
     }
    }
   },
   "v1.LabelSelectorRequirement": {
    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
    "required": [
     "key",
     "operator"
    ],
    "properties": {
     "key": {
      "description": "key is the label key that the selector applies to.",
      "type": "string"
     },
     "operator": {
      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
      "type": "string"
     },
     "values": {
      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.Lifecycle": {
    "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
    "properties": {
     "postStart": {
      "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
      "$ref": "#/definitions/v1.Handler"
     },
     "preStop": {
      "description": "PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
      "$ref": "#/definitions/v1.Handler"
     }
    }
   },
   "v1.ListMeta": {
    "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
    "properties": {
     "continue": {
      "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response.",
      "type": "string"
     },
     "resourceVersion": {
      "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "selfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     }
    }
   },
   "v1.LocalObjectReference": {
    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
    "properties": {
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     }
    }
   },
   "v1.LunTarget": {
    "properties": {
     "bus": {
      "description": "Bus indicates the type of disk device to emulate.\nsupported values: virtio, sata, scsi, ide",
      "type": "string"
     },
     "readonly": {
      "description": "ReadOnly\nDefaults to false",
      "type": "boolean"
     }
    }
   },
   "v1.Machine": {
    "required": [
     "type"
    ],
    "properties": {
     "type": {
      "description": "QEMU machine type is the actual chipset of the VM.",
      "type": "string"
     }
    }
   },
   "v1.MountPropagationMode": {},
   "v1.NodeAffinity": {
    "description": "Node affinity is a group of node affinity scheduling rules.",
    "properties": {
     "preferredDuringSchedulingIgnoredDuringExecution": {
      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.PreferredSchedulingTerm"
      }
     },
     "requiredDuringSchedulingIgnoredDuringExecution": {
      "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
      "$ref": "#/definitions/v1.NodeSelector"
     }
    }
   },
   "v1.NodeSelector": {
    "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
    "required": [
     "nodeSelectorTerms"
    ],
    "properties": {
     "nodeSelectorTerms": {
      "description": "Required. A list of node selector terms. The terms are ORed.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.NodeSelectorTerm"
      }
     }
    }
   },
   "v1.NodeSelectorRequirement": {
    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
    "required": [
     "key",
     "operator"
    ],
    "properties": {
     "key": {
      "description": "The label key that the selector applies to.",
      "type": "string"
     },
     "operator": {
      "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
      "type": "string"
     },
     "values": {
      "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.NodeSelectorTerm": {
    "description": "A null or empty node selector term matches no objects.",
    "required": [
     "matchExpressions"
    ],
    "properties": {
     "matchExpressions": {
      "description": "Required. A list of node selector requirements. The requirements are ANDed.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.NodeSelectorRequirement"
      }
     }
    }
   },
   "v1.ObjectFieldSelector": {
    "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
    "required": [
     "fieldPath"
    ],
    "properties": {
     "apiVersion": {
      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
      "type": "string"
     },
     "fieldPath": {
      "description": "Path of the field to select in the specified API version.",
      "type": "string"
     }
    }
   },
   "v1.ObjectMeta": {
    "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
    "properties": {
     "annotations": {
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
      "type": "object"
     },
     "clusterName": {
      "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
      "type": "string"
     },
     "creationTimestamp": {
      "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "type": "string"
     },
     "deletionGracePeriodSeconds": {
      "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "deletionTimestamp": {
      "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "type": "string"
     },
     "finalizers": {
      "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "generateName": {
      "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency",
      "type": "string"
     },
     "generation": {
      "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "initializers": {
      "description": "An initializer is a controller which enforces some system invariant at object creation time. This field is a list of initializers that have not yet acted on this object. If nil or empty, this object has been completely initialized. Otherwise, the object is considered uninitialized and is hidden (in list/watch and get calls) from clients that haven't explicitly asked to observe uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers. Only privileged users may set or modify this list. Once it is empty, it may not be modified further by any user.",
      "$ref": "#/definitions/v1.Initializers"
     },
     "labels": {
      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
      "type": "object"
     },
     "name": {
      "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "ownerReferences": {
      "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.OwnerReference"
      }
     },
     "resourceVersion": {
      "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     },
     "uid": {
      "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.OfflineVirtualMachine": {
    "description": "OfflineVirtualMachine handles the VirtualMachines that are not running\nor are in a stopped state\nThe OfflineVirtualMachine contains the template to create the\nVirtualMachine. It also mirrors the running state of the created\nVirtualMachine in its status.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec contains the specification of VirtualMachine created",
      "$ref": "#/definitions/v1.OfflineVirtualMachineSpec"
     },
     "status": {
      "description": "Status holds the current state of the controller and brief information\nabout its associated VirtualMachine",
      "$ref": "#/definitions/v1.OfflineVirtualMachineStatus"
     }
    }
   },
   "v1.OfflineVirtualMachineCondition": {
    "description": "OfflineVirtualMachineCondition represents the state of OfflineVirtualMachine",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "type": "string"
     },
     "lastTransitionTime": {
      "type": "string"
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string"
     },
     "type": {
      "type": "string"
     }
    }
   },
   "v1.OfflineVirtualMachineList": {
    "description": "OfflineVirtualMachineList is a list of offlinevirtualmachines",
    "required": [
     "metadata",
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items is a list of OfflineVirtualMachines",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.OfflineVirtualMachine"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ListMeta"
     }
    }
   },
   "v1.OfflineVirtualMachineSpec": {
    "description": "OfflineVirtualMachineSpec describes how the proper OfflineVirtualMachine\nshould look like",
    "required": [
     "running",
     "template"
    ],
    "properties": {
     "running": {
      "description": "Running controls whether the associatied VirtualMachine is created or not",
      "type": "boolean"
     },
     "template": {
      "description": "Template is the direct specification of VirtualMachine",
      "$ref": "#/definitions/v1.VMTemplateSpec"
     }
    }
   },
   "v1.OfflineVirtualMachineStatus": {
    "description": "OfflineVirtualMachineStatus represents the status returned by the\ncontroller to describe how the OfflineVirtualMachine is doing",
    "properties": {
     "conditions": {
      "description": "Hold the state information of the OfflineVirtualMachine and its VirtualMachine",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.OfflineVirtualMachineCondition"
      }
     },
     "created": {
      "description": "Created indicates if the virtual machine is created in the cluster",
      "type": "boolean"
     },
     "ready": {
      "description": "Ready indicates if the virtual machine is running and ready",
      "type": "boolean"
     }
    }
   },
   "v1.OwnerReference": {
    "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
    "required": [
     "apiVersion",
     "kind",
     "name",
     "uid"
    ],
    "properties": {
     "apiVersion": {
      "description": "API version of the referent.",
      "type": "string"
     },
     "blockOwnerDeletion": {
      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
      "type": "boolean"
     },
     "controller": {
      "description": "If true, this reference points to the managing controller.",
      "type": "boolean"
     },
     "kind": {
      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "uid": {
      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.PITTimer": {
    "properties": {
     "present": {
      "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer.\nDefaults to true\n+optional",
      "type": "boolean"
     },
     "tickPolicy": {
      "description": "TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest\nOne of \"delay\", \"catchup\", \"discard\"",
      "type": "string"
     }
    }
   },
   "v1.Patch": {
    "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body."
   },
   "v1.PersistentVolumeClaimVolumeSource": {
    "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
    "required": [
     "claimName"
    ],
    "properties": {
     "claimName": {
      "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
      "type": "string"
     },
     "readOnly": {
      "description": "Will force the ReadOnly setting in VolumeMounts. Default false.",
      "type": "boolean"
     }
    }
   },
   "v1.Preconditions": {
    "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
    "properties": {
     "uid": {
      "description": "Specifies the target UID.",
      "$ref": "#/definitions/types.UID"
     }
    }
   },
   "v1.PreferredSchedulingTerm": {
    "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
    "required": [
     "weight",
     "preference"
    ],
    "properties": {
     "preference": {
      "description": "A node selector term, associated with the corresponding weight.",
      "$ref": "#/definitions/v1.NodeSelectorTerm"
     },
     "weight": {
      "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.Probe": {
    "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
    "properties": {
     "exec": {
      "description": "One and only one of the following should be specified. Exec specifies the action to take.",
      "$ref": "#/definitions/v1.ExecAction"
     },
     "failureThreshold": {
      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "httpGet": {
      "description": "HTTPGet specifies the http request to perform.",
      "$ref": "#/definitions/v1.HTTPGetAction"
     },
     "initialDelaySeconds": {
      "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "type": "integer",
      "format": "int32"
     },
     "periodSeconds": {
      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "successThreshold": {
      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "tcpSocket": {
      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
      "$ref": "#/definitions/v1.TCPSocketAction"
     },
     "timeoutSeconds": {
      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.RTCTimer": {
    "properties": {
     "present": {
      "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer.\nDefaults to true\n+optional",
      "type": "boolean"
     },
     "tickPolicy": {
      "description": "TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest\nOne of \"delay\", \"catchup\"",
      "type": "string"
     },
     "track": {
      "description": "Track the guest or the wall clock",
      "type": "string"
     }
    }
   },
   "v1.RegistryDiskSource": {
    "description": "Represents a docker image with an embedded disk",
    "required": [
     "image"
    ],
    "properties": {
     "image": {
      "description": "Image is the name of the image with the embedded disk",
      "type": "string"
     },
     "imagePullSecret": {
      "description": "ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.",
      "type": "string"
     }
    }
   },
   "v1.ResourceFieldSelector": {
    "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
    "required": [
     "resource"
    ],
    "properties": {
     "containerName": {
      "description": "Container name: required for volumes, optional for env vars",
      "type": "string"
     },
     "divisor": {
      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
      "type": "string"
     },
     "resource": {
      "description": "Required: resource to select",
      "type": "string"
     }
    }
   },
   "v1.ResourceRequirements": {
    "properties": {
     "limits": {
      "description": "Limits describes the maximum amount of compute resources allowed.\nValid resource keys are \"memory\" and \"cpu\".\n+optional",
      "type": "object"
     },
     "requests": {
      "description": "Requests is a description of the initial vm resources.\nValid resource keys are \"memory\" and \"cpu\".\n+optional",
      "type": "object"
     }
    }
   },
   "v1.SELinuxOptions": {
    "description": "SELinuxOptions are the labels to be applied to the container",
    "properties": {
     "level": {
      "description": "Level is SELinux level label that applies to the container.",
      "type": "string"
     },
     "role": {
      "description": "Role is a SELinux role label that applies to the container.",
      "type": "string"
     },
     "type": {
      "description": "Type is a SELinux type label that applies to the container.",
      "type": "string"
     },
     "user": {
      "description": "User is a SELinux user label that applies to the container.",
      "type": "string"
     }
    }
   },
   "v1.SecretEnvSource": {
    "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
    "properties": {
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "optional": {
      "description": "Specify whether the Secret must be defined",
      "type": "boolean"
     }
    }
   },
   "v1.SecretKeySelector": {
    "description": "SecretKeySelector selects a key of a Secret.",
    "required": [
     "key"
    ],
    "properties": {
     "key": {
      "description": "The key of the secret to select from.  Must be a valid secret key.",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "optional": {
      "description": "Specify whether the Secret or it's key must be defined",
      "type": "boolean"
     }
    }
   },
   "v1.SecurityContext": {
    "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
    "properties": {
     "allowPrivilegeEscalation": {
      "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
      "type": "boolean"
     },
     "capabilities": {
      "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
      "$ref": "#/definitions/v1.Capabilities"
     },
     "privileged": {
      "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
      "type": "boolean"
     },
     "readOnlyRootFilesystem": {
      "description": "Whether this container has a read-only root filesystem. Default is false.",
      "type": "boolean"
     },
     "runAsNonRoot": {
      "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "type": "boolean"
     },
     "runAsUser": {
      "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "type": "integer",
      "format": "int64"
     },
     "seLinuxOptions": {
      "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
      "$ref": "#/definitions/v1.SELinuxOptions"
     }
    }
   },
   "v1.ServerAddressByClientCIDR": {
    "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
    "required": [
     "clientCIDR",
     "serverAddress"
    ],
    "properties": {
     "clientCIDR": {
      "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
      "type": "string"
     },
     "serverAddress": {
      "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
      "type": "string"
     }
    }
   },
   "v1.Status": {
    "description": "Status is a return value for calls that don't return other objects.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "code": {
      "description": "Suggested HTTP return code for this status, 0 if not set.",
      "type": "integer",
      "format": "int32"
     },
     "details": {
      "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
      "$ref": "#/definitions/v1.StatusDetails"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the status of this operation.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "$ref": "#/definitions/v1.ListMeta"
     },
     "reason": {
      "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
      "type": "string"
     },
     "status": {
      "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
      "type": "string"
     }
    }
   },
   "v1.StatusCause": {
    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
    "properties": {
     "field": {
      "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
      "type": "string"
     },
     "reason": {
      "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
      "type": "string"
     }
    }
   },
   "v1.StatusDetails": {
    "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
    "properties": {
     "causes": {
      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.StatusCause"
      }
     },
     "group": {
      "description": "The group attribute of the resource associated with the status StatusReason.",
      "type": "string"
     },
     "kind": {
      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
      "type": "string"
     },
     "retryAfterSeconds": {
      "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
      "type": "integer",
      "format": "int32"
     },
     "uid": {
      "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.TCPSocketAction": {
    "description": "TCPSocketAction describes an action based on opening a socket",
    "required": [
     "port"
    ],
    "properties": {
     "host": {
      "description": "Optional: Host name to connect to, defaults to the pod IP.",
      "type": "string"
     },
     "port": {
      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
      "type": "string"
     }
    }
   },
   "v1.Timer": {
    "description": "Represents all available timers in a vm",
    "properties": {
     "hpet": {
      "description": "HPET (High Precision Event Timer) - multiple timers with periodic interrupts.",
      "$ref": "#/definitions/v1.HPETTimer"
     },
     "hyperv": {
      "description": "Hyperv (Hypervclock) - lets guests read the host’s wall clock time (paravirtualized). For windows guests.",
      "$ref": "#/definitions/v1.HypervTimer"
     },
     "kvm": {
      "description": "KVM \t(KVM clock) - lets guests read the host’s wall clock time (paravirtualized). For linux guests.",
      "$ref": "#/definitions/v1.KVMTimer"
     },
     "pit": {
      "description": "PIT (Programmable Interval Timer) - a timer with periodic interrupts.",
      "$ref": "#/definitions/v1.PITTimer"
     },
     "rtc": {
      "description": "RTC (Real Time Clock) - a continuously running timer with periodic interrupts.",
      "$ref": "#/definitions/v1.RTCTimer"
     }
    }
   },
   "v1.VMReplicaSetCondition": {
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "type": "string"
     },
     "lastTransitionTime": {
      "type": "string"
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string"
     },
     "type": {
      "type": "string"
     }
    }
   },
   "v1.VMReplicaSetSpec": {
    "required": [
     "template"
    ],
    "properties": {
     "paused": {
      "description": "Indicates that the replica set is paused.\n+optional",
      "type": "boolean"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit\nzero and not specified. Defaults to 1.\n+optional",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Label selector for pods. Existing ReplicaSets whose pods are\nselected by this will be the ones affected by this deployment.\n+optional",
      "$ref": "#/definitions/v1.LabelSelector"
     },
     "template": {
      "description": "Template describes the pods that will be created.",
      "$ref": "#/definitions/v1.VMTemplateSpec"
     }
    }
   },
   "v1.VMReplicaSetStatus": {
    "properties": {
     "conditions": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.VMReplicaSetCondition"
      }
     },
     "readyReplicas": {
      "description": "The number of ready replicas for this replica set.\n+optional",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).\n+optional",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.VMTemplateSpec": {
    "properties": {
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "VM Spec contains the VM specification.",
      "$ref": "#/definitions/v1.VirtualMachineSpec"
     }
    }
   },
   "v1.VirtualMachine": {
    "description": "VirtualMachine is *the* VM Definition. It represents a virtual machine in the runtime environment of kubernetes.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "VM Spec contains the VM specification.",
      "$ref": "#/definitions/v1.VirtualMachineSpec"
     },
     "status": {
      "description": "Status is the high level overview of how the VM is doing. It contains information available to controllers and users.",
      "$ref": "#/definitions/v1.VirtualMachineStatus"
     }
    }
   },
   "v1.VirtualMachineCondition": {
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "type": "string"
     },
     "lastTransitionTime": {
      "type": "string"
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string"
     },
     "type": {
      "type": "string"
     }
    }
   },
   "v1.VirtualMachineList": {
    "description": "VirtualMachineList is a list of VirtualMachines",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.VirtualMachine"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ListMeta"
     }
    }
   },
   "v1.VirtualMachineNetworkInterface": {
    "properties": {
     "ipAddress": {
      "description": "IP address of a Virtual Machine interface",
      "type": "string"
     },
     "mac": {
      "description": "Hardware address of a Virtual Machine interface",
      "type": "string"
     }
    }
   },
   "v1.VirtualMachinePreset": {
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "VM Spec contains the VM specification.",
      "$ref": "#/definitions/v1.VirtualMachinePresetSpec"
     }
    }
   },
   "v1.VirtualMachinePresetList": {
    "description": "VirtualMachinePresetList is a list of VirtualMachinePresets",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.VirtualMachinePreset"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ListMeta"
     }
    }
   },
   "v1.VirtualMachinePresetSpec": {
    "required": [
     "selector"
    ],
    "properties": {
     "domain": {
      "description": "Domain is the same object type as contained in VirtualMachineSpec",
      "$ref": "#/definitions/v1.DomainSpec"
     },
     "selector": {
      "description": "Selector is a label query over a set of VMs.\nRequired.",
      "$ref": "#/definitions/v1.LabelSelector"
     }
    }
   },
   "v1.VirtualMachineReplicaSet": {
    "description": "VM is *the* VM Definition. It represents a virtual machine in the runtime environment of kubernetes.",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "VM Spec contains the VM specification.",
      "$ref": "#/definitions/v1.VMReplicaSetSpec"
     },
     "status": {
      "description": "Status is the high level overview of how the VM is doing. It contains information available to controllers and users.",
      "$ref": "#/definitions/v1.VMReplicaSetStatus"
     }
    }
   },
   "v1.VirtualMachineReplicaSetList": {
    "description": "VMList is a list of VMs",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.VirtualMachineReplicaSet"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ListMeta"
     }
    }
   },
   "v1.VirtualMachineSpec": {
    "description": "VirtualMachineSpec is a description of a VirtualMachine.",
    "required": [
     "domain"
    ],
    "properties": {
     "affinity": {
      "description": "If affinity is specifies, obey all the affinity rules",
      "$ref": "#/definitions/v1.Affinity"
     },
     "domain": {
      "description": "Specification of the desired behavior of the VirtualMachine on the host.",
      "$ref": "#/definitions/v1.DomainSpec"
     },
     "hostname": {
      "description": "Specifies the hostname of the vm\nIf not specified, the hostname will be set to the name of the vm, if dhcp or cloud-init is configured properly.\n+optional",
      "type": "string"
     },
     "initContainers": {
      "description": "List of initialization containers. They are executed prior to VM-container starting",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Container"
      }
     },
     "nodeSelector": {
      "description": "NodeSelector is a selector which must be true for the vm to fit on a node.\nSelector which must match a node's labels for the vm to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n+optional",
      "type": "object"
     },
     "subdomain": {
      "description": "If specified, the fully qualified vm hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\".\nIf not specified, the vm will not have a domainname at all. The DNS entry will resolve to the vm,\nno matter if the vm itself can pick up a hostname.\n+optional",
      "type": "string"
     },
     "terminationGracePeriodSeconds": {
      "description": "Grace period observed after signalling a VM to stop after which the VM is force terminated.",
      "type": "integer",
      "format": "int64"
     },
     "volumes": {
      "description": "List of volumes that can be mounted by disks belonging to the vm.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Volume"
      }
     }
    }
   },
   "v1.VirtualMachineStatus": {
    "description": "VirtualMachineStatus represents information about the status of a VM. Status may trail the actual\nstate of a system.",
    "properties": {
     "conditions": {
      "description": "Conditions are specific points in VM's pod runtime.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.VirtualMachineCondition"
      }
     },
     "interfaces": {
      "description": "Interfaces represent the details of available network interfaces.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.VirtualMachineNetworkInterface"
      }
     },
     "nodeName": {
      "description": "NodeName is the name where the VM is currently running.",
      "type": "string"
     },
     "phase": {
      "description": "Phase is the status of the VM in kubernetes world. It is not the VM status, but partially correlates to it.",
      "type": "string"
     }
    }
   },
   "v1.Volume": {
    "description": "Volume represents a named volume in a vm.",
    "required": [
     "name"
    ],
    "properties": {
     "cloudInitNoCloud": {
      "description": "CloudInitNoCloud represents a cloud-init NoCloud user-data source.\nThe NoCloud data will be added as a disk to the vm. A proper cloud-init installation is required inside the guest.\nMore info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html\n+optional",
      "$ref": "#/definitions/v1.CloudInitNoCloudSource"
     },
     "emptyDisk": {
      "description": "EmptyDisk represents a temporary disk which shares the vms lifecycle\nMore info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html\n+optional",
      "$ref": "#/definitions/v1.EmptyDiskSource"
     },
     "ephemeral": {
      "description": "Ephemeral is a special volume source that \"wraps\" specified source and provides copy-on-write image on top of it.\n+optional",
      "$ref": "#/definitions/v1.EphemeralVolumeSource"
     },
     "name": {
      "description": "Volume's name.\nMust be a DNS_LABEL and unique within the vm.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "persistentVolumeClaim": {
      "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.\nDirectly attached to the vm via qemu.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n+optional",
      "$ref": "#/definitions/v1.PersistentVolumeClaimVolumeSource"
     },
     "registryDisk": {
      "description": "RegistryDisk references a docker image, embedding a qcow or raw disk\nMore info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html\n+optional",
      "$ref": "#/definitions/v1.RegistryDiskSource"
     }
    }
   },
   "v1.VolumeDevice": {
    "description": "volumeDevice describes a mapping of a raw block device within a container.",
    "required": [
     "name",
     "devicePath"
    ],
    "properties": {
     "devicePath": {
      "description": "devicePath is the path inside of the container that the device will be mapped to.",
      "type": "string"
     },
     "name": {
      "description": "name must match the name of a persistentVolumeClaim in the pod",
      "type": "string"
     }
    }
   },
   "v1.VolumeMount": {
    "description": "VolumeMount describes a mounting of a Volume within a container.",
    "required": [
     "name",
     "mountPath"
    ],
    "properties": {
     "mountPath": {
      "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
      "type": "string"
     },
     "mountPropagation": {
      "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationHostToContainer is used. This field is alpha in 1.8 and can be reworked or removed in a future release.",
      "$ref": "#/definitions/v1.MountPropagationMode"
     },
     "name": {
      "description": "This must match the Name of a Volume.",
      "type": "string"
     },
     "readOnly": {
      "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
      "type": "boolean"
     },
     "subPath": {
      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
      "type": "string"
     }
    }
   },
   "v1.WatchEvent": {
    "required": [
     "type",
     "object"
    ],
    "properties": {
     "object": {
      "type": "string"
     },
     "type": {
      "type": "string"
     }
    }
   },
   "v1.Watchdog": {
    "description": "Named watchdog device",
    "required": [
     "name"
    ],
    "properties": {
     "i6300esb": {
      "description": "i6300esb watchdog device\n+optional",
      "$ref": "#/definitions/v1.I6300ESBWatchdog"
     },
     "name": {
      "description": "Name of the watchdog",
      "type": "string"
     }
    }
   }
  },
  "securityDefinitions": {
   "BearerToken": {
    "description": "Bearer Token authentication",
    "type": "apiKey",
    "name": "authorization",
    "in": "header"
   }
  },
  "security": [
   {
    "BearerToken": []
   }
  ]
 }