{
  "swagger": "2.0",
  "info": {
   "description": "This is KubeVirt API an add-on for Kubernetes.",
   "title": "KubeVirt API",
   "contact": {
    "name": "kubevirt-dev",
    "url": "https://github.com/kubevirt/kubevirt",
    "email": "kubevirt-dev@googlegroups.com"
   },
   "license": {
    "name": "Apache 2.0",
    "url": "https://www.apache.org/licenses/LICENSE-2.0"
   }
  },
  "paths": {
   "/": {
    "get": {
     "description": "Get KubeVirt API root paths",
     "produces": [
      "application/json"
     ],
     "operationId": "getRootPaths",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.RootPaths"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis": {
    "get": {
     "description": "Get a KubeVirt API GroupList",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIGroupList",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIGroupList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/clone.kubevirt.io/": {
    "get": {
     "description": "Get a KubeVirt API group",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIGroup-clone.kubevirt.io",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/clone.kubevirt.io/v1alpha1/": {
    "get": {
     "description": "Get KubeVirt API Resources",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIResources-clone.kubevirt.io-v1alpha1",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/clone.kubevirt.io/v1alpha1/virtualmachineclones": {
    "get": {
     "description": "Get a list of VirtualMachineClone objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineClone",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineCloneList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineClone object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createVirtualMachineClone",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineClone"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineClone"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineClone"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineClone"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineClone objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionVirtualMachineClone",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/clone.kubevirt.io/v1alpha1/virtualmachineclones/{name}": {
    "get": {
     "description": "Get a VirtualMachineClone object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readVirtualMachineClone",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineClone"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineClone object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceVirtualMachineClone",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineClone"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineClone"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineClone"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineClone object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteVirtualMachineClone",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineClone object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchVirtualMachineClone",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineClone"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/clone.kubevirt.io/v1alpha1/watch/virtualmachineclones": {
    "get": {
     "description": "Watch a VirtualMachineCloneList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineCloneListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/export.kubevirt.io/": {
    "get": {
     "description": "Get a KubeVirt API group",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIGroup-export.kubevirt.io",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/export.kubevirt.io/v1alpha1/": {
    "get": {
     "description": "Get KubeVirt API Resources",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIResources-export.kubevirt.io-v1alpha1",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/export.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachineexports": {
    "get": {
     "description": "Get a list of VirtualMachineExport objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachineExport",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineExportList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineExport object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachineExport",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineExport"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineExport"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineExport"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineExport"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineExport objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachineExport",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/export.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachineexports/{name}": {
    "get": {
     "description": "Get a VirtualMachineExport object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachineExport",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineExport"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineExport object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachineExport",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineExport"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineExport"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineExport"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineExport object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachineExport",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineExport object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachineExport",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineExport"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/export.kubevirt.io/v1alpha1/virtualmachineexports": {
    "get": {
     "description": "Get a list of all VirtualMachineExport objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineExportForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineExportList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/export.kubevirt.io/v1alpha1/watch/namespaces/{namespace}/virtualmachineexports": {
    "get": {
     "description": "Watch a VirtualMachineExport object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachineExport",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/export.kubevirt.io/v1alpha1/watch/virtualmachineexports": {
    "get": {
     "description": "Watch a VirtualMachineExportList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineExportListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/": {
    "get": {
     "description": "Get a KubeVirt API group",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIGroup-instancetype.kubevirt.io",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/instancetype.kubevirt.io/v1beta1/": {
    "get": {
     "description": "Get KubeVirt API Resources",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIResources-instancetype.kubevirt.io-v1beta1",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/instancetype.kubevirt.io/v1beta1/namespaces/{namespace}/virtualmachineinstancetypes": {
    "get": {
     "description": "Get a list of VirtualMachineInstancetype objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachineInstancetype",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineInstancetypeList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineInstancetype object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachineInstancetype",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineInstancetype"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineInstancetype"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineInstancetype"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineInstancetype"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineInstancetype objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachineInstancetype",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/instancetype.kubevirt.io/v1beta1/namespaces/{namespace}/virtualmachineinstancetypes/{name}": {
    "get": {
     "description": "Get a VirtualMachineInstancetype object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachineInstancetype",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineInstancetype"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineInstancetype object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachineInstancetype",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineInstancetype"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineInstancetype"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineInstancetype"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineInstancetype object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachineInstancetype",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineInstancetype object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachineInstancetype",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineInstancetype"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/v1beta1/namespaces/{namespace}/virtualmachinepreferences": {
    "get": {
     "description": "Get a list of VirtualMachinePreference objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachinePreference",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachinePreferenceList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachinePreference object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachinePreference",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachinePreference"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachinePreference"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachinePreference"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachinePreference"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachinePreference objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachinePreference",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/instancetype.kubevirt.io/v1beta1/namespaces/{namespace}/virtualmachinepreferences/{name}": {
    "get": {
     "description": "Get a VirtualMachinePreference object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachinePreference",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachinePreference"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachinePreference object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachinePreference",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachinePreference"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachinePreference"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachinePreference"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachinePreference object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachinePreference",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachinePreference object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachinePreference",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachinePreference"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/v1beta1/virtualmachineclusterinstancetypes": {
    "get": {
     "description": "Get a list of VirtualMachineClusterInstancetype objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineClusterInstancetype",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterInstancetypeList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineClusterInstancetype object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createVirtualMachineClusterInstancetype",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterInstancetype"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterInstancetype"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterInstancetype"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterInstancetype"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineClusterInstancetype objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionVirtualMachineClusterInstancetype",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/instancetype.kubevirt.io/v1beta1/virtualmachineclusterinstancetypes/{name}": {
    "get": {
     "description": "Get a VirtualMachineClusterInstancetype object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readVirtualMachineClusterInstancetype",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterInstancetype"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineClusterInstancetype object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceVirtualMachineClusterInstancetype",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterInstancetype"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterInstancetype"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterInstancetype"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineClusterInstancetype object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteVirtualMachineClusterInstancetype",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineClusterInstancetype object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchVirtualMachineClusterInstancetype",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterInstancetype"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/v1beta1/virtualmachineclusterpreferences": {
    "get": {
     "description": "Get a list of VirtualMachineClusterPreference objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineClusterPreference",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterPreferenceList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineClusterPreference object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createVirtualMachineClusterPreference",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterPreference"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterPreference"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterPreference"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterPreference"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineClusterPreference objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionVirtualMachineClusterPreference",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/instancetype.kubevirt.io/v1beta1/virtualmachineclusterpreferences/{name}": {
    "get": {
     "description": "Get a VirtualMachineClusterPreference object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readVirtualMachineClusterPreference",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterPreference"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineClusterPreference object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceVirtualMachineClusterPreference",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterPreference"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterPreference"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterPreference"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineClusterPreference object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteVirtualMachineClusterPreference",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineClusterPreference object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchVirtualMachineClusterPreference",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineClusterPreference"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/v1beta1/virtualmachineinstancetypes": {
    "get": {
     "description": "Get a list of all VirtualMachineInstancetype objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineInstancetypeForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachineInstancetypeList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/v1beta1/virtualmachinepreferences": {
    "get": {
     "description": "Get a list of all VirtualMachinePreference objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachinePreferenceForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.VirtualMachinePreferenceList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/v1beta1/watch/namespaces/{namespace}/virtualmachineinstancetypes": {
    "get": {
     "description": "Watch a VirtualMachineInstancetype object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachineInstancetype",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/v1beta1/watch/namespaces/{namespace}/virtualmachinepreferences": {
    "get": {
     "description": "Watch a VirtualMachinePreference object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachinePreference",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/v1beta1/watch/virtualmachineclusterinstancetypes": {
    "get": {
     "description": "Watch a VirtualMachineClusterInstancetypeList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineClusterInstancetypeListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/v1beta1/watch/virtualmachineclusterpreferences": {
    "get": {
     "description": "Watch a VirtualMachineClusterPreferenceList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineClusterPreferenceListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/v1beta1/watch/virtualmachineinstancetypes": {
    "get": {
     "description": "Watch a VirtualMachineInstancetypeList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineInstancetypeListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/instancetype.kubevirt.io/v1beta1/watch/virtualmachinepreferences": {
    "get": {
     "description": "Watch a VirtualMachinePreferenceList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachinePreferenceListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/": {
    "get": {
     "description": "Get a KubeVirt API group",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIGroup-kubevirt.io",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1/": {
    "get": {
     "description": "Get KubeVirt API Resources",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIResources-kubevirt.io-v1",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1/kubevirt": {
    "get": {
     "description": "Get a list of all KubeVirt objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listKubeVirtForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.KubeVirtList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/kubevirt": {
    "get": {
     "description": "Get a list of KubeVirt objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedKubeVirt",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.KubeVirtList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a KubeVirt object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedKubeVirt",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.KubeVirt"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.KubeVirt"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1.KubeVirt"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1.KubeVirt"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of KubeVirt objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedKubeVirt",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/kubevirt/{name}": {
    "get": {
     "description": "Get a KubeVirt object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedKubeVirt",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.KubeVirt"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a KubeVirt object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedKubeVirt",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.KubeVirt"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.KubeVirt"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1.KubeVirt"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a KubeVirt object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedKubeVirt",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a KubeVirt object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedKubeVirt",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.KubeVirt"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancemigrations": {
    "get": {
     "description": "Get a list of VirtualMachineInstanceMigration objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachineInstanceMigration",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceMigrationList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineInstanceMigration object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachineInstanceMigration",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceMigration"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceMigration"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceMigration"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceMigration"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineInstanceMigration objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachineInstanceMigration",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancemigrations/{name}": {
    "get": {
     "description": "Get a VirtualMachineInstanceMigration object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachineInstanceMigration",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceMigration"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineInstanceMigration object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachineInstanceMigration",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceMigration"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceMigration"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceMigration"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineInstanceMigration object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachineInstanceMigration",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineInstanceMigration object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachineInstanceMigration",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceMigration"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancepresets": {
    "get": {
     "description": "Get a list of VirtualMachineInstancePreset objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachineInstancePreset",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstancePresetList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineInstancePreset object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachineInstancePreset",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstancePreset"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstancePreset"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstancePreset"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstancePreset"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineInstancePreset objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachineInstancePreset",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancepresets/{name}": {
    "get": {
     "description": "Get a VirtualMachineInstancePreset object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachineInstancePreset",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstancePreset"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineInstancePreset object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachineInstancePreset",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstancePreset"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstancePreset"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstancePreset"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineInstancePreset object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachineInstancePreset",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineInstancePreset object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachineInstancePreset",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstancePreset"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancereplicasets": {
    "get": {
     "description": "Get a list of VirtualMachineInstanceReplicaSet objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachineInstanceReplicaSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSetList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineInstanceReplicaSet object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachineInstanceReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSet"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSet"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSet"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSet"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineInstanceReplicaSet objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachineInstanceReplicaSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstancereplicasets/{name}": {
    "get": {
     "description": "Get a VirtualMachineInstanceReplicaSet object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachineInstanceReplicaSet",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSet"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineInstanceReplicaSet object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachineInstanceReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSet"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSet"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSet"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineInstanceReplicaSet object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachineInstanceReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineInstanceReplicaSet object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachineInstanceReplicaSet",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSet"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances": {
    "get": {
     "description": "Get a list of VirtualMachineInstance objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachineInstance",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineInstance object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachineInstance",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstance"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstance"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstance"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstance"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineInstance objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachineInstance",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}": {
    "get": {
     "description": "Get a VirtualMachineInstance object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachineInstance",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstance"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineInstance object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachineInstance",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstance"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstance"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstance"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineInstance object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachineInstance",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineInstance object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachineInstance",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstance"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachines": {
    "get": {
     "description": "Get a list of VirtualMachine objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachine",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachine object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachine objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachine",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}": {
    "get": {
     "description": "Get a VirtualMachine object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachine",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachine object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachine object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachine object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachine",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachine"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/kubevirt.io/v1/virtualmachineinstancemigrations": {
    "get": {
     "description": "Get a list of all VirtualMachineInstanceMigration objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineInstanceMigrationForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceMigrationList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/virtualmachineinstancepresets": {
    "get": {
     "description": "Get a list of all VirtualMachineInstancePreset objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineInstancePresetForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstancePresetList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/virtualmachineinstancereplicasets": {
    "get": {
     "description": "Get a list of all VirtualMachineInstanceReplicaSet objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineInstanceReplicaSetForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSetList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/virtualmachineinstances": {
    "get": {
     "description": "Get a list of all VirtualMachineInstance objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineInstanceForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/virtualmachines": {
    "get": {
     "description": "Get a list of all VirtualMachine objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/kubevirt": {
    "get": {
     "description": "Watch a KubeVirtList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchKubeVirtListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/namespaces/{namespace}/kubevirt": {
    "get": {
     "description": "Watch a KubeVirt object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedKubeVirt",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/namespaces/{namespace}/virtualmachineinstancemigrations": {
    "get": {
     "description": "Watch a VirtualMachineInstanceMigration object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachineInstanceMigration",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/namespaces/{namespace}/virtualmachineinstancepresets": {
    "get": {
     "description": "Watch a VirtualMachineInstancePreset object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachineInstancePreset",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/namespaces/{namespace}/virtualmachineinstancereplicasets": {
    "get": {
     "description": "Watch a VirtualMachineInstanceReplicaSet object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachineInstanceReplicaSet",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/namespaces/{namespace}/virtualmachineinstances": {
    "get": {
     "description": "Watch a VirtualMachineInstance object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachineInstance",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/namespaces/{namespace}/virtualmachines": {
    "get": {
     "description": "Watch a VirtualMachine object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachine",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/virtualmachineinstancemigrations": {
    "get": {
     "description": "Watch a VirtualMachineInstanceMigrationList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineInstanceMigrationListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/virtualmachineinstancepresets": {
    "get": {
     "description": "Watch a VirtualMachineInstancePresetList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineInstancePresetListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/virtualmachineinstancereplicasets": {
    "get": {
     "description": "Watch a VirtualMachineInstanceReplicaSetList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineInstanceReplicaSetListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/virtualmachineinstances": {
    "get": {
     "description": "Watch a VirtualMachineInstanceList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineInstanceListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/kubevirt.io/v1/watch/virtualmachines": {
    "get": {
     "description": "Watch a VirtualMachineList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/migrations.kubevirt.io/": {
    "get": {
     "description": "Get a KubeVirt API group",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIGroup-migrations.kubevirt.io",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/migrations.kubevirt.io/v1alpha1/": {
    "get": {
     "description": "Get KubeVirt API Resources",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIResources-migrations.kubevirt.io-v1alpha1",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/migrations.kubevirt.io/v1alpha1/migrationpolicies": {
    "get": {
     "description": "Get a list of MigrationPolicy objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listMigrationPolicy",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.MigrationPolicyList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a MigrationPolicy object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createMigrationPolicy",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.MigrationPolicy"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.MigrationPolicy"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1alpha1.MigrationPolicy"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1alpha1.MigrationPolicy"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of MigrationPolicy objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionMigrationPolicy",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/migrations.kubevirt.io/v1alpha1/migrationpolicies/{name}": {
    "get": {
     "description": "Get a MigrationPolicy object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readMigrationPolicy",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.MigrationPolicy"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a MigrationPolicy object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceMigrationPolicy",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.MigrationPolicy"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.MigrationPolicy"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1alpha1.MigrationPolicy"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a MigrationPolicy object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteMigrationPolicy",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a MigrationPolicy object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchMigrationPolicy",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.MigrationPolicy"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/migrations.kubevirt.io/v1alpha1/watch/migrationpolicies": {
    "get": {
     "description": "Watch a MigrationPolicyList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchMigrationPolicyListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/pool.kubevirt.io/": {
    "get": {
     "description": "Get a KubeVirt API group",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIGroup-pool.kubevirt.io",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/pool.kubevirt.io/v1alpha1/": {
    "get": {
     "description": "Get KubeVirt API Resources",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIResources-pool.kubevirt.io-v1alpha1",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/pool.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinepools": {
    "get": {
     "description": "Get a list of VirtualMachinePool objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachinePool",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachinePoolList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachinePool object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachinePool",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachinePool"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachinePool"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachinePool"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachinePool"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachinePool objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachinePool",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/pool.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinepools/{name}": {
    "get": {
     "description": "Get a VirtualMachinePool object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachinePool",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachinePool"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachinePool object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachinePool",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachinePool"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachinePool"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachinePool"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachinePool object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachinePool",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachinePool object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachinePool",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachinePool"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/pool.kubevirt.io/v1alpha1/virtualmachinepools": {
    "get": {
     "description": "Get a list of all VirtualMachinePool objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachinePoolForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachinePoolList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/pool.kubevirt.io/v1alpha1/watch/namespaces/{namespace}/virtualmachinepools": {
    "get": {
     "description": "Watch a VirtualMachinePool object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachinePool",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/pool.kubevirt.io/v1alpha1/watch/virtualmachinepools": {
    "get": {
     "description": "Watch a VirtualMachinePoolList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachinePoolListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/": {
    "get": {
     "description": "Get a KubeVirt API group",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIGroup-snapshot.kubevirt.io",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/": {
    "get": {
     "description": "Get KubeVirt API Resources",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIResources-snapshot.kubevirt.io-v1alpha1",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinerestores": {
    "get": {
     "description": "Get a list of VirtualMachineRestore objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachineRestore",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineRestoreList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineRestore object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachineRestore",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineRestore"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineRestore"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineRestore"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineRestore"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineRestore objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachineRestore",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinerestores/{name}": {
    "get": {
     "description": "Get a VirtualMachineRestore object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachineRestore",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineRestore"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineRestore object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachineRestore",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineRestore"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineRestore"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineRestore"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineRestore object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachineRestore",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineRestore object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachineRestore",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineRestore"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinesnapshotcontents": {
    "get": {
     "description": "Get a list of VirtualMachineSnapshotContent objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachineSnapshotContent",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContentList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineSnapshotContent object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachineSnapshotContent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContent"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContent"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContent"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineSnapshotContent objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachineSnapshotContent",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinesnapshotcontents/{name}": {
    "get": {
     "description": "Get a VirtualMachineSnapshotContent object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachineSnapshotContent",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineSnapshotContent object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachineSnapshotContent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContent"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContent"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineSnapshotContent object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachineSnapshotContent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineSnapshotContent object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachineSnapshotContent",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinesnapshots": {
    "get": {
     "description": "Get a list of VirtualMachineSnapshot objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedVirtualMachineSnapshot",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a VirtualMachineSnapshot object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedVirtualMachineSnapshot",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshot"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshot"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshot"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshot"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of VirtualMachineSnapshot objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedVirtualMachineSnapshot",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/namespaces/{namespace}/virtualmachinesnapshots/{name}": {
    "get": {
     "description": "Get a VirtualMachineSnapshot object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedVirtualMachineSnapshot",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshot"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a VirtualMachineSnapshot object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedVirtualMachineSnapshot",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshot"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshot"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshot"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a VirtualMachineSnapshot object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedVirtualMachineSnapshot",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a VirtualMachineSnapshot object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedVirtualMachineSnapshot",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshot"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/virtualmachinerestores": {
    "get": {
     "description": "Get a list of all VirtualMachineRestore objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineRestoreForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineRestoreList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/virtualmachinesnapshotcontents": {
    "get": {
     "description": "Get a list of all VirtualMachineSnapshotContent objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineSnapshotContentForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContentList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/virtualmachinesnapshots": {
    "get": {
     "description": "Get a list of all VirtualMachineSnapshot objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listVirtualMachineSnapshotForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/watch/namespaces/{namespace}/virtualmachinerestores": {
    "get": {
     "description": "Watch a VirtualMachineRestore object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachineRestore",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/watch/namespaces/{namespace}/virtualmachinesnapshotcontents": {
    "get": {
     "description": "Watch a VirtualMachineSnapshotContent object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachineSnapshotContent",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/watch/namespaces/{namespace}/virtualmachinesnapshots": {
    "get": {
     "description": "Watch a VirtualMachineSnapshot object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedVirtualMachineSnapshot",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/watch/virtualmachinerestores": {
    "get": {
     "description": "Watch a VirtualMachineRestoreList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineRestoreListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/watch/virtualmachinesnapshotcontents": {
    "get": {
     "description": "Watch a VirtualMachineSnapshotContentList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineSnapshotContentListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/snapshot.kubevirt.io/v1alpha1/watch/virtualmachinesnapshots": {
    "get": {
     "description": "Watch a VirtualMachineSnapshotList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchVirtualMachineSnapshotListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/subresources.kubevirt.io": {
    "get": {
     "description": "Get a KubeVirt API Group",
     "produces": [
      "application/json"
     ],
     "operationId": "v1GetSubAPIGroup",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1/": {
    "get": {
     "description": "Get a KubeVirt API resources",
     "produces": [
      "application/json"
     ],
     "operationId": "v1getAPISubResources",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1/dump-cluster-profiler": {
    "get": {
     "produces": [
      "application/json"
     ],
     "operationId": "v1dump-cluster-profiler",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1/guestfs": {
    "get": {
     "produces": [
      "application/json"
     ],
     "operationId": "v1Guestfs",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1/healthz": {
    "get": {
     "description": "Health endpoint",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1CheckHealth",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Unhealthy",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/expand-vm-spec": {
    "put": {
     "description": "Expands instancetype and preference into the passed VirtualMachine object.",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1ExpandSpec",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/addvolume": {
    "put": {
     "description": "Add a volume and disk to a running Virtual Machine Instance",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1vmi-addvolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.AddVolumeOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/console": {
    "get": {
     "description": "Open a websocket connection to a serial console on the specified VirtualMachineInstance.",
     "operationId": "v1Console",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/filesystemlist": {
    "get": {
     "description": "Get list of active filesystems on guest machine via guest agent",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1Filesystemlist",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceFileSystemList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/freeze": {
    "put": {
     "description": "Freeze a VirtualMachineInstance object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1Freeze",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.FreezeUnfreezeTimeout"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/guestosinfo": {
    "get": {
     "description": "Get guest agent os information",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1Guestosinfo",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceGuestAgentInfo"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/pause": {
    "put": {
     "description": "Pause a VirtualMachineInstance object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1Pause",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.PauseOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/portforward/{port}": {
    "get": {
     "description": "Open a websocket connection forwarding traffic to the specified VirtualMachineInstance and port.",
     "operationId": "v1vmi-PortForward",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The target port for portforward on the VirtualMachineInstance.",
      "name": "port",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/portforward/{port}/{protocol}": {
    "get": {
     "description": "Open a websocket connection forwarding traffic of the specified protocol (either tcp or udp) to the specified VirtualMachineInstance and port.",
     "operationId": "v1vmi-PortForwardWithProtocol",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The target port for portforward on the VirtualMachineInstance.",
      "name": "port",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The protocol for portforward on the VirtualMachineInstance.",
      "name": "protocol",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/removevolume": {
    "put": {
     "description": "Removes a volume and disk from a running Virtual Machine Instance",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1vmi-removevolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.RemoveVolumeOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/sev/fetchcertchain": {
    "get": {
     "description": "Fetch SEV certificate chain from the node where Virtual Machine is scheduled",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1SEVFetchCertChain",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.SEVPlatformInfo"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/sev/injectlaunchsecret": {
    "put": {
     "description": "Inject SEV launch secret into a Virtual Machine",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1SEVInjectLaunchSecret",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.SEVSecretOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/sev/querylaunchmeasurement": {
    "get": {
     "description": "Query SEV launch measurement from a Virtual Machine",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1SEVQueryLaunchMeasurement",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.SEVMeasurementInfo"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/sev/setupsession": {
    "put": {
     "description": "Setup SEV session parameters for a Virtual Machine",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1SEVSetupSession",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.SEVSessionOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/softreboot": {
    "put": {
     "description": "Soft reboot a VirtualMachineInstance object.",
     "operationId": "v1SoftReboot",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/unfreeze": {
    "put": {
     "description": "Unfreeze a VirtualMachineInstance object.",
     "operationId": "v1Unfreeze",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/unpause": {
    "put": {
     "description": "Unpause a VirtualMachineInstance object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1Unpause",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.UnpauseOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/usbredir": {
    "get": {
     "description": "Open a websocket connection to connect to USB device on the specified VirtualMachineInstance.",
     "operationId": "v1usbredir",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/userlist": {
    "get": {
     "description": "Get list of active users via guest agent",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1Userlist",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceGuestOSUserList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/vnc": {
    "get": {
     "description": "Open a websocket connection to connect to VNC on the specified VirtualMachineInstance.",
     "operationId": "v1VNC",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/vnc/screenshot": {
    "get": {
     "description": "Get a PNG VNC screenshot of the specified VirtualMachineInstance.",
     "operationId": "v1VNCScreenshot",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Move the cursor on the VNC display to wake up the screen",
      "name": "moveCursor",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachineinstances/{name}/vsock": {
    "get": {
     "description": "Open a websocket connection forwarding traffic to the specified VirtualMachineInstance and port via VSOCK.",
     "operationId": "v1VSOCK",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "The port which the VSOCK application listens to.",
      "name": "port",
      "in": "query",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Weather to request a TLS encrypted session from the VSOCK application.",
      "name": "tls",
      "in": "query"
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}/addvolume": {
    "put": {
     "description": "Add a volume and disk to a running Virtual Machine.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1vm-addvolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.AddVolumeOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}/expand-spec": {
    "get": {
     "description": "Get VirtualMachine object with expanded instancetype and preference.",
     "produces": [
      "application/json"
     ],
     "operationId": "v1vm-ExpandSpec",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}/memorydump": {
    "put": {
     "description": "Dumps a VirtualMachineInstance memory.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1MemoryDump",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineMemoryDumpRequest"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}/migrate": {
    "put": {
     "description": "Migrate a running VirtualMachine to another node.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1Migrate",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.MigrateOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}/portforward/{port}": {
    "get": {
     "description": "Open a websocket connection forwarding traffic to the running VMI for the specified VirtualMachine and port.",
     "operationId": "v1vm-PortForward",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The target port for portforward on the VirtualMachineInstance.",
      "name": "port",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}/portforward/{port}/{protocol}": {
    "get": {
     "description": "Open a websocket connection forwarding traffic of the specified protocol (either tcp or udp) to the specified VirtualMachine and port.",
     "operationId": "v1vm-PortForwardWithProtocol",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The target port for portforward on the VirtualMachineInstance.",
      "name": "port",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The protocol for portforward on the VirtualMachineInstance.",
      "name": "protocol",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}/removememorydump": {
    "put": {
     "description": "Remove memory dump association.",
     "operationId": "v1RemoveMemoryDump",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}/removevolume": {
    "put": {
     "description": "Removes a volume and disk from a running Virtual Machine.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1vm-removevolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.RemoveVolumeOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}/restart": {
    "put": {
     "description": "Restart a VirtualMachine object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1Restart",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "schema": {
        "$ref": "#/definitions/v1.RestartOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}/start": {
    "put": {
     "description": "Start a VirtualMachine object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1Start",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.StartOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/namespaces/{namespace}/virtualmachines/{name}/stop": {
    "put": {
     "description": "Stop a VirtualMachine object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1Stop",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "schema": {
        "$ref": "#/definitions/v1.StopOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1/start-cluster-profiler": {
    "get": {
     "produces": [
      "application/json"
     ],
     "operationId": "v1start-cluster-profiler",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1/stop-cluster-profiler": {
    "get": {
     "produces": [
      "application/json"
     ],
     "operationId": "v1stop-cluster-profiler",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1/version": {
    "get": {
     "produces": [
      "application/json"
     ],
     "operationId": "v1Version",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha3/": {
    "get": {
     "description": "Get a KubeVirt API resources",
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3getAPISubResources",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha3/dump-cluster-profiler": {
    "get": {
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3dump-cluster-profiler",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha3/guestfs": {
    "get": {
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3Guestfs",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha3/healthz": {
    "get": {
     "description": "Health endpoint",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3CheckHealth",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Unhealthy",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/expand-vm-spec": {
    "put": {
     "description": "Expands instancetype and preference into the passed VirtualMachine object.",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3ExpandSpec",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/addvolume": {
    "put": {
     "description": "Add a volume and disk to a running Virtual Machine Instance",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3vmi-addvolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.AddVolumeOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/console": {
    "get": {
     "description": "Open a websocket connection to a serial console on the specified VirtualMachineInstance.",
     "operationId": "v1alpha3Console",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/filesystemlist": {
    "get": {
     "description": "Get list of active filesystems on guest machine via guest agent",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3Filesystemlist",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceFileSystemList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/freeze": {
    "put": {
     "description": "Freeze a VirtualMachineInstance object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3Freeze",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.FreezeUnfreezeTimeout"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/guestosinfo": {
    "get": {
     "description": "Get guest agent os information",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3Guestosinfo",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceGuestAgentInfo"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/pause": {
    "put": {
     "description": "Pause a VirtualMachineInstance object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3Pause",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.PauseOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/portforward/{port}": {
    "get": {
     "description": "Open a websocket connection forwarding traffic to the specified VirtualMachineInstance and port.",
     "operationId": "v1alpha3vmi-PortForward",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The target port for portforward on the VirtualMachineInstance.",
      "name": "port",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/portforward/{port}/{protocol}": {
    "get": {
     "description": "Open a websocket connection forwarding traffic of the specified protocol (either tcp or udp) to the specified VirtualMachineInstance and port.",
     "operationId": "v1alpha3vmi-PortForwardWithProtocol",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The target port for portforward on the VirtualMachineInstance.",
      "name": "port",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The protocol for portforward on the VirtualMachineInstance.",
      "name": "protocol",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/removevolume": {
    "put": {
     "description": "Removes a volume and disk from a running Virtual Machine Instance",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3vmi-removevolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.RemoveVolumeOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/sev/fetchcertchain": {
    "get": {
     "description": "Fetch SEV certificate chain from the node where Virtual Machine is scheduled",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3SEVFetchCertChain",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.SEVPlatformInfo"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/sev/injectlaunchsecret": {
    "put": {
     "description": "Inject SEV launch secret into a Virtual Machine",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3SEVInjectLaunchSecret",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.SEVSecretOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/sev/querylaunchmeasurement": {
    "get": {
     "description": "Query SEV launch measurement from a Virtual Machine",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3SEVQueryLaunchMeasurement",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.SEVMeasurementInfo"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/sev/setupsession": {
    "put": {
     "description": "Setup SEV session parameters for a Virtual Machine",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3SEVSetupSession",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.SEVSessionOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/softreboot": {
    "put": {
     "description": "Soft reboot a VirtualMachineInstance object.",
     "operationId": "v1alpha3SoftReboot",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/unfreeze": {
    "put": {
     "description": "Unfreeze a VirtualMachineInstance object.",
     "operationId": "v1alpha3Unfreeze",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/unpause": {
    "put": {
     "description": "Unpause a VirtualMachineInstance object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3Unpause",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.UnpauseOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/usbredir": {
    "get": {
     "description": "Open a websocket connection to connect to USB device on the specified VirtualMachineInstance.",
     "operationId": "v1alpha3usbredir",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/userlist": {
    "get": {
     "description": "Get list of active users via guest agent",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3Userlist",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineInstanceGuestOSUserList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/vnc": {
    "get": {
     "description": "Open a websocket connection to connect to VNC on the specified VirtualMachineInstance.",
     "operationId": "v1alpha3VNC",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/vnc/screenshot": {
    "get": {
     "description": "Get a PNG VNC screenshot of the specified VirtualMachineInstance.",
     "operationId": "v1alpha3VNCScreenshot",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Move the cursor on the VNC display to wake up the screen",
      "name": "moveCursor",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachineinstances/{name}/vsock": {
    "get": {
     "description": "Open a websocket connection forwarding traffic to the specified VirtualMachineInstance and port via VSOCK.",
     "operationId": "v1alpha3VSOCK",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "The port which the VSOCK application listens to.",
      "name": "port",
      "in": "query",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Weather to request a TLS encrypted session from the VSOCK application.",
      "name": "tls",
      "in": "query"
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachines/{name}/addvolume": {
    "put": {
     "description": "Add a volume and disk to a running Virtual Machine.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3vm-addvolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.AddVolumeOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachines/{name}/expand-spec": {
    "get": {
     "description": "Get VirtualMachine object with expanded instancetype and preference.",
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3vm-ExpandSpec",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachines/{name}/memorydump": {
    "put": {
     "description": "Dumps a VirtualMachineInstance memory.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3MemoryDump",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.VirtualMachineMemoryDumpRequest"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachines/{name}/migrate": {
    "put": {
     "description": "Migrate a running VirtualMachine to another node.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3Migrate",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.MigrateOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachines/{name}/portforward/{port}": {
    "get": {
     "description": "Open a websocket connection forwarding traffic to the running VMI for the specified VirtualMachine and port.",
     "operationId": "v1alpha3vm-PortForward",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The target port for portforward on the VirtualMachineInstance.",
      "name": "port",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachines/{name}/portforward/{port}/{protocol}": {
    "get": {
     "description": "Open a websocket connection forwarding traffic of the specified protocol (either tcp or udp) to the specified VirtualMachine and port.",
     "operationId": "v1alpha3vm-PortForwardWithProtocol",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The target port for portforward on the VirtualMachineInstance.",
      "name": "port",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The protocol for portforward on the VirtualMachineInstance.",
      "name": "protocol",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachines/{name}/removememorydump": {
    "put": {
     "description": "Remove memory dump association.",
     "operationId": "v1alpha3RemoveMemoryDump",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "500": {
       "description": "Internal Server Error",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachines/{name}/removevolume": {
    "put": {
     "description": "Removes a volume and disk from a running Virtual Machine.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3vm-removevolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.RemoveVolumeOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachines/{name}/restart": {
    "put": {
     "description": "Restart a VirtualMachine object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3Restart",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "schema": {
        "$ref": "#/definitions/v1.RestartOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachines/{name}/start": {
    "put": {
     "description": "Start a VirtualMachine object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3Start",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.StartOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/namespaces/{namespace}/virtualmachines/{name}/stop": {
    "put": {
     "description": "Stop a VirtualMachine object.",
     "consumes": [
      "*/*"
     ],
     "operationId": "v1alpha3Stop",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "schema": {
        "$ref": "#/definitions/v1.StopOptions"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "type": "string"
       }
      },
      "400": {
       "description": "Bad Request",
       "schema": {
        "type": "string"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/subresources.kubevirt.io/v1alpha3/start-cluster-profiler": {
    "get": {
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3start-cluster-profiler",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha3/stop-cluster-profiler": {
    "get": {
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3stop-cluster-profiler",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/apis/subresources.kubevirt.io/v1alpha3/version": {
    "get": {
     "produces": [
      "application/json"
     ],
     "operationId": "v1alpha3Version",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/dump-profiler": {
    "get": {
     "description": "dump profiler results endpoint",
     "operationId": "HandleDumpProfiler",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/healthz": {
    "get": {
     "description": "Health endpoint",
     "operationId": "func13",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/openapi/v2": {
    "get": {
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "func6",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/start-profiler": {
    "get": {
     "description": "start profiler endpoint",
     "operationId": "HandleStartProfiler",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   },
   "/stop-profiler": {
    "get": {
     "description": "stop profiler endpoint",
     "operationId": "HandleStopProfiler",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   }
  },
  "definitions": {
   "k8s.io.api.core.v1.Affinity": {
    "description": "Affinity is a group of affinity scheduling rules.",
    "type": "object",
    "properties": {
     "nodeAffinity": {
      "description": "Describes node affinity scheduling rules for the pod.",
      "$ref": "#/definitions/k8s.io.api.core.v1.NodeAffinity"
     },
     "podAffinity": {
      "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
      "$ref": "#/definitions/k8s.io.api.core.v1.PodAffinity"
     },
     "podAntiAffinity": {
      "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
      "$ref": "#/definitions/k8s.io.api.core.v1.PodAntiAffinity"
     }
    }
   },
   "k8s.io.api.core.v1.DownwardAPIVolumeFile": {
    "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
    "type": "object",
    "required": [
     "path"
    ],
    "properties": {
     "fieldRef": {
      "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
      "$ref": "#/definitions/k8s.io.api.core.v1.ObjectFieldSelector"
     },
     "mode": {
      "description": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
      "type": "integer",
      "format": "int32"
     },
     "path": {
      "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
      "type": "string",
      "default": ""
     },
     "resourceFieldRef": {
      "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
      "$ref": "#/definitions/k8s.io.api.core.v1.ResourceFieldSelector"
     }
    }
   },
   "k8s.io.api.core.v1.ExecAction": {
    "description": "ExecAction describes a \"run in container\" action.",
    "type": "object",
    "properties": {
     "command": {
      "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     }
    }
   },
   "k8s.io.api.core.v1.HTTPGetAction": {
    "description": "HTTPGetAction describes an action based on HTTP Get requests.",
    "type": "object",
    "required": [
     "port"
    ],
    "properties": {
     "host": {
      "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
      "type": "string"
     },
     "httpHeaders": {
      "description": "Custom headers to set in the request. HTTP allows repeated headers.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.HTTPHeader"
      }
     },
     "path": {
      "description": "Path to access on the HTTP server.",
      "type": "string"
     },
     "port": {
      "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
      "type": [
       "string",
       "number"
      ],
      "default": {}
     },
     "scheme": {
      "description": "Scheme to use for connecting to the host. Defaults to HTTP.\n\nPossible enum values:\n - `\"HTTP\"` means that the scheme used will be http://\n - `\"HTTPS\"` means that the scheme used will be https://",
      "type": "string",
      "enum": [
       "HTTP",
       "HTTPS"
      ]
     }
    }
   },
   "k8s.io.api.core.v1.HTTPHeader": {
    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
    "type": "object",
    "required": [
     "name",
     "value"
    ],
    "properties": {
     "name": {
      "description": "The header field name",
      "type": "string",
      "default": ""
     },
     "value": {
      "description": "The header field value",
      "type": "string",
      "default": ""
     }
    }
   },
   "k8s.io.api.core.v1.LocalObjectReference": {
    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
    "type": "object",
    "properties": {
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     }
    },
    "x-kubernetes-map-type": "atomic"
   },
   "k8s.io.api.core.v1.NodeAffinity": {
    "description": "Node affinity is a group of node affinity scheduling rules.",
    "type": "object",
    "properties": {
     "preferredDuringSchedulingIgnoredDuringExecution": {
      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.PreferredSchedulingTerm"
      }
     },
     "requiredDuringSchedulingIgnoredDuringExecution": {
      "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
      "$ref": "#/definitions/k8s.io.api.core.v1.NodeSelector"
     }
    }
   },
   "k8s.io.api.core.v1.NodeSelector": {
    "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
    "type": "object",
    "required": [
     "nodeSelectorTerms"
    ],
    "properties": {
     "nodeSelectorTerms": {
      "description": "Required. A list of node selector terms. The terms are ORed.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.NodeSelectorTerm"
      }
     }
    },
    "x-kubernetes-map-type": "atomic"
   },
   "k8s.io.api.core.v1.NodeSelectorRequirement": {
    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
    "type": "object",
    "required": [
     "key",
     "operator"
    ],
    "properties": {
     "key": {
      "description": "The label key that the selector applies to.",
      "type": "string",
      "default": ""
     },
     "operator": {
      "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
      "type": "string",
      "default": "",
      "enum": [
       "DoesNotExist",
       "Exists",
       "Gt",
       "In",
       "Lt",
       "NotIn"
      ]
     },
     "values": {
      "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     }
    }
   },
   "k8s.io.api.core.v1.NodeSelectorTerm": {
    "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
    "type": "object",
    "properties": {
     "matchExpressions": {
      "description": "A list of node selector requirements by node's labels.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.NodeSelectorRequirement"
      }
     },
     "matchFields": {
      "description": "A list of node selector requirements by node's fields.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.NodeSelectorRequirement"
      }
     }
    },
    "x-kubernetes-map-type": "atomic"
   },
   "k8s.io.api.core.v1.ObjectFieldSelector": {
    "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
    "type": "object",
    "required": [
     "fieldPath"
    ],
    "properties": {
     "apiVersion": {
      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
      "type": "string"
     },
     "fieldPath": {
      "description": "Path of the field to select in the specified API version.",
      "type": "string",
      "default": ""
     }
    },
    "x-kubernetes-map-type": "atomic"
   },
   "k8s.io.api.core.v1.PersistentVolumeClaimSpec": {
    "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
    "type": "object",
    "properties": {
     "accessModes": {
      "description": "accessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "dataSource": {
      "description": "dataSource field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef, and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified. If the namespace is specified, then dataSourceRef will not be copied to dataSource.",
      "$ref": "#/definitions/k8s.io.api.core.v1.TypedLocalObjectReference"
     },
     "dataSourceRef": {
      "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the dataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, when namespace isn't specified in dataSourceRef, both fields (dataSource and dataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. When namespace is specified in dataSourceRef, dataSource isn't set to the same value and must be empty. There are three important differences between dataSource and dataSourceRef: * While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled. (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
      "$ref": "#/definitions/k8s.io.api.core.v1.TypedObjectReference"
     },
     "resources": {
      "description": "resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
      "default": {},
      "$ref": "#/definitions/k8s.io.api.core.v1.ResourceRequirements"
     },
     "selector": {
      "description": "selector is a label query over volumes to consider for binding.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "storageClassName": {
      "description": "storageClassName is the name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
      "type": "string"
     },
     "volumeMode": {
      "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.\n\nPossible enum values:\n - `\"Block\"` means the volume will not be formatted with a filesystem and will remain a raw block device.\n - `\"Filesystem\"` means the volume will be or is formatted with a filesystem.",
      "type": "string",
      "enum": [
       "Block",
       "Filesystem"
      ]
     },
     "volumeName": {
      "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
      "type": "string"
     }
    }
   },
   "k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource": {
    "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
    "type": "object",
    "required": [
     "claimName"
    ],
    "properties": {
     "claimName": {
      "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
      "type": "string",
      "default": ""
     },
     "readOnly": {
      "description": "readOnly Will force the ReadOnly setting in VolumeMounts. Default false.",
      "type": "boolean"
     }
    }
   },
   "k8s.io.api.core.v1.PodAffinity": {
    "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
    "type": "object",
    "properties": {
     "preferredDuringSchedulingIgnoredDuringExecution": {
      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.WeightedPodAffinityTerm"
      }
     },
     "requiredDuringSchedulingIgnoredDuringExecution": {
      "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.PodAffinityTerm"
      }
     }
    }
   },
   "k8s.io.api.core.v1.PodAffinityTerm": {
    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
    "type": "object",
    "required": [
     "topologyKey"
    ],
    "properties": {
     "labelSelector": {
      "description": "A label query over a set of resources, in this case pods.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "namespaceSelector": {
      "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "namespaces": {
      "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "topologyKey": {
      "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
      "type": "string",
      "default": ""
     }
    }
   },
   "k8s.io.api.core.v1.PodAntiAffinity": {
    "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
    "type": "object",
    "properties": {
     "preferredDuringSchedulingIgnoredDuringExecution": {
      "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.WeightedPodAffinityTerm"
      }
     },
     "requiredDuringSchedulingIgnoredDuringExecution": {
      "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.PodAffinityTerm"
      }
     }
    }
   },
   "k8s.io.api.core.v1.PodDNSConfig": {
    "description": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
    "type": "object",
    "properties": {
     "nameservers": {
      "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "options": {
      "description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.PodDNSConfigOption"
      }
     },
     "searches": {
      "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     }
    }
   },
   "k8s.io.api.core.v1.PodDNSConfigOption": {
    "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
    "type": "object",
    "properties": {
     "name": {
      "description": "Required.",
      "type": "string"
     },
     "value": {
      "type": "string"
     }
    }
   },
   "k8s.io.api.core.v1.PreferredSchedulingTerm": {
    "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
    "type": "object",
    "required": [
     "weight",
     "preference"
    ],
    "properties": {
     "preference": {
      "description": "A node selector term, associated with the corresponding weight.",
      "default": {},
      "$ref": "#/definitions/k8s.io.api.core.v1.NodeSelectorTerm"
     },
     "weight": {
      "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
      "type": "integer",
      "format": "int32",
      "default": 0
     }
    }
   },
   "k8s.io.api.core.v1.ResourceClaim": {
    "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
      "type": "string",
      "default": ""
     }
    }
   },
   "k8s.io.api.core.v1.ResourceFieldSelector": {
    "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
    "type": "object",
    "required": [
     "resource"
    ],
    "properties": {
     "containerName": {
      "description": "Container name: required for volumes, optional for env vars",
      "type": "string"
     },
     "divisor": {
      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     },
     "resource": {
      "description": "Required: resource to select",
      "type": "string",
      "default": ""
     }
    },
    "x-kubernetes-map-type": "atomic"
   },
   "k8s.io.api.core.v1.ResourceRequirements": {
    "description": "ResourceRequirements describes the compute resource requirements.",
    "type": "object",
    "properties": {
     "claims": {
      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.ResourceClaim"
      },
      "x-kubernetes-list-map-keys": [
       "name"
      ],
      "x-kubernetes-list-type": "map"
     },
     "limits": {
      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
      "type": "object",
      "additionalProperties": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
      }
     },
     "requests": {
      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
      "type": "object",
      "additionalProperties": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
      }
     }
    }
   },
   "k8s.io.api.core.v1.TCPSocketAction": {
    "description": "TCPSocketAction describes an action based on opening a socket",
    "type": "object",
    "required": [
     "port"
    ],
    "properties": {
     "host": {
      "description": "Optional: Host name to connect to, defaults to the pod IP.",
      "type": "string"
     },
     "port": {
      "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
      "type": [
       "string",
       "number"
      ],
      "default": {}
     }
    }
   },
   "k8s.io.api.core.v1.Toleration": {
    "description": "The pod this Toleration is attached to tolerates any taint that matches the triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
    "type": "object",
    "properties": {
     "effect": {
      "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\nPossible enum values:\n - `\"NoExecute\"` Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.\n - `\"NoSchedule\"` Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.\n - `\"PreferNoSchedule\"` Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.",
      "type": "string",
      "enum": [
       "NoExecute",
       "NoSchedule",
       "PreferNoSchedule"
      ]
     },
     "key": {
      "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
      "type": "string"
     },
     "operator": {
      "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\nPossible enum values:\n - `\"Equal\"`\n - `\"Exists\"`",
      "type": "string",
      "enum": [
       "Equal",
       "Exists"
      ]
     },
     "tolerationSeconds": {
      "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
      "type": "integer",
      "format": "int64"
     },
     "value": {
      "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
      "type": "string"
     }
    }
   },
   "k8s.io.api.core.v1.TopologySpreadConstraint": {
    "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
    "type": "object",
    "required": [
     "maxSkew",
     "topologyKey",
     "whenUnsatisfiable"
    ],
    "properties": {
     "labelSelector": {
      "description": "LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "matchLabelKeys": {
      "description": "MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "maxSkew": {
      "description": "MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.",
      "type": "integer",
      "format": "int32",
      "default": 0
     },
     "minDomains": {
      "description": "MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).",
      "type": "integer",
      "format": "int32"
     },
     "nodeAffinityPolicy": {
      "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.\n\nPossible enum values:\n - `\"Honor\"` means use this scheduling directive when calculating pod topology spread skew.\n - `\"Ignore\"` means ignore this scheduling directive when calculating pod topology spread skew.",
      "type": "string",
      "enum": [
       "Honor",
       "Ignore"
      ]
     },
     "nodeTaintsPolicy": {
      "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy. This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.\n\nPossible enum values:\n - `\"Honor\"` means use this scheduling directive when calculating pod topology spread skew.\n - `\"Ignore\"` means ignore this scheduling directive when calculating pod topology spread skew.",
      "type": "string",
      "enum": [
       "Honor",
       "Ignore"
      ]
     },
     "topologyKey": {
      "description": "TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each \u003ckey, value\u003e as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field.",
      "type": "string",
      "default": ""
     },
     "whenUnsatisfiable": {
      "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.\n\nPossible enum values:\n - `\"DoNotSchedule\"` instructs the scheduler not to schedule the pod when constraints are not satisfied.\n - `\"ScheduleAnyway\"` instructs the scheduler to schedule the pod even if constraints are not satisfied.",
      "type": "string",
      "default": "",
      "enum": [
       "DoNotSchedule",
       "ScheduleAnyway"
      ]
     }
    }
   },
   "k8s.io.api.core.v1.TypedLocalObjectReference": {
    "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.",
    "type": "object",
    "required": [
     "kind",
     "name"
    ],
    "properties": {
     "apiGroup": {
      "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
      "type": "string"
     },
     "kind": {
      "description": "Kind is the type of resource being referenced",
      "type": "string",
      "default": ""
     },
     "name": {
      "description": "Name is the name of resource being referenced",
      "type": "string",
      "default": ""
     }
    },
    "x-kubernetes-map-type": "atomic"
   },
   "k8s.io.api.core.v1.TypedObjectReference": {
    "type": "object",
    "required": [
     "kind",
     "name"
    ],
    "properties": {
     "apiGroup": {
      "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
      "type": "string"
     },
     "kind": {
      "description": "Kind is the type of resource being referenced",
      "type": "string",
      "default": ""
     },
     "name": {
      "description": "Name is the name of resource being referenced",
      "type": "string",
      "default": ""
     },
     "namespace": {
      "description": "Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
      "type": "string"
     }
    }
   },
   "k8s.io.api.core.v1.WeightedPodAffinityTerm": {
    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
    "type": "object",
    "required": [
     "weight",
     "podAffinityTerm"
    ],
    "properties": {
     "podAffinityTerm": {
      "description": "Required. A pod affinity term, associated with the corresponding weight.",
      "default": {},
      "$ref": "#/definitions/k8s.io.api.core.v1.PodAffinityTerm"
     },
     "weight": {
      "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
      "type": "integer",
      "format": "int32",
      "default": 0
     }
    }
   },
   "k8s.io.apimachinery.pkg.api.resource.Quantity": {
    "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n``` \u003cquantity\u003e        ::= \u003csignedNumber\u003e\u003csuffix\u003e\n\n\t(Note that \u003csuffix\u003e may be empty, from the \"\" case in \u003cdecimalSI\u003e.)\n\n\u003cdigit\u003e           ::= 0 | 1 | ... | 9 \u003cdigits\u003e          ::= \u003cdigit\u003e | \u003cdigit\u003e\u003cdigits\u003e \u003cnumber\u003e          ::= \u003cdigits\u003e | \u003cdigits\u003e.\u003cdigits\u003e | \u003cdigits\u003e. | .\u003cdigits\u003e \u003csign\u003e            ::= \"+\" | \"-\" \u003csignedNumber\u003e    ::= \u003cnumber\u003e | \u003csign\u003e\u003cnumber\u003e \u003csuffix\u003e          ::= \u003cbinarySI\u003e | \u003cdecimalExponent\u003e | \u003cdecimalSI\u003e \u003cbinarySI\u003e        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n\u003cdecimalSI\u003e       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n\u003cdecimalExponent\u003e ::= \"e\" \u003csignedNumber\u003e | \"E\" \u003csignedNumber\u003e ```\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost - No fractional digits will be emitted - The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\" - 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.",
    "type": "string"
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup": {
    "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
    "type": "object",
    "required": [
     "name",
     "versions"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "name is the name of the group.",
      "type": "string",
      "default": ""
     },
     "preferredVersion": {
      "description": "preferredVersion is the version preferred by the API server, which probably is the storage version.",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
     },
     "serverAddressByClientCIDRs": {
      "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
      }
     },
     "versions": {
      "description": "versions are the versions supported in this group.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
      }
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.APIGroupList": {
    "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
    "type": "object",
    "required": [
     "groups"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "groups": {
      "description": "groups is a list of APIGroup.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIGroup"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.APIResource": {
    "description": "APIResource specifies the name of a resource and whether it is namespaced.",
    "type": "object",
    "required": [
     "name",
     "singularName",
     "namespaced",
     "kind",
     "verbs"
    ],
    "properties": {
     "categories": {
      "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "group": {
      "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
      "type": "string"
     },
     "kind": {
      "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
      "type": "string",
      "default": ""
     },
     "name": {
      "description": "name is the plural name of the resource.",
      "type": "string",
      "default": ""
     },
     "namespaced": {
      "description": "namespaced indicates if a resource is namespaced or not.",
      "type": "boolean",
      "default": false
     },
     "shortNames": {
      "description": "shortNames is a list of suggested short names of the resource.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "singularName": {
      "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
      "type": "string",
      "default": ""
     },
     "storageVersionHash": {
      "description": "The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.",
      "type": "string"
     },
     "verbs": {
      "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "version": {
      "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
      "type": "string"
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.APIResourceList": {
    "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
    "type": "object",
    "required": [
     "groupVersion",
     "resources"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "groupVersion": {
      "description": "groupVersion is the group and version this APIResourceList is for.",
      "type": "string",
      "default": ""
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "resources": {
      "description": "resources contains the name of the resources and if they are namespaced.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.APIResource"
      }
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
    "description": "DeleteOptions may be provided when deleting an API object.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "dryRun": {
      "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "gracePeriodSeconds": {
      "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
      "type": "integer",
      "format": "int64"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "orphanDependents": {
      "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
      "type": "boolean"
     },
     "preconditions": {
      "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Preconditions"
     },
     "propagationPolicy": {
      "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
      "type": "string"
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.Duration": {
    "description": "Duration is a wrapper around time.Duration which supports correct marshaling to YAML and JSON. In particular, it marshals into strings, which can be used as map keys in json.",
    "type": "string"
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.FieldsV1": {
    "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map 'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item 'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list 'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
    "type": "object"
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery": {
    "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
    "type": "object",
    "required": [
     "groupVersion",
     "version"
    ],
    "properties": {
     "groupVersion": {
      "description": "groupVersion specifies the API group and version in the form \"group/version\"",
      "type": "string",
      "default": ""
     },
     "version": {
      "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
      "type": "string",
      "default": ""
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector": {
    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
    "type": "object",
    "properties": {
     "matchExpressions": {
      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
      }
     },
     "matchLabels": {
      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     }
    },
    "x-kubernetes-map-type": "atomic"
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
    "type": "object",
    "required": [
     "key",
     "operator"
    ],
    "properties": {
     "key": {
      "description": "key is the label key that the selector applies to.",
      "type": "string",
      "default": "",
      "x-kubernetes-patch-merge-key": "key",
      "x-kubernetes-patch-strategy": "merge"
     },
     "operator": {
      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
      "type": "string",
      "default": ""
     },
     "values": {
      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta": {
    "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
    "type": "object",
    "properties": {
     "continue": {
      "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
      "type": "string"
     },
     "remainingItemCount": {
      "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
      "type": "integer",
      "format": "int64"
     },
     "resourceVersion": {
      "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
      "type": "string"
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
    "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
      "type": "string"
     },
     "fieldsType": {
      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
      "type": "string"
     },
     "fieldsV1": {
      "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.FieldsV1"
     },
     "manager": {
      "description": "Manager is an identifier of the workflow managing these fields.",
      "type": "string"
     },
     "operation": {
      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
      "type": "string"
     },
     "subresource": {
      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
      "type": "string"
     },
     "time": {
      "description": "Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
    "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
    "type": "object",
    "properties": {
     "annotations": {
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "creationTimestamp": {
      "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "deletionGracePeriodSeconds": {
      "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "deletionTimestamp": {
      "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "finalizers": {
      "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-patch-strategy": "merge"
     },
     "generateName": {
      "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
      "type": "string"
     },
     "generation": {
      "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "labels": {
      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "managedFields": {
      "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
      }
     },
     "name": {
      "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "ownerReferences": {
      "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference"
      },
      "x-kubernetes-patch-merge-key": "uid",
      "x-kubernetes-patch-strategy": "merge"
     },
     "resourceVersion": {
      "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",
      "type": "string"
     },
     "uid": {
      "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference": {
    "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
    "type": "object",
    "required": [
     "apiVersion",
     "kind",
     "name",
     "uid"
    ],
    "properties": {
     "apiVersion": {
      "description": "API version of the referent.",
      "type": "string",
      "default": ""
     },
     "blockOwnerDeletion": {
      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
      "type": "boolean"
     },
     "controller": {
      "description": "If true, this reference points to the managing controller.",
      "type": "boolean"
     },
     "kind": {
      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "default": ""
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string",
      "default": ""
     },
     "uid": {
      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string",
      "default": ""
     }
    },
    "x-kubernetes-map-type": "atomic"
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.Patch": {
    "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
    "type": "object"
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.Preconditions": {
    "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
    "type": "object",
    "properties": {
     "resourceVersion": {
      "description": "Specifies the target ResourceVersion",
      "type": "string"
     },
     "uid": {
      "description": "Specifies the target UID.",
      "type": "string"
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.RootPaths": {
    "description": "RootPaths lists the paths available at root. For example: \"/healthz\", \"/apis\".",
    "type": "object",
    "required": [
     "paths"
    ],
    "properties": {
     "paths": {
      "description": "paths are the paths available at root.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR": {
    "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
    "type": "object",
    "required": [
     "clientCIDR",
     "serverAddress"
    ],
    "properties": {
     "clientCIDR": {
      "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
      "type": "string",
      "default": ""
     },
     "serverAddress": {
      "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
      "type": "string",
      "default": ""
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.Status": {
    "description": "Status is a return value for calls that don't return other objects.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "code": {
      "description": "Suggested HTTP return code for this status, 0 if not set.",
      "type": "integer",
      "format": "int32"
     },
     "details": {
      "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.StatusDetails"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the status of this operation.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     },
     "reason": {
      "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
      "type": "string"
     },
     "status": {
      "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
      "type": "string"
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.StatusCause": {
    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
    "type": "object",
    "properties": {
     "field": {
      "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
      "type": "string"
     },
     "reason": {
      "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
      "type": "string"
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.StatusDetails": {
    "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
    "type": "object",
    "properties": {
     "causes": {
      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.StatusCause"
      }
     },
     "group": {
      "description": "The group attribute of the resource associated with the status StatusReason.",
      "type": "string"
     },
     "kind": {
      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
      "type": "string"
     },
     "retryAfterSeconds": {
      "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
      "type": "integer",
      "format": "int32"
     },
     "uid": {
      "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.Time": {
    "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
    "type": "string",
    "format": "date-time"
   },
   "k8s.io.apimachinery.pkg.apis.meta.v1.WatchEvent": {
    "description": "Event represents a single event to a watched resource.",
    "type": "object",
    "required": [
     "type",
     "object"
    ],
    "properties": {
     "object": {
      "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context.",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.runtime.RawExtension"
     },
     "type": {
      "type": "string",
      "default": ""
     }
    }
   },
   "k8s.io.apimachinery.pkg.runtime.RawExtension": {
    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
    "type": "object"
   },
   "k8s.io.apimachinery.pkg.util.intstr.IntOrString": {
    "description": "IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.",
    "type": "string",
    "format": "int-or-string"
   },
   "v1.ACPI": {
    "type": "object",
    "properties": {
     "slicNameRef": {
      "description": "SlicNameRef should match the volume name of a secret object. The data in the secret should be a binary blob that follows the ACPI SLIC standard, see: https://learn.microsoft.com/en-us/previous-versions/windows/hardware/design/dn653305(v=vs.85)",
      "type": "string"
     }
    }
   },
   "v1.AccessCredential": {
    "description": "AccessCredential represents a credential source that can be used to authorize remote access to the vm guest Only one of its members may be specified.",
    "type": "object",
    "properties": {
     "sshPublicKey": {
      "description": "SSHPublicKey represents the source and method of applying a ssh public key into a guest virtual machine.",
      "$ref": "#/definitions/v1.SSHPublicKeyAccessCredential"
     },
     "userPassword": {
      "description": "UserPassword represents the source and method for applying a guest user's password",
      "$ref": "#/definitions/v1.UserPasswordAccessCredential"
     }
    }
   },
   "v1.AccessCredentialSecretSource": {
    "type": "object",
    "required": [
     "secretName"
    ],
    "properties": {
     "secretName": {
      "description": "SecretName represents the name of the secret in the VMI's namespace",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.AddVolumeOptions": {
    "description": "AddVolumeOptions is provided when dynamically hot plugging a volume and disk",
    "type": "object",
    "required": [
     "name",
     "disk",
     "volumeSource"
    ],
    "properties": {
     "disk": {
      "description": "Disk represents the hotplug disk that will be plugged into the running VMI",
      "$ref": "#/definitions/v1.Disk"
     },
     "dryRun": {
      "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "name": {
      "description": "Name represents the name that will be used to map the disk to the corresponding volume. This overrides any name set inside the Disk struct itself.",
      "type": "string",
      "default": ""
     },
     "volumeSource": {
      "description": "VolumeSource represents the source of the volume to map to the disk.",
      "$ref": "#/definitions/v1.HotplugVolumeSource"
     }
    }
   },
   "v1.ArchConfiguration": {
    "type": "object",
    "properties": {
     "amd64": {
      "$ref": "#/definitions/v1.ArchSpecificConfiguration"
     },
     "arm64": {
      "$ref": "#/definitions/v1.ArchSpecificConfiguration"
     },
     "defaultArchitecture": {
      "type": "string"
     },
     "ppc64le": {
      "$ref": "#/definitions/v1.ArchSpecificConfiguration"
     }
    }
   },
   "v1.ArchSpecificConfiguration": {
    "type": "object",
    "properties": {
     "emulatedMachines": {
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "machineType": {
      "type": "string"
     },
     "ovmfPath": {
      "type": "string"
     }
    }
   },
   "v1.BIOS": {
    "description": "If set (default), BIOS will be used.",
    "type": "object",
    "properties": {
     "useSerial": {
      "description": "If set, the BIOS output will be transmitted over serial",
      "type": "boolean"
     }
    }
   },
   "v1.BlockSize": {
    "description": "BlockSize provides the option to change the block size presented to the VM for a disk. Only one of its members may be specified.",
    "type": "object",
    "properties": {
     "custom": {
      "$ref": "#/definitions/v1.CustomBlockSize"
     },
     "matchVolume": {
      "$ref": "#/definitions/v1.FeatureState"
     }
    }
   },
   "v1.Bootloader": {
    "description": "Represents the firmware blob used to assist in the domain creation process. Used for setting the QEMU BIOS file path for the libvirt domain.",
    "type": "object",
    "properties": {
     "bios": {
      "description": "If set (default), BIOS will be used.",
      "$ref": "#/definitions/v1.BIOS"
     },
     "efi": {
      "description": "If set, EFI will be used instead of BIOS.",
      "$ref": "#/definitions/v1.EFI"
     }
    }
   },
   "v1.CDRomTarget": {
    "type": "object",
    "properties": {
     "bus": {
      "description": "Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.",
      "type": "string"
     },
     "readonly": {
      "description": "ReadOnly. Defaults to true.",
      "type": "boolean"
     },
     "tray": {
      "description": "Tray indicates if the tray of the device is open or closed. Allowed values are \"open\" and \"closed\". Defaults to closed.",
      "type": "string"
     }
    }
   },
   "v1.CPU": {
    "description": "CPU allows specifying the CPU topology.",
    "type": "object",
    "properties": {
     "cores": {
      "description": "Cores specifies the number of cores inside the vmi. Must be a value greater or equal 1.",
      "type": "integer",
      "format": "int64"
     },
     "dedicatedCpuPlacement": {
      "description": "DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance on a node with enough dedicated pCPUs and pin the vCPUs to it.",
      "type": "boolean"
     },
     "features": {
      "description": "Features specifies the CPU features list inside the VMI.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.CPUFeature"
      }
     },
     "isolateEmulatorThread": {
      "description": "IsolateEmulatorThread requests one more dedicated pCPU to be allocated for the VMI to place the emulator thread on it.",
      "type": "boolean"
     },
     "maxSockets": {
      "description": "MaxSockets specifies the maximum amount of sockets that can be hotplugged",
      "type": "integer",
      "format": "int64"
     },
     "model": {
      "description": "Model specifies the CPU model inside the VMI. List of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map. It is possible to specify special cases like \"host-passthrough\" to get the same CPU as the node and \"host-model\" to get CPU closest to the node one. Defaults to host-model.",
      "type": "string"
     },
     "numa": {
      "description": "NUMA allows specifying settings for the guest NUMA topology",
      "$ref": "#/definitions/v1.NUMA"
     },
     "realtime": {
      "description": "Realtime instructs the virt-launcher to tune the VMI for lower latency, optional for real time workloads",
      "$ref": "#/definitions/v1.Realtime"
     },
     "sockets": {
      "description": "Sockets specifies the number of sockets inside the vmi. Must be a value greater or equal 1.",
      "type": "integer",
      "format": "int64"
     },
     "threads": {
      "description": "Threads specifies the number of threads inside the vmi. Must be a value greater or equal 1.",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.CPUFeature": {
    "description": "CPUFeature allows specifying a CPU feature.",
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "Name of the CPU feature",
      "type": "string",
      "default": ""
     },
     "policy": {
      "description": "Policy is the CPU feature attribute which can have the following attributes: force    - The virtual CPU will claim the feature is supported regardless of it being supported by host CPU. require  - Guest creation will fail unless the feature is supported by the host CPU or the hypervisor is able to emulate it. optional - The feature will be supported by virtual CPU if and only if it is supported by host CPU. disable  - The feature will not be supported by virtual CPU. forbid   - Guest creation will fail if the feature is supported by host CPU. Defaults to require",
      "type": "string"
     }
    }
   },
   "v1.CPUTopology": {
    "description": "CPUTopology allows specifying the amount of cores, sockets and threads.",
    "type": "object",
    "properties": {
     "cores": {
      "description": "Cores specifies the number of cores inside the vmi. Must be a value greater or equal 1.",
      "type": "integer",
      "format": "int64"
     },
     "sockets": {
      "description": "Sockets specifies the number of sockets inside the vmi. Must be a value greater or equal 1.",
      "type": "integer",
      "format": "int64"
     },
     "threads": {
      "description": "Threads specifies the number of threads inside the vmi. Must be a value greater or equal 1.",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.CertConfig": {
    "description": "CertConfig contains the tunables for TLS certificates",
    "type": "object",
    "properties": {
     "duration": {
      "description": "The requested 'duration' (i.e. lifetime) of the Certificate.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Duration"
     },
     "renewBefore": {
      "description": "The amount of time before the currently issued certificate's \"notAfter\" time that we will begin to attempt to renew the certificate.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Duration"
     }
    }
   },
   "v1.Chassis": {
    "description": "Chassis specifies the chassis info passed to the domain.",
    "type": "object",
    "properties": {
     "asset": {
      "type": "string"
     },
     "manufacturer": {
      "type": "string"
     },
     "serial": {
      "type": "string"
     },
     "sku": {
      "type": "string"
     },
     "version": {
      "type": "string"
     }
    }
   },
   "v1.ClientPassthroughDevices": {
    "description": "Represent a subset of client devices that can be accessed by VMI. At the moment only, USB devices using Usbredir's library and tooling. Another fit would be a smartcard with libcacard.\n\nThe struct is currently empty as there is no immediate request for user-facing APIs. This structure simply turns on USB redirection of UsbClientPassthroughMaxNumberOf devices.",
    "type": "object"
   },
   "v1.Clock": {
    "description": "Represents the clock and timers of a vmi.",
    "type": "object",
    "properties": {
     "timer": {
      "description": "Timer specifies whih timers are attached to the vmi.",
      "$ref": "#/definitions/v1.Timer"
     },
     "timezone": {
      "description": "Timezone sets the guest clock to the specified timezone. Zone name follows the TZ environment variable format (e.g. 'America/New_York').",
      "type": "string"
     },
     "utc": {
      "description": "UTC sets the guest clock to UTC on each boot. If an offset is specified, guest changes to the clock will be kept during reboots and are not reset.",
      "$ref": "#/definitions/v1.ClockOffsetUTC"
     }
    }
   },
   "v1.ClockOffset": {
    "description": "Exactly one of its members must be set.",
    "type": "object",
    "properties": {
     "timezone": {
      "description": "Timezone sets the guest clock to the specified timezone. Zone name follows the TZ environment variable format (e.g. 'America/New_York').",
      "type": "string"
     },
     "utc": {
      "description": "UTC sets the guest clock to UTC on each boot. If an offset is specified, guest changes to the clock will be kept during reboots and are not reset.",
      "$ref": "#/definitions/v1.ClockOffsetUTC"
     }
    }
   },
   "v1.ClockOffsetUTC": {
    "description": "UTC sets the guest clock to UTC on each boot.",
    "type": "object",
    "properties": {
     "offsetSeconds": {
      "description": "OffsetSeconds specifies an offset in seconds, relative to UTC. If set, guest changes to the clock will be kept during reboots and not reset.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.CloudInitConfigDriveSource": {
    "description": "Represents a cloud-init config drive user data source. More info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html",
    "type": "object",
    "properties": {
     "networkData": {
      "description": "NetworkData contains config drive inline cloud-init networkdata.",
      "type": "string"
     },
     "networkDataBase64": {
      "description": "NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.",
      "type": "string"
     },
     "networkDataSecretRef": {
      "description": "NetworkDataSecretRef references a k8s secret that contains config drive networkdata.",
      "$ref": "#/definitions/k8s.io.api.core.v1.LocalObjectReference"
     },
     "secretRef": {
      "description": "UserDataSecretRef references a k8s secret that contains config drive userdata.",
      "$ref": "#/definitions/k8s.io.api.core.v1.LocalObjectReference"
     },
     "userData": {
      "description": "UserData contains config drive inline cloud-init userdata.",
      "type": "string"
     },
     "userDataBase64": {
      "description": "UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.",
      "type": "string"
     }
    }
   },
   "v1.CloudInitNoCloudSource": {
    "description": "Represents a cloud-init nocloud user data source. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html",
    "type": "object",
    "properties": {
     "networkData": {
      "description": "NetworkData contains NoCloud inline cloud-init networkdata.",
      "type": "string"
     },
     "networkDataBase64": {
      "description": "NetworkDataBase64 contains NoCloud cloud-init networkdata as a base64 encoded string.",
      "type": "string"
     },
     "networkDataSecretRef": {
      "description": "NetworkDataSecretRef references a k8s secret that contains NoCloud networkdata.",
      "$ref": "#/definitions/k8s.io.api.core.v1.LocalObjectReference"
     },
     "secretRef": {
      "description": "UserDataSecretRef references a k8s secret that contains NoCloud userdata.",
      "$ref": "#/definitions/k8s.io.api.core.v1.LocalObjectReference"
     },
     "userData": {
      "description": "UserData contains NoCloud inline cloud-init userdata.",
      "type": "string"
     },
     "userDataBase64": {
      "description": "UserDataBase64 contains NoCloud cloud-init userdata as a base64 encoded string.",
      "type": "string"
     }
    }
   },
   "v1.ComponentConfig": {
    "type": "object",
    "properties": {
     "nodePlacement": {
      "description": "nodePlacement describes scheduling configuration for specific KubeVirt components",
      "$ref": "#/definitions/v1.NodePlacement"
     },
     "replicas": {
      "description": "replicas indicates how many replicas should be created for each KubeVirt infrastructure component (like virt-api or virt-controller). Defaults to 2. WARNING: this is an advanced feature that prevents auto-scaling for core kubevirt components. Please use with caution!",
      "type": "integer",
      "format": "byte"
     }
    }
   },
   "v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation": {
    "type": "object"
   },
   "v1.ConfigMapVolumeSource": {
    "description": "ConfigMapVolumeSource adapts a ConfigMap into a volume. More info: https://kubernetes.io/docs/concepts/storage/volumes/#configmap",
    "type": "object",
    "properties": {
     "name": {
      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string"
     },
     "optional": {
      "description": "Specify whether the ConfigMap or it's keys must be defined",
      "type": "boolean"
     },
     "volumeLabel": {
      "description": "The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart).",
      "type": "string"
     }
    }
   },
   "v1.ContainerDiskInfo": {
    "description": "ContainerDiskInfo shows info about the containerdisk",
    "type": "object",
    "properties": {
     "checksum": {
      "description": "Checksum is the checksum of the rootdisk or kernel artifacts inside the containerdisk",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.ContainerDiskSource": {
    "description": "Represents a docker image with an embedded disk.",
    "type": "object",
    "required": [
     "image"
    ],
    "properties": {
     "image": {
      "description": "Image is the name of the image with the embedded disk.",
      "type": "string",
      "default": ""
     },
     "imagePullPolicy": {
      "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n\nPossible enum values:\n - `\"Always\"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.\n - `\"IfNotPresent\"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.\n - `\"Never\"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present",
      "type": "string",
      "enum": [
       "Always",
       "IfNotPresent",
       "Never"
      ]
     },
     "imagePullSecret": {
      "description": "ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.",
      "type": "string"
     },
     "path": {
      "description": "Path defines the path to disk file in the container",
      "type": "string"
     }
    }
   },
   "v1.CustomBlockSize": {
    "description": "CustomBlockSize represents the desired logical and physical block size for a VM disk.",
    "type": "object",
    "required": [
     "logical",
     "physical"
    ],
    "properties": {
     "logical": {
      "type": "integer",
      "format": "int32",
      "default": 0
     },
     "physical": {
      "type": "integer",
      "format": "int32",
      "default": 0
     }
    }
   },
   "v1.CustomProfile": {
    "type": "object",
    "properties": {
     "localhostProfile": {
      "type": "string"
     },
     "runtimeDefaultProfile": {
      "type": "boolean"
     }
    }
   },
   "v1.CustomizeComponents": {
    "type": "object",
    "properties": {
     "flags": {
      "description": "Configure the value used for deployment and daemonset resources",
      "$ref": "#/definitions/v1.Flags"
     },
     "patches": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.CustomizeComponentsPatch"
      },
      "x-kubernetes-list-type": "atomic"
     }
    }
   },
   "v1.CustomizeComponentsPatch": {
    "type": "object",
    "required": [
     "resourceName",
     "resourceType",
     "patch",
     "type"
    ],
    "properties": {
     "patch": {
      "type": "string",
      "default": ""
     },
     "resourceName": {
      "type": "string",
      "default": ""
     },
     "resourceType": {
      "type": "string",
      "default": ""
     },
     "type": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.DHCPOptions": {
    "description": "Extra DHCP options to use in the interface.",
    "type": "object",
    "properties": {
     "bootFileName": {
      "description": "If specified will pass option 67 to interface's DHCP server",
      "type": "string"
     },
     "ntpServers": {
      "description": "If specified will pass the configured NTP server to the VM via DHCP option 042.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "privateOptions": {
      "description": "If specified will pass extra DHCP options for private use, range: 224-254",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.DHCPPrivateOptions"
      }
     },
     "tftpServerName": {
      "description": "If specified will pass option 66 to interface's DHCP server",
      "type": "string"
     }
    }
   },
   "v1.DHCPPrivateOptions": {
    "description": "DHCPExtraOptions defines Extra DHCP options for a VM.",
    "type": "object",
    "required": [
     "option",
     "value"
    ],
    "properties": {
     "option": {
      "description": "Option is an Integer value from 224-254 Required.",
      "type": "integer",
      "format": "int32",
      "default": 0
     },
     "value": {
      "description": "Value is a String value for the Option provided Required.",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.DataVolumeSource": {
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "hotpluggable": {
      "description": "Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.",
      "type": "boolean"
     },
     "name": {
      "description": "Name of both the DataVolume and the PVC in the same namespace. After PVC population the DataVolume is garbage collected by default.",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.DataVolumeTemplateDummyStatus": {
    "type": "object",
    "nullable": true
   },
   "v1.DataVolumeTemplateSpec": {
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "DataVolumeSpec contains the DataVolume specification.",
      "default": {},
      "$ref": "#/definitions/v1beta1.DataVolumeSpec"
     },
     "status": {
      "description": "DataVolumeTemplateDummyStatus is here simply for backwards compatibility with a previous API.",
      "$ref": "#/definitions/v1.DataVolumeTemplateDummyStatus"
     }
    }
   },
   "v1.DeveloperConfiguration": {
    "description": "DeveloperConfiguration holds developer options",
    "type": "object",
    "properties": {
     "cpuAllocationRatio": {
      "description": "For each requested virtual CPU, CPUAllocationRatio defines how much physical CPU to request per VMI from the hosting node. The value is in fraction of a CPU thread (or core on non-hyperthreaded nodes). For example, a value of 1 means 1 physical CPU thread per VMI CPU thread. A value of 100 would be 1% of a physical thread allocated for each requested VMI thread. This option has no effect on VMIs that request dedicated CPUs. More information at: https://kubevirt.io/user-guide/operations/node_overcommit/#node-cpu-allocation-ratio Defaults to 10",
      "type": "integer",
      "format": "int32"
     },
     "diskVerification": {
      "$ref": "#/definitions/v1.DiskVerification"
     },
     "featureGates": {
      "description": "FeatureGates is the list of experimental features to enable. Defaults to none",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "logVerbosity": {
      "$ref": "#/definitions/v1.LogVerbosity"
     },
     "memoryOvercommit": {
      "description": "MemoryOvercommit is the percentage of memory we want to give VMIs compared to the amount given to its parent pod (virt-launcher). For example, a value of 102 means the VMI will \"see\" 2% more memory than its parent pod. Values under 100 are effectively \"undercommits\". Overcommits can lead to memory exhaustion, which in turn can lead to crashes. Use carefully. Defaults to 100",
      "type": "integer",
      "format": "int32"
     },
     "minimumClusterTSCFrequency": {
      "description": "Allow overriding the automatically determined minimum TSC frequency of the cluster and fixate the minimum to this frequency.",
      "type": "integer",
      "format": "int64"
     },
     "minimumReservePVCBytes": {
      "description": "MinimumReservePVCBytes is the amount of space, in bytes, to leave unused on disks. Defaults to 131072 (128KiB)",
      "type": "integer",
      "format": "int64"
     },
     "nodeSelectors": {
      "description": "NodeSelectors allows restricting VMI creation to nodes that match a set of labels. Defaults to none",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "pvcTolerateLessSpaceUpToPercent": {
      "description": "LessPVCSpaceToleration determines how much smaller, in percentage, disk PVCs are allowed to be compared to the requested size (to account for various overheads). Defaults to 10",
      "type": "integer",
      "format": "int32"
     },
     "useEmulation": {
      "description": "UseEmulation can be set to true to allow fallback to software emulation in case hardware-assisted emulation is not available. Defaults to false",
      "type": "boolean"
     }
    }
   },
   "v1.Devices": {
    "type": "object",
    "properties": {
     "autoattachGraphicsDevice": {
      "description": "Whether to attach the default graphics device or not. VNC will not be available if set to false. Defaults to true.",
      "type": "boolean"
     },
     "autoattachInputDevice": {
      "description": "Whether to attach an Input Device. Defaults to false.",
      "type": "boolean"
     },
     "autoattachMemBalloon": {
      "description": "Whether to attach the Memory balloon device with default period. Period can be adjusted in virt-config. Defaults to true.",
      "type": "boolean"
     },
     "autoattachPodInterface": {
      "description": "Whether to attach a pod network interface. Defaults to true.",
      "type": "boolean"
     },
     "autoattachSerialConsole": {
      "description": "Whether to attach the default virtio-serial console or not. Serial console access will not be available if set to false. Defaults to true.",
      "type": "boolean"
     },
     "autoattachVSOCK": {
      "description": "Whether to attach the VSOCK CID to the VM or not. VSOCK access will be available if set to true. Defaults to false.",
      "type": "boolean"
     },
     "blockMultiQueue": {
      "description": "Whether or not to enable virtio multi-queue for block devices. Defaults to false.",
      "type": "boolean"
     },
     "clientPassthrough": {
      "description": "To configure and access client devices such as redirecting USB",
      "$ref": "#/definitions/v1.ClientPassthroughDevices"
     },
     "disableHotplug": {
      "description": "DisableHotplug disabled the ability to hotplug disks.",
      "type": "boolean"
     },
     "disks": {
      "description": "Disks describes disks, cdroms and luns which are connected to the vmi.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.Disk"
      }
     },
     "downwardMetrics": {
      "description": "DownwardMetrics creates a virtio serials for exposing the downward metrics to the vmi.",
      "$ref": "#/definitions/v1.DownwardMetrics"
     },
     "filesystems": {
      "description": "Filesystems describes filesystem which is connected to the vmi.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.Filesystem"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "gpus": {
      "description": "Whether to attach a GPU device to the vmi.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.GPU"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "hostDevices": {
      "description": "Whether to attach a host device to the vmi.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.HostDevice"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "inputs": {
      "description": "Inputs describe input devices",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.Input"
      }
     },
     "interfaces": {
      "description": "Interfaces describe network interfaces which are added to the vmi.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.Interface"
      }
     },
     "logSerialConsole": {
      "description": "Whether to log the auto-attached default serial console or not. Serial console logs will be collect to a file and then streamed from a named `guest-console-log`. Not relevant if autoattachSerialConsole is disabled. Defaults to cluster wide setting on VirtualMachineOptions.",
      "type": "boolean"
     },
     "networkInterfaceMultiqueue": {
      "description": "If specified, virtual network interfaces configured with a virtio bus will also enable the vhost multiqueue feature for network devices. The number of queues created depends on additional factors of the VirtualMachineInstance, like the number of guest CPUs.",
      "type": "boolean"
     },
     "rng": {
      "description": "Whether to have random number generator from host",
      "$ref": "#/definitions/v1.Rng"
     },
     "sound": {
      "description": "Whether to emulate a sound device.",
      "$ref": "#/definitions/v1.SoundDevice"
     },
     "tpm": {
      "description": "Whether to emulate a TPM device.",
      "$ref": "#/definitions/v1.TPMDevice"
     },
     "useVirtioTransitional": {
      "description": "Fall back to legacy virtio 0.9 support if virtio bus is selected on devices. This is helpful for old machines like CentOS6 or RHEL6 which do not understand virtio_non_transitional (virtio 1.0).",
      "type": "boolean"
     },
     "watchdog": {
      "description": "Watchdog describes a watchdog device which can be added to the vmi.",
      "$ref": "#/definitions/v1.Watchdog"
     }
    }
   },
   "v1.DisableFreePageReporting": {
    "type": "object"
   },
   "v1.DisableSerialConsoleLog": {
    "type": "object"
   },
   "v1.Disk": {
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "blockSize": {
      "description": "If specified, the virtual disk will be presented with the given block sizes.",
      "$ref": "#/definitions/v1.BlockSize"
     },
     "bootOrder": {
      "description": "BootOrder is an integer value \u003e 0, used to determine ordering of boot devices. Lower values take precedence. Each disk or interface that has a boot order must have a unique value. Disks without a boot order are not tried if a disk with a boot order exists.",
      "type": "integer",
      "format": "int32"
     },
     "cache": {
      "description": "Cache specifies which kvm disk cache mode should be used. Supported values are: CacheNone, CacheWriteThrough.",
      "type": "string"
     },
     "cdrom": {
      "description": "Attach a volume as a cdrom to the vmi.",
      "$ref": "#/definitions/v1.CDRomTarget"
     },
     "dedicatedIOThread": {
      "description": "dedicatedIOThread indicates this disk should have an exclusive IO Thread. Enabling this implies useIOThreads = true. Defaults to false.",
      "type": "boolean"
     },
     "disk": {
      "description": "Attach a volume as a disk to the vmi.",
      "$ref": "#/definitions/v1.DiskTarget"
     },
     "errorPolicy": {
      "description": "If specified, it can change the default error policy (stop) for the disk",
      "type": "string"
     },
     "io": {
      "description": "IO specifies which QEMU disk IO mode should be used. Supported values are: native, default, threads.",
      "type": "string"
     },
     "lun": {
      "description": "Attach a volume as a LUN to the vmi.",
      "$ref": "#/definitions/v1.LunTarget"
     },
     "name": {
      "description": "Name is the device name",
      "type": "string",
      "default": ""
     },
     "serial": {
      "description": "Serial provides the ability to specify a serial number for the disk device.",
      "type": "string"
     },
     "shareable": {
      "description": "If specified the disk is made sharable and multiple write from different VMs are permitted",
      "type": "boolean"
     },
     "tag": {
      "description": "If specified, disk address and its tag will be provided to the guest via config drive metadata",
      "type": "string"
     }
    }
   },
   "v1.DiskTarget": {
    "type": "object",
    "properties": {
     "bus": {
      "description": "Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi, usb.",
      "type": "string"
     },
     "pciAddress": {
      "description": "If specified, the virtual disk will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10",
      "type": "string"
     },
     "readonly": {
      "description": "ReadOnly. Defaults to false.",
      "type": "boolean"
     }
    }
   },
   "v1.DiskVerification": {
    "description": "DiskVerification holds container disks verification limits",
    "type": "object",
    "required": [
     "memoryLimit"
    ],
    "properties": {
     "memoryLimit": {
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     }
    }
   },
   "v1.DomainMemoryDumpInfo": {
    "description": "DomainMemoryDumpInfo represents the memory dump information",
    "type": "object",
    "properties": {
     "claimName": {
      "description": "ClaimName is the name of the pvc the memory was dumped to",
      "type": "string"
     },
     "endTimestamp": {
      "description": "EndTimestamp is the time when the memory dump completed",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "startTimestamp": {
      "description": "StartTimestamp is the time when the memory dump started",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "targetFileName": {
      "description": "TargetFileName is the name of the memory dump output",
      "type": "string"
     }
    }
   },
   "v1.DomainSpec": {
    "type": "object",
    "required": [
     "devices"
    ],
    "properties": {
     "chassis": {
      "description": "Chassis specifies the chassis info passed to the domain.",
      "$ref": "#/definitions/v1.Chassis"
     },
     "clock": {
      "description": "Clock sets the clock and timers of the vmi.",
      "$ref": "#/definitions/v1.Clock"
     },
     "cpu": {
      "description": "CPU allow specified the detailed CPU topology inside the vmi.",
      "$ref": "#/definitions/v1.CPU"
     },
     "devices": {
      "description": "Devices allows adding disks, network interfaces, and others",
      "default": {},
      "$ref": "#/definitions/v1.Devices"
     },
     "features": {
      "description": "Features like acpi, apic, hyperv, smm.",
      "$ref": "#/definitions/v1.Features"
     },
     "firmware": {
      "description": "Firmware.",
      "$ref": "#/definitions/v1.Firmware"
     },
     "ioThreadsPolicy": {
      "description": "Controls whether or not disks will share IOThreads. Omitting IOThreadsPolicy disables use of IOThreads. One of: shared, auto",
      "type": "string"
     },
     "launchSecurity": {
      "description": "Launch Security setting of the vmi.",
      "$ref": "#/definitions/v1.LaunchSecurity"
     },
     "machine": {
      "description": "Machine type.",
      "$ref": "#/definitions/v1.Machine"
     },
     "memory": {
      "description": "Memory allow specifying the VMI memory features.",
      "$ref": "#/definitions/v1.Memory"
     },
     "resources": {
      "description": "Resources describes the Compute Resources required by this vmi.",
      "default": {},
      "$ref": "#/definitions/v1.ResourceRequirements"
     }
    }
   },
   "v1.DownwardAPIVolumeSource": {
    "description": "DownwardAPIVolumeSource represents a volume containing downward API info.",
    "type": "object",
    "properties": {
     "fields": {
      "description": "Fields is a list of downward API volume file",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.DownwardAPIVolumeFile"
      }
     },
     "volumeLabel": {
      "description": "The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart).",
      "type": "string"
     }
    }
   },
   "v1.DownwardMetrics": {
    "type": "object"
   },
   "v1.DownwardMetricsVolumeSource": {
    "description": "DownwardMetricsVolumeSource adds a very small disk to VMIs which contains a limited view of host and guest metrics. The disk content is compatible with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics.",
    "type": "object"
   },
   "v1.EFI": {
    "description": "If set, EFI will be used instead of BIOS.",
    "type": "object",
    "properties": {
     "persistent": {
      "description": "If set to true, Persistent will persist the EFI NVRAM across reboots. Defaults to false",
      "type": "boolean"
     },
     "secureBoot": {
      "description": "If set, SecureBoot will be enabled and the OVMF roms will be swapped for SecureBoot-enabled ones. Requires SMM to be enabled. Defaults to true",
      "type": "boolean"
     }
    }
   },
   "v1.EmptyDiskSource": {
    "description": "EmptyDisk represents a temporary disk which shares the vmis lifecycle.",
    "type": "object",
    "required": [
     "capacity"
    ],
    "properties": {
     "capacity": {
      "description": "Capacity of the sparse disk.",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     }
    }
   },
   "v1.EphemeralVolumeSource": {
    "type": "object",
    "properties": {
     "persistentVolumeClaim": {
      "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. Directly attached to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
      "$ref": "#/definitions/k8s.io.api.core.v1.PersistentVolumeClaimVolumeSource"
     }
    }
   },
   "v1.FeatureAPIC": {
    "type": "object",
    "properties": {
     "enabled": {
      "description": "Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.",
      "type": "boolean"
     },
     "endOfInterrupt": {
      "description": "EndOfInterrupt enables the end of interrupt notification in the guest. Defaults to false.",
      "type": "boolean"
     }
    }
   },
   "v1.FeatureHyperv": {
    "description": "Hyperv specific features.",
    "type": "object",
    "properties": {
     "evmcs": {
      "description": "EVMCS Speeds up L2 vmexits, but disables other virtualization features. Requires vapic. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "frequencies": {
      "description": "Frequencies improves the TSC clock source handling for Hyper-V on KVM. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "ipi": {
      "description": "IPI improves performances in overcommited environments. Requires vpindex. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "reenlightenment": {
      "description": "Reenlightenment enables the notifications on TSC frequency changes. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "relaxed": {
      "description": "Relaxed instructs the guest OS to disable watchdog timeouts. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "reset": {
      "description": "Reset enables Hyperv reboot/reset for the vmi. Requires synic. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "runtime": {
      "description": "Runtime improves the time accounting to improve scheduling in the guest. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "spinlocks": {
      "description": "Spinlocks allows to configure the spinlock retry attempts.",
      "$ref": "#/definitions/v1.FeatureSpinlocks"
     },
     "synic": {
      "description": "SyNIC enables the Synthetic Interrupt Controller. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "synictimer": {
      "description": "SyNICTimer enables Synthetic Interrupt Controller Timers, reducing CPU load. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.SyNICTimer"
     },
     "tlbflush": {
      "description": "TLBFlush improves performances in overcommited environments. Requires vpindex. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "vapic": {
      "description": "VAPIC improves the paravirtualized handling of interrupts. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "vendorid": {
      "description": "VendorID allows setting the hypervisor vendor id. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureVendorID"
     },
     "vpindex": {
      "description": "VPIndex enables the Virtual Processor Index to help windows identifying virtual processors. Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureState"
     }
    }
   },
   "v1.FeatureKVM": {
    "type": "object",
    "properties": {
     "hidden": {
      "description": "Hide the KVM hypervisor from standard MSR based discovery. Defaults to false",
      "type": "boolean"
     }
    }
   },
   "v1.FeatureSpinlocks": {
    "type": "object",
    "properties": {
     "enabled": {
      "description": "Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.",
      "type": "boolean"
     },
     "spinlocks": {
      "description": "Retries indicates the number of retries. Must be a value greater or equal 4096. Defaults to 4096.",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.FeatureState": {
    "description": "Represents if a feature is enabled or disabled.",
    "type": "object",
    "properties": {
     "enabled": {
      "description": "Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.",
      "type": "boolean"
     }
    }
   },
   "v1.FeatureVendorID": {
    "type": "object",
    "properties": {
     "enabled": {
      "description": "Enabled determines if the feature should be enabled or disabled on the guest. Defaults to true.",
      "type": "boolean"
     },
     "vendorid": {
      "description": "VendorID sets the hypervisor vendor id, visible to the vmi. String up to twelve characters.",
      "type": "string"
     }
    }
   },
   "v1.Features": {
    "type": "object",
    "properties": {
     "acpi": {
      "description": "ACPI enables/disables ACPI inside the guest. Defaults to enabled.",
      "default": {},
      "$ref": "#/definitions/v1.FeatureState"
     },
     "apic": {
      "description": "Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureAPIC"
     },
     "hyperv": {
      "description": "Defaults to the machine type setting.",
      "$ref": "#/definitions/v1.FeatureHyperv"
     },
     "hypervPassthrough": {
      "description": "This enables all supported hyperv flags automatically. Bear in mind that if this enabled hyperV features cannot be enabled explicitly. In addition, a Virtual Machine using it will be non-migratable.",
      "$ref": "#/definitions/v1.HyperVPassthrough"
     },
     "kvm": {
      "description": "Configure how KVM presence is exposed to the guest.",
      "$ref": "#/definitions/v1.FeatureKVM"
     },
     "pvspinlock": {
      "description": "Notify the guest that the host supports paravirtual spinlocks. For older kernels this feature should be explicitly disabled.",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "smm": {
      "description": "SMM enables/disables System Management Mode. TSEG not yet implemented.",
      "$ref": "#/definitions/v1.FeatureState"
     }
    }
   },
   "v1.Filesystem": {
    "type": "object",
    "required": [
     "name",
     "virtiofs"
    ],
    "properties": {
     "name": {
      "description": "Name is the device name",
      "type": "string",
      "default": ""
     },
     "virtiofs": {
      "description": "Virtiofs is supported",
      "$ref": "#/definitions/v1.FilesystemVirtiofs"
     }
    }
   },
   "v1.FilesystemVirtiofs": {
    "type": "object"
   },
   "v1.Firmware": {
    "type": "object",
    "properties": {
     "acpi": {
      "description": "Information that can be set in the ACPI table",
      "$ref": "#/definitions/v1.ACPI"
     },
     "bootloader": {
      "description": "Settings to control the bootloader that is used.",
      "$ref": "#/definitions/v1.Bootloader"
     },
     "kernelBoot": {
      "description": "Settings to set the kernel for booting.",
      "$ref": "#/definitions/v1.KernelBoot"
     },
     "serial": {
      "description": "The system-serial-number in SMBIOS",
      "type": "string"
     },
     "uuid": {
      "description": "UUID reported by the vmi bios. Defaults to a random generated uid.",
      "type": "string"
     }
    }
   },
   "v1.Flags": {
    "description": "Flags will create a patch that will replace all flags for the container's command field. The only flags that will be used are those define. There are no guarantees around forward/backward compatibility.  If set incorrectly this will cause the resource when rolled out to error until flags are updated.",
    "type": "object",
    "properties": {
     "api": {
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "controller": {
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "handler": {
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     }
    }
   },
   "v1.FreezeUnfreezeTimeout": {
    "description": "FreezeUnfreezeTimeout represent the time unfreeze will be triggered if guest was not unfrozen by unfreeze command",
    "type": "object",
    "required": [
     "unfreezeTimeout"
    ],
    "properties": {
     "unfreezeTimeout": {
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Duration"
     }
    }
   },
   "v1.GPU": {
    "type": "object",
    "required": [
     "name",
     "deviceName"
    ],
    "properties": {
     "deviceName": {
      "type": "string",
      "default": ""
     },
     "name": {
      "description": "Name of the GPU device as exposed by a device plugin",
      "type": "string",
      "default": ""
     },
     "tag": {
      "description": "If specified, the virtual network interface address and its tag will be provided to the guest via config drive",
      "type": "string"
     },
     "virtualGPUOptions": {
      "$ref": "#/definitions/v1.VGPUOptions"
     }
    }
   },
   "v1.GenerationStatus": {
    "description": "GenerationStatus keeps track of the generation for a given resource so that decisions about forced updates can be made.",
    "type": "object",
    "required": [
     "group",
     "resource",
     "name",
     "lastGeneration"
    ],
    "properties": {
     "group": {
      "description": "group is the group of the thing you're tracking",
      "type": "string",
      "default": ""
     },
     "hash": {
      "description": "hash is an optional field set for resources without generation that are content sensitive like secrets and configmaps",
      "type": "string"
     },
     "lastGeneration": {
      "description": "lastGeneration is the last generation of the workload controller involved",
      "type": "integer",
      "format": "int64",
      "default": 0
     },
     "name": {
      "description": "name is the name of the thing you're tracking",
      "type": "string",
      "default": ""
     },
     "namespace": {
      "description": "namespace is where the thing you're tracking is",
      "type": "string"
     },
     "resource": {
      "description": "resource is the resource type of the thing you're tracking",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.GuestAgentCommandInfo": {
    "description": "List of commands that QEMU guest agent supports",
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "enabled": {
      "type": "boolean"
     },
     "name": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.GuestAgentPing": {
    "description": "GuestAgentPing configures the guest-agent based ping probe",
    "type": "object"
   },
   "v1.HPETTimer": {
    "type": "object",
    "properties": {
     "present": {
      "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.",
      "type": "boolean"
     },
     "tickPolicy": {
      "description": "TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of \"delay\", \"catchup\", \"merge\", \"discard\".",
      "type": "string"
     }
    }
   },
   "v1.HostDevice": {
    "type": "object",
    "required": [
     "name",
     "deviceName"
    ],
    "properties": {
     "deviceName": {
      "description": "DeviceName is the resource name of the host device exposed by a device plugin",
      "type": "string",
      "default": ""
     },
     "name": {
      "type": "string",
      "default": ""
     },
     "tag": {
      "description": "If specified, the virtual network interface address and its tag will be provided to the guest via config drive",
      "type": "string"
     }
    }
   },
   "v1.HostDisk": {
    "description": "Represents a disk created on the cluster level",
    "type": "object",
    "required": [
     "path",
     "type"
    ],
    "properties": {
     "capacity": {
      "description": "Capacity of the sparse disk",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     },
     "path": {
      "description": "The path to HostDisk image located on the cluster",
      "type": "string",
      "default": ""
     },
     "shared": {
      "description": "Shared indicate whether the path is shared between nodes",
      "type": "boolean"
     },
     "type": {
      "description": "Contains information if disk.img exists or should be created allowed options are 'Disk' and 'DiskOrCreate'",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.HotplugVolumeSource": {
    "description": "HotplugVolumeSource Represents the source of a volume to mount which are capable of being hotplugged on a live running VMI. Only one of its members may be specified.",
    "type": "object",
    "properties": {
     "dataVolume": {
      "description": "DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk image.",
      "$ref": "#/definitions/v1.DataVolumeSource"
     },
     "persistentVolumeClaim": {
      "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. Directly attached to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
      "$ref": "#/definitions/v1.PersistentVolumeClaimVolumeSource"
     }
    }
   },
   "v1.HotplugVolumeStatus": {
    "description": "HotplugVolumeStatus represents the hotplug status of the volume",
    "type": "object",
    "properties": {
     "attachPodName": {
      "description": "AttachPodName is the name of the pod used to attach the volume to the node.",
      "type": "string"
     },
     "attachPodUID": {
      "description": "AttachPodUID is the UID of the pod used to attach the volume to the node.",
      "type": "string"
     }
    }
   },
   "v1.Hugepages": {
    "description": "Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.",
    "type": "object",
    "properties": {
     "pageSize": {
      "description": "PageSize specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.",
      "type": "string"
     }
    }
   },
   "v1.HyperVPassthrough": {
    "type": "object",
    "properties": {
     "enabled": {
      "type": "boolean"
     }
    }
   },
   "v1.HypervTimer": {
    "type": "object",
    "properties": {
     "present": {
      "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.",
      "type": "boolean"
     }
    }
   },
   "v1.I6300ESBWatchdog": {
    "description": "i6300esb watchdog device.",
    "type": "object",
    "properties": {
     "action": {
      "description": "The action to take. Valid values are poweroff, reset, shutdown. Defaults to reset.",
      "type": "string"
     }
    }
   },
   "v1.InitrdInfo": {
    "description": "InitrdInfo show info about the initrd file",
    "type": "object",
    "properties": {
     "checksum": {
      "description": "Checksum is the checksum of the initrd file",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.Input": {
    "type": "object",
    "required": [
     "type",
     "name"
    ],
    "properties": {
     "bus": {
      "description": "Bus indicates the bus of input device to emulate. Supported values: virtio, usb.",
      "type": "string"
     },
     "name": {
      "description": "Name is the device name",
      "type": "string",
      "default": ""
     },
     "type": {
      "description": "Type indicated the type of input device. Supported values: tablet.",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.InstancetypeMatcher": {
    "description": "InstancetypeMatcher references a instancetype that is used to fill fields in the VMI template.",
    "type": "object",
    "properties": {
     "inferFromVolume": {
      "description": "InferFromVolume lists the name of a volume that should be used to infer or discover the instancetype to be used through known annotations on the underlying resource. Once applied to the InstancetypeMatcher this field is removed.",
      "type": "string"
     },
     "inferFromVolumeFailurePolicy": {
      "description": "InferFromVolumeFailurePolicy controls what should happen on failure when inferring the instancetype. Allowed values are: \"RejectInferFromVolumeFailure\" and \"IgnoreInferFromVolumeFailure\". If not specified, \"RejectInferFromVolumeFailure\" is used by default.",
      "type": "string"
     },
     "kind": {
      "description": "Kind specifies which instancetype resource is referenced. Allowed values are: \"VirtualMachineInstancetype\" and \"VirtualMachineClusterInstancetype\". If not specified, \"VirtualMachineClusterInstancetype\" is used by default.",
      "type": "string"
     },
     "name": {
      "description": "Name is the name of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype",
      "type": "string"
     },
     "revisionName": {
      "description": "RevisionName specifies a ControllerRevision containing a specific copy of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype to be used. This is initially captured the first time the instancetype is applied to the VirtualMachineInstance.",
      "type": "string"
     }
    }
   },
   "v1.Interface": {
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "acpiIndex": {
      "description": "If specified, the ACPI index is used to provide network interface device naming, that is stable across changes in PCI addresses assigned to the device. This value is required to be unique across all devices and be between 1 and (16*1024-1).",
      "type": "integer",
      "format": "int32"
     },
     "binding": {
      "description": "Binding specifies the binding plugin that will be used to connect the interface to the guest. It provides an alternative to InterfaceBindingMethod. version: 1alphav1",
      "$ref": "#/definitions/v1.PluginBinding"
     },
     "bootOrder": {
      "description": "BootOrder is an integer value \u003e 0, used to determine ordering of boot devices. Lower values take precedence. Each interface or disk that has a boot order must have a unique value. Interfaces without a boot order are not tried.",
      "type": "integer",
      "format": "int32"
     },
     "bridge": {
      "$ref": "#/definitions/v1.InterfaceBridge"
     },
     "dhcpOptions": {
      "description": "If specified the network interface will pass additional DHCP options to the VMI",
      "$ref": "#/definitions/v1.DHCPOptions"
     },
     "macAddress": {
      "description": "Interface MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF.",
      "type": "string"
     },
     "macvtap": {
      "description": "Deprecated, please refer to Kubevirt user guide for alternatives.",
      "$ref": "#/definitions/v1.InterfaceMacvtap"
     },
     "masquerade": {
      "$ref": "#/definitions/v1.InterfaceMasquerade"
     },
     "model": {
      "description": "Interface model. One of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio. Defaults to virtio.",
      "type": "string"
     },
     "name": {
      "description": "Logical name of the interface as well as a reference to the associated networks. Must match the Name of a Network.",
      "type": "string",
      "default": ""
     },
     "passt": {
      "description": "Deprecated, please refer to Kubevirt user guide for alternatives.",
      "$ref": "#/definitions/v1.InterfacePasst"
     },
     "pciAddress": {
      "description": "If specified, the virtual network interface will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10",
      "type": "string"
     },
     "ports": {
      "description": "List of ports to be forwarded to the virtual machine.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.Port"
      }
     },
     "slirp": {
      "$ref": "#/definitions/v1.InterfaceSlirp"
     },
     "sriov": {
      "$ref": "#/definitions/v1.InterfaceSRIOV"
     },
     "state": {
      "description": "State represents the requested operational state of the interface. The (only) value supported is `absent`, expressing a request to remove the interface.",
      "type": "string"
     },
     "tag": {
      "description": "If specified, the virtual network interface address and its tag will be provided to the guest via config drive",
      "type": "string"
     }
    }
   },
   "v1.InterfaceBindingMigration": {
    "type": "object",
    "properties": {
     "method": {
      "description": "Method defines a pre-defined migration methodology version: 1alphav1",
      "type": "string"
     }
    }
   },
   "v1.InterfaceBindingPlugin": {
    "type": "object",
    "properties": {
     "domainAttachmentType": {
      "description": "DomainAttachmentType is a standard domain network attachment method kubevirt supports. Supported values: \"tap\". The standard domain attachment can be used instead or in addition to the sidecarImage. version: 1alphav1",
      "type": "string"
     },
     "migration": {
      "description": "Migration means the VM using the plugin can be safely migrated version: 1alphav1",
      "$ref": "#/definitions/v1.InterfaceBindingMigration"
     },
     "networkAttachmentDefinition": {
      "description": "NetworkAttachmentDefinition references to a NetworkAttachmentDefinition CR object. Format: \u003cname\u003e, \u003cnamespace\u003e/\u003cname\u003e. If namespace is not specified, VMI namespace is assumed. version: 1alphav1",
      "type": "string"
     },
     "sidecarImage": {
      "description": "SidecarImage references a container image that runs in the virt-launcher pod. The sidecar handles (libvirt) domain configuration and optional services. version: 1alphav1",
      "type": "string"
     }
    }
   },
   "v1.InterfaceBridge": {
    "description": "InterfaceBridge connects to a given network via a linux bridge.",
    "type": "object"
   },
   "v1.InterfaceMacvtap": {
    "description": "InterfaceMacvtap connects to a given network by extending the Kubernetes node's L2 networks via a macvtap interface.",
    "type": "object"
   },
   "v1.InterfaceMasquerade": {
    "description": "InterfaceMasquerade connects to a given network using netfilter rules to nat the traffic.",
    "type": "object"
   },
   "v1.InterfacePasst": {
    "description": "InterfacePasst connects to a given network.",
    "type": "object"
   },
   "v1.InterfaceSRIOV": {
    "description": "InterfaceSRIOV connects to a given network by passing-through an SR-IOV PCI device via vfio.",
    "type": "object"
   },
   "v1.InterfaceSlirp": {
    "description": "InterfaceSlirp connects to a given network using QEMU user networking mode.",
    "type": "object"
   },
   "v1.KSMConfiguration": {
    "description": "KSMConfiguration holds information about KSM.",
    "type": "object",
    "properties": {
     "nodeLabelSelector": {
      "description": "NodeLabelSelector is a selector that filters in which nodes the KSM will be enabled. Empty NodeLabelSelector will enable ksm for every node.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
     }
    }
   },
   "v1.KVMTimer": {
    "type": "object",
    "properties": {
     "present": {
      "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.",
      "type": "boolean"
     }
    }
   },
   "v1.KernelBoot": {
    "description": "Represents the firmware blob used to assist in the kernel boot process. Used for setting the kernel, initrd and command line arguments",
    "type": "object",
    "properties": {
     "container": {
      "description": "Container defines the container that containes kernel artifacts",
      "$ref": "#/definitions/v1.KernelBootContainer"
     },
     "kernelArgs": {
      "description": "Arguments to be passed to the kernel at boot time",
      "type": "string"
     }
    }
   },
   "v1.KernelBootContainer": {
    "description": "If set, the VM will be booted from the defined kernel / initrd.",
    "type": "object",
    "required": [
     "image"
    ],
    "properties": {
     "image": {
      "description": "Image that contains initrd / kernel files.",
      "type": "string",
      "default": ""
     },
     "imagePullPolicy": {
      "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n\nPossible enum values:\n - `\"Always\"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.\n - `\"IfNotPresent\"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.\n - `\"Never\"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present",
      "type": "string",
      "enum": [
       "Always",
       "IfNotPresent",
       "Never"
      ]
     },
     "imagePullSecret": {
      "description": "ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.",
      "type": "string"
     },
     "initrdPath": {
      "description": "the fully-qualified path to the ramdisk image in the host OS",
      "type": "string"
     },
     "kernelPath": {
      "description": "The fully-qualified path to the kernel image in the host OS",
      "type": "string"
     }
    }
   },
   "v1.KernelBootStatus": {
    "description": "KernelBootStatus contains info about the kernelBootContainer",
    "type": "object",
    "properties": {
     "initrdInfo": {
      "description": "InitrdInfo show info about the initrd file",
      "$ref": "#/definitions/v1.InitrdInfo"
     },
     "kernelInfo": {
      "description": "KernelInfo show info about the kernel image",
      "$ref": "#/definitions/v1.KernelInfo"
     }
    }
   },
   "v1.KernelInfo": {
    "description": "KernelInfo show info about the kernel image",
    "type": "object",
    "properties": {
     "checksum": {
      "description": "Checksum is the checksum of the kernel image",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.KubeVirt": {
    "description": "KubeVirt represents the object deploying all KubeVirt resources",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "default": {},
      "$ref": "#/definitions/v1.KubeVirtSpec"
     },
     "status": {
      "default": {},
      "$ref": "#/definitions/v1.KubeVirtStatus"
     }
    }
   },
   "v1.KubeVirtCertificateRotateStrategy": {
    "type": "object",
    "properties": {
     "selfSigned": {
      "$ref": "#/definitions/v1.KubeVirtSelfSignConfiguration"
     }
    }
   },
   "v1.KubeVirtCondition": {
    "description": "KubeVirtCondition represents a condition of a KubeVirt deployment",
    "type": "object",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "lastTransitionTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string",
      "default": ""
     },
     "type": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.KubeVirtConfiguration": {
    "description": "KubeVirtConfiguration holds all kubevirt configurations",
    "type": "object",
    "properties": {
     "additionalGuestMemoryOverheadRatio": {
      "description": "AdditionalGuestMemoryOverheadRatio can be used to increase the virtualization infrastructure overhead. This is useful, since the calculation of this overhead is not accurate and cannot be entirely known in advance. The ratio that is being set determines by which factor to increase the overhead calculated by Kubevirt. A higher ratio means that the VMs would be less compromised by node pressures, but would mean that fewer VMs could be scheduled to a node. If not set, the default is 1.",
      "type": "string"
     },
     "apiConfiguration": {
      "$ref": "#/definitions/v1.ReloadableComponentConfiguration"
     },
     "architectureConfiguration": {
      "$ref": "#/definitions/v1.ArchConfiguration"
     },
     "autoCPULimitNamespaceLabelSelector": {
      "description": "When set, AutoCPULimitNamespaceLabelSelector will set a CPU limit on virt-launcher for VMIs running inside namespaces that match the label selector. The CPU limit will equal the number of requested vCPUs. This setting does not apply to VMIs with dedicated CPUs.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "controllerConfiguration": {
      "$ref": "#/definitions/v1.ReloadableComponentConfiguration"
     },
     "cpuModel": {
      "type": "string"
     },
     "cpuRequest": {
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     },
     "defaultRuntimeClass": {
      "type": "string"
     },
     "developerConfiguration": {
      "$ref": "#/definitions/v1.DeveloperConfiguration"
     },
     "emulatedMachines": {
      "description": "Deprecated. Use architectureConfiguration instead.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "evictionStrategy": {
      "description": "EvictionStrategy defines at the cluster level if the VirtualMachineInstance should be migrated instead of shut-off in case of a node drain. If the VirtualMachineInstance specific field is set it overrides the cluster level one.",
      "type": "string"
     },
     "handlerConfiguration": {
      "$ref": "#/definitions/v1.ReloadableComponentConfiguration"
     },
     "imagePullPolicy": {
      "description": "Possible enum values:\n - `\"Always\"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.\n - `\"IfNotPresent\"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.\n - `\"Never\"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present",
      "type": "string",
      "enum": [
       "Always",
       "IfNotPresent",
       "Never"
      ]
     },
     "ksmConfiguration": {
      "description": "KSMConfiguration holds the information regarding the enabling the KSM in the nodes (if available).",
      "$ref": "#/definitions/v1.KSMConfiguration"
     },
     "liveUpdateConfiguration": {
      "description": "LiveUpdateConfiguration holds defaults for live update features",
      "$ref": "#/definitions/v1.LiveUpdateConfiguration"
     },
     "machineType": {
      "description": "Deprecated. Use architectureConfiguration instead.",
      "type": "string"
     },
     "mediatedDevicesConfiguration": {
      "$ref": "#/definitions/v1.MediatedDevicesConfiguration"
     },
     "memBalloonStatsPeriod": {
      "type": "integer",
      "format": "int64"
     },
     "migrations": {
      "$ref": "#/definitions/v1.MigrationConfiguration"
     },
     "minCPUModel": {
      "type": "string"
     },
     "network": {
      "$ref": "#/definitions/v1.NetworkConfiguration"
     },
     "obsoleteCPUModels": {
      "type": "object",
      "additionalProperties": {
       "type": "boolean",
       "default": false
      }
     },
     "ovmfPath": {
      "description": "Deprecated. Use architectureConfiguration instead.",
      "type": "string"
     },
     "permittedHostDevices": {
      "$ref": "#/definitions/v1.PermittedHostDevices"
     },
     "seccompConfiguration": {
      "$ref": "#/definitions/v1.SeccompConfiguration"
     },
     "selinuxLauncherType": {
      "type": "string"
     },
     "smbios": {
      "$ref": "#/definitions/v1.SMBiosConfiguration"
     },
     "supportContainerResources": {
      "description": "SupportContainerResources specifies the resource requirements for various types of supporting containers such as container disks/virtiofs/sidecars and hotplug attachment pods. If omitted a sensible default will be supplied.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.SupportContainerResources"
      },
      "x-kubernetes-list-map-keys": [
       "type"
      ],
      "x-kubernetes-list-type": "map"
     },
     "supportedGuestAgentVersions": {
      "description": "deprecated",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "tlsConfiguration": {
      "$ref": "#/definitions/v1.TLSConfiguration"
     },
     "virtualMachineInstancesPerNode": {
      "type": "integer",
      "format": "int32"
     },
     "virtualMachineOptions": {
      "$ref": "#/definitions/v1.VirtualMachineOptions"
     },
     "vmRolloutStrategy": {
      "description": "VMRolloutStrategy defines how changes to a VM object propagate to its VMI",
      "type": "string"
     },
     "vmStateStorageClass": {
      "description": "VMStateStorageClass is the name of the storage class to use for the PVCs created to preserve VM state, like TPM. The storage class must support RWX in filesystem mode.",
      "type": "string"
     },
     "webhookConfiguration": {
      "$ref": "#/definitions/v1.ReloadableComponentConfiguration"
     }
    }
   },
   "v1.KubeVirtList": {
    "description": "KubeVirtList is a list of KubeVirts",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.KubeVirt"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1.KubeVirtSelfSignConfiguration": {
    "type": "object",
    "properties": {
     "ca": {
      "description": "CA configuration CA certs are kept in the CA bundle as long as they are valid",
      "$ref": "#/definitions/v1.CertConfig"
     },
     "caOverlapInterval": {
      "description": "Deprecated. Use CA.Duration and CA.RenewBefore instead",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Duration"
     },
     "caRotateInterval": {
      "description": "Deprecated. Use CA.Duration instead",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Duration"
     },
     "certRotateInterval": {
      "description": "Deprecated. Use Server.Duration instead",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Duration"
     },
     "server": {
      "description": "Server configuration Certs are rotated and discarded",
      "$ref": "#/definitions/v1.CertConfig"
     }
    }
   },
   "v1.KubeVirtSpec": {
    "type": "object",
    "properties": {
     "certificateRotateStrategy": {
      "default": {},
      "$ref": "#/definitions/v1.KubeVirtCertificateRotateStrategy"
     },
     "configuration": {
      "description": "holds kubevirt configurations. same as the virt-configMap",
      "default": {},
      "$ref": "#/definitions/v1.KubeVirtConfiguration"
     },
     "customizeComponents": {
      "default": {},
      "$ref": "#/definitions/v1.CustomizeComponents"
     },
     "imagePullPolicy": {
      "description": "The ImagePullPolicy to use.\n\nPossible enum values:\n - `\"Always\"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.\n - `\"IfNotPresent\"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.\n - `\"Never\"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present",
      "type": "string",
      "enum": [
       "Always",
       "IfNotPresent",
       "Never"
      ]
     },
     "imagePullSecrets": {
      "description": "The imagePullSecrets to pull the container images from Defaults to none",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.LocalObjectReference"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "imageRegistry": {
      "description": "The image registry to pull the container images from Defaults to the same registry the operator's container image is pulled from.",
      "type": "string"
     },
     "imageTag": {
      "description": "The image tag to use for the continer images installed. Defaults to the same tag as the operator's container image.",
      "type": "string"
     },
     "infra": {
      "description": "selectors and tolerations that should apply to KubeVirt infrastructure components",
      "$ref": "#/definitions/v1.ComponentConfig"
     },
     "monitorAccount": {
      "description": "The name of the Prometheus service account that needs read-access to KubeVirt endpoints Defaults to prometheus-k8s",
      "type": "string"
     },
     "monitorNamespace": {
      "description": "The namespace Prometheus is deployed in Defaults to openshift-monitor",
      "type": "string"
     },
     "productComponent": {
      "description": "Designate the apps.kubevirt.io/component label for KubeVirt components. Useful if KubeVirt is included as part of a product. If ProductComponent is not specified, the component label default value is kubevirt.",
      "type": "string"
     },
     "productName": {
      "description": "Designate the apps.kubevirt.io/part-of label for KubeVirt components. Useful if KubeVirt is included as part of a product. If ProductName is not specified, the part-of label will be omitted.",
      "type": "string"
     },
     "productVersion": {
      "description": "Designate the apps.kubevirt.io/version label for KubeVirt components. Useful if KubeVirt is included as part of a product. If ProductVersion is not specified, KubeVirt's version will be used.",
      "type": "string"
     },
     "serviceMonitorNamespace": {
      "description": "The namespace the service monitor will be deployed\n When ServiceMonitorNamespace is set, then we'll install the service monitor object in that namespace\notherwise we will use the monitoring namespace.",
      "type": "string"
     },
     "uninstallStrategy": {
      "description": "Specifies if kubevirt can be deleted if workloads are still present. This is mainly a precaution to avoid accidental data loss",
      "type": "string"
     },
     "workloadUpdateStrategy": {
      "description": "WorkloadUpdateStrategy defines at the cluster level how to handle automated workload updates",
      "default": {},
      "$ref": "#/definitions/v1.KubeVirtWorkloadUpdateStrategy"
     },
     "workloads": {
      "description": "selectors and tolerations that should apply to KubeVirt workloads",
      "$ref": "#/definitions/v1.ComponentConfig"
     }
    }
   },
   "v1.KubeVirtStatus": {
    "description": "KubeVirtStatus represents information pertaining to a KubeVirt deployment.",
    "type": "object",
    "nullable": true,
    "properties": {
     "conditions": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.KubeVirtCondition"
      }
     },
     "defaultArchitecture": {
      "type": "string"
     },
     "generations": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.GenerationStatus"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "observedDeploymentConfig": {
      "type": "string"
     },
     "observedDeploymentID": {
      "type": "string"
     },
     "observedGeneration": {
      "type": "integer",
      "format": "int64"
     },
     "observedKubeVirtRegistry": {
      "type": "string"
     },
     "observedKubeVirtVersion": {
      "type": "string"
     },
     "operatorVersion": {
      "type": "string"
     },
     "outdatedVirtualMachineInstanceWorkloads": {
      "type": "integer",
      "format": "int32"
     },
     "phase": {
      "type": "string"
     },
     "targetDeploymentConfig": {
      "type": "string"
     },
     "targetDeploymentID": {
      "type": "string"
     },
     "targetKubeVirtRegistry": {
      "type": "string"
     },
     "targetKubeVirtVersion": {
      "type": "string"
     }
    }
   },
   "v1.KubeVirtWorkloadUpdateStrategy": {
    "description": "KubeVirtWorkloadUpdateStrategy defines options related to updating a KubeVirt install",
    "type": "object",
    "properties": {
     "batchEvictionInterval": {
      "description": "BatchEvictionInterval Represents the interval to wait before issuing the next batch of shutdowns\n\nDefaults to 1 minute",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Duration"
     },
     "batchEvictionSize": {
      "description": "BatchEvictionSize Represents the number of VMIs that can be forced updated per the BatchShutdownInteral interval\n\nDefaults to 10",
      "type": "integer",
      "format": "int32"
     },
     "workloadUpdateMethods": {
      "description": "WorkloadUpdateMethods defines the methods that can be used to disrupt workloads during automated workload updates. When multiple methods are present, the least disruptive method takes precedence over more disruptive methods. For example if both LiveMigrate and Shutdown methods are listed, only VMs which are not live migratable will be restarted/shutdown\n\nAn empty list defaults to no automated workload updating",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     }
    }
   },
   "v1.LaunchSecurity": {
    "type": "object",
    "properties": {
     "sev": {
      "description": "AMD Secure Encrypted Virtualization (SEV).",
      "$ref": "#/definitions/v1.SEV"
     }
    }
   },
   "v1.LiveUpdateConfiguration": {
    "type": "object",
    "properties": {
     "maxCpuSockets": {
      "description": "MaxCpuSockets holds the maximum amount of sockets that can be hotplugged",
      "type": "integer",
      "format": "int64"
     },
     "maxGuest": {
      "description": "MaxGuest defines the maximum amount memory that can be allocated to the guest using hotplug.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     },
     "maxHotplugRatio": {
      "description": "MaxHotplugRatio is the ratio used to define the max amount of a hotplug resource that can be made available to a VM when the specific Max* setting is not defined (MaxCpuSockets, MaxGuest) Example: VM is configured with 512Mi of guest memory, if MaxGuest is not defined and MaxHotplugRatio is 2 then MaxGuest = 1Gi defaults to 4",
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.LogVerbosity": {
    "description": "LogVerbosity sets log verbosity level of  various components",
    "type": "object",
    "properties": {
     "nodeVerbosity": {
      "description": "NodeVerbosity represents a map of nodes with a specific verbosity level",
      "type": "object",
      "additionalProperties": {
       "type": "integer",
       "format": "int32",
       "default": 0
      }
     },
     "virtAPI": {
      "type": "integer",
      "format": "int32"
     },
     "virtController": {
      "type": "integer",
      "format": "int32"
     },
     "virtHandler": {
      "type": "integer",
      "format": "int32"
     },
     "virtLauncher": {
      "type": "integer",
      "format": "int32"
     },
     "virtOperator": {
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.LunTarget": {
    "type": "object",
    "properties": {
     "bus": {
      "description": "Bus indicates the type of disk device to emulate. supported values: virtio, sata, scsi.",
      "type": "string"
     },
     "readonly": {
      "description": "ReadOnly. Defaults to false.",
      "type": "boolean"
     },
     "reservation": {
      "description": "Reservation indicates if the disk needs to support the persistent reservation for the SCSI disk",
      "type": "boolean"
     }
    }
   },
   "v1.Machine": {
    "type": "object",
    "properties": {
     "type": {
      "description": "QEMU machine type is the actual chipset of the VirtualMachineInstance.",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.MediatedDevicesConfiguration": {
    "description": "MediatedDevicesConfiguration holds information about MDEV types to be defined, if available",
    "type": "object",
    "properties": {
     "mediatedDeviceTypes": {
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "mediatedDevicesTypes": {
      "description": "Deprecated. Use mediatedDeviceTypes instead.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "nodeMediatedDeviceTypes": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.NodeMediatedDeviceTypesConfig"
      },
      "x-kubernetes-list-type": "atomic"
     }
    }
   },
   "v1.MediatedHostDevice": {
    "description": "MediatedHostDevice represents a host mediated device allowed for passthrough",
    "type": "object",
    "required": [
     "mdevNameSelector",
     "resourceName"
    ],
    "properties": {
     "externalResourceProvider": {
      "type": "boolean"
     },
     "mdevNameSelector": {
      "type": "string",
      "default": ""
     },
     "resourceName": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.Memory": {
    "description": "Memory allows specifying the VirtualMachineInstance memory features.",
    "type": "object",
    "properties": {
     "guest": {
      "description": "Guest allows to specifying the amount of memory which is visible inside the Guest OS. The Guest must lie between Requests and Limits from the resources section. Defaults to the requested memory in the resources section if not specified.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     },
     "hugepages": {
      "description": "Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.",
      "$ref": "#/definitions/v1.Hugepages"
     },
     "maxGuest": {
      "description": "MaxGuest allows to specify the maximum amount of memory which is visible inside the Guest OS. The delta between MaxGuest and Guest is the amount of memory that can be hot(un)plugged.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     }
    }
   },
   "v1.MemoryDumpVolumeSource": {
    "type": "object",
    "required": [
     "claimName"
    ],
    "properties": {
     "claimName": {
      "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
      "type": "string",
      "default": ""
     },
     "hotpluggable": {
      "description": "Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.",
      "type": "boolean"
     },
     "readOnly": {
      "description": "readOnly Will force the ReadOnly setting in VolumeMounts. Default false.",
      "type": "boolean"
     }
    }
   },
   "v1.MemoryStatus": {
    "type": "object",
    "properties": {
     "guestAtBoot": {
      "description": "GuestAtBoot specifies with how much memory the VirtualMachine intiallly booted with.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     },
     "guestCurrent": {
      "description": "GuestCurrent specifies how much memory is currently available for the VirtualMachine.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     },
     "guestRequested": {
      "description": "GuestRequested specifies how much memory was requested (hotplug) for the VirtualMachine.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     }
    }
   },
   "v1.MigrateOptions": {
    "description": "MigrateOptions may be provided on migrate request.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "dryRun": {
      "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     }
    }
   },
   "v1.MigrationConfiguration": {
    "description": "MigrationConfiguration holds migration options. Can be overridden for specific groups of VMs though migration policies. Visit https://kubevirt.io/user-guide/operations/migration_policies/ for more information.",
    "type": "object",
    "properties": {
     "allowAutoConverge": {
      "description": "AllowAutoConverge allows the platform to compromise performance/availability of VMIs to guarantee successful VMI live migrations. Defaults to false",
      "type": "boolean"
     },
     "allowPostCopy": {
      "description": "AllowPostCopy enables post-copy live migrations. Such migrations allow even the busiest VMIs to successfully live-migrate. However, events like a network failure can cause a VMI crash. If set to true, migrations will still start in pre-copy, but switch to post-copy when CompletionTimeoutPerGiB triggers. Defaults to false",
      "type": "boolean"
     },
     "bandwidthPerMigration": {
      "description": "BandwidthPerMigration limits the amount of network bandwidth live migrations are allowed to use. The value is in quantity per second. Defaults to 0 (no limit)",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     },
     "completionTimeoutPerGiB": {
      "description": "CompletionTimeoutPerGiB is the maximum number of seconds per GiB a migration is allowed to take. If a live-migration takes longer to migrate than this value multiplied by the size of the VMI, the migration will be cancelled, unless AllowPostCopy is true. Defaults to 800",
      "type": "integer",
      "format": "int64"
     },
     "disableTLS": {
      "description": "When set to true, DisableTLS will disable the additional layer of live migration encryption provided by KubeVirt. This is usually a bad idea. Defaults to false",
      "type": "boolean"
     },
     "matchSELinuxLevelOnMigration": {
      "description": "By default, the SELinux level of target virt-launcher pods is forced to the level of the source virt-launcher. When set to true, MatchSELinuxLevelOnMigration lets the CRI auto-assign a random level to the target. That will ensure the target virt-launcher doesn't share categories with another pod on the node. However, migrations will fail when using RWX volumes that don't automatically deal with SELinux levels.",
      "type": "boolean"
     },
     "network": {
      "description": "Network is the name of the CNI network to use for live migrations. By default, migrations go through the pod network.",
      "type": "string"
     },
     "nodeDrainTaintKey": {
      "description": "NodeDrainTaintKey defines the taint key that indicates a node should be drained. Note: this option relies on the deprecated node taint feature. Default: kubevirt.io/drain",
      "type": "string"
     },
     "parallelMigrationsPerCluster": {
      "description": "ParallelMigrationsPerCluster is the total number of concurrent live migrations allowed cluster-wide. Defaults to 5",
      "type": "integer",
      "format": "int64"
     },
     "parallelOutboundMigrationsPerNode": {
      "description": "ParallelOutboundMigrationsPerNode is the maximum number of concurrent outgoing live migrations allowed per node. Defaults to 2",
      "type": "integer",
      "format": "int64"
     },
     "progressTimeout": {
      "description": "ProgressTimeout is the maximum number of seconds a live migration is allowed to make no progress. Hitting this timeout means a migration transferred 0 data for that many seconds. The migration is then considered stuck and therefore cancelled. Defaults to 150",
      "type": "integer",
      "format": "int64"
     },
     "unsafeMigrationOverride": {
      "description": "UnsafeMigrationOverride allows live migrations to occur even if the compatibility check indicates the migration will be unsafe to the guest. Defaults to false",
      "type": "boolean"
     }
    }
   },
   "v1.MultusNetwork": {
    "description": "Represents the multus cni network.",
    "type": "object",
    "required": [
     "networkName"
    ],
    "properties": {
     "default": {
      "description": "Select the default network and add it to the multus-cni.io/default-network annotation.",
      "type": "boolean"
     },
     "networkName": {
      "description": "References to a NetworkAttachmentDefinition CRD object. Format: \u003cnetworkName\u003e, \u003cnamespace\u003e/\u003cnetworkName\u003e. If namespace is not specified, VMI namespace is assumed.",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.NUMA": {
    "type": "object",
    "properties": {
     "guestMappingPassthrough": {
      "description": "GuestMappingPassthrough will create an efficient guest topology based on host CPUs exclusively assigned to a pod. The created topology ensures that memory and CPUs on the virtual numa nodes never cross boundaries of host numa nodes.",
      "$ref": "#/definitions/v1.NUMAGuestMappingPassthrough"
     }
    }
   },
   "v1.NUMAGuestMappingPassthrough": {
    "description": "NUMAGuestMappingPassthrough instructs kubevirt to model numa topology which is compatible with the CPU pinning on the guest. This will result in a subset of the node numa topology being passed through, ensuring that virtual numa nodes and their memory never cross boundaries coming from the node numa mapping.",
    "type": "object"
   },
   "v1.Network": {
    "description": "Network represents a network type and a resource that should be connected to the vm.",
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "multus": {
      "$ref": "#/definitions/v1.MultusNetwork"
     },
     "name": {
      "description": "Network name. Must be a DNS_LABEL and unique within the vm. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string",
      "default": ""
     },
     "pod": {
      "$ref": "#/definitions/v1.PodNetwork"
     }
    }
   },
   "v1.NetworkConfiguration": {
    "description": "NetworkConfiguration holds network options",
    "type": "object",
    "properties": {
     "binding": {
      "type": "object",
      "additionalProperties": {
       "default": {},
       "$ref": "#/definitions/v1.InterfaceBindingPlugin"
      }
     },
     "defaultNetworkInterface": {
      "type": "string"
     },
     "permitBridgeInterfaceOnPodNetwork": {
      "type": "boolean"
     },
     "permitSlirpInterface": {
      "type": "boolean"
     }
    }
   },
   "v1.NoCloudSSHPublicKeyAccessCredentialPropagation": {
    "type": "object"
   },
   "v1.NodeMediatedDeviceTypesConfig": {
    "description": "NodeMediatedDeviceTypesConfig holds information about MDEV types to be defined in a specific node that matches the NodeSelector field.",
    "type": "object",
    "required": [
     "nodeSelector"
    ],
    "properties": {
     "mediatedDeviceTypes": {
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "mediatedDevicesTypes": {
      "description": "Deprecated. Use mediatedDeviceTypes instead.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "nodeSelector": {
      "description": "NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     }
    }
   },
   "v1.NodePlacement": {
    "description": "NodePlacement describes node scheduling configuration.",
    "type": "object",
    "properties": {
     "affinity": {
      "description": "affinity enables pod affinity/anti-affinity placement expanding the types of constraints that can be expressed with nodeSelector. affinity is going to be applied to the relevant kind of pods in parallel with nodeSelector See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity",
      "$ref": "#/definitions/k8s.io.api.core.v1.Affinity"
     },
     "nodeSelector": {
      "description": "nodeSelector is the node selector applied to the relevant kind of pods It specifies a map of key-value pairs: for the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). See https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "tolerations": {
      "description": "tolerations is a list of tolerations applied to the relevant kind of pods See https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ for more info. These are additional tolerations other than default ones.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.Toleration"
      }
     }
    }
   },
   "v1.PITTimer": {
    "type": "object",
    "properties": {
     "present": {
      "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.",
      "type": "boolean"
     },
     "tickPolicy": {
      "description": "TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of \"delay\", \"catchup\", \"discard\".",
      "type": "string"
     }
    }
   },
   "v1.PauseOptions": {
    "description": "PauseOptions may be provided on pause request.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "dryRun": {
      "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     }
    }
   },
   "v1.PciHostDevice": {
    "description": "PciHostDevice represents a host PCI device allowed for passthrough",
    "type": "object",
    "required": [
     "pciVendorSelector",
     "resourceName"
    ],
    "properties": {
     "externalResourceProvider": {
      "description": "If true, KubeVirt will leave the allocation and monitoring to an external device plugin",
      "type": "boolean"
     },
     "pciVendorSelector": {
      "description": "The vendor_id:product_id tuple of the PCI device",
      "type": "string",
      "default": ""
     },
     "resourceName": {
      "description": "The name of the resource that is representing the device. Exposed by a device plugin and requested by VMs. Typically of the form vendor.com/product_name",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.PermittedHostDevices": {
    "description": "PermittedHostDevices holds information about devices allowed for passthrough",
    "type": "object",
    "properties": {
     "mediatedDevices": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.MediatedHostDevice"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "pciHostDevices": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.PciHostDevice"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "usb": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.USBHostDevice"
      },
      "x-kubernetes-list-type": "atomic"
     }
    }
   },
   "v1.PersistentVolumeClaimInfo": {
    "description": "PersistentVolumeClaimInfo contains the relavant information virt-handler needs cached about a PVC",
    "type": "object",
    "properties": {
     "accessModes": {
      "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "capacity": {
      "description": "Capacity represents the capacity set on the corresponding PVC status",
      "type": "object",
      "additionalProperties": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
      }
     },
     "filesystemOverhead": {
      "description": "Percentage of filesystem's size to be reserved when resizing the PVC",
      "type": "string"
     },
     "preallocated": {
      "description": "Preallocated indicates if the PVC's storage is preallocated or not",
      "type": "boolean"
     },
     "requests": {
      "description": "Requests represents the resources requested by the corresponding PVC spec",
      "type": "object",
      "additionalProperties": {
       "default": {},
       "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
      }
     },
     "volumeMode": {
      "description": "VolumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.\n\nPossible enum values:\n - `\"Block\"` means the volume will not be formatted with a filesystem and will remain a raw block device.\n - `\"Filesystem\"` means the volume will be or is formatted with a filesystem.",
      "type": "string",
      "enum": [
       "Block",
       "Filesystem"
      ]
     }
    }
   },
   "v1.PersistentVolumeClaimVolumeSource": {
    "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. Directly attached to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
    "type": "object",
    "required": [
     "claimName"
    ],
    "properties": {
     "claimName": {
      "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
      "type": "string",
      "default": ""
     },
     "hotpluggable": {
      "description": "Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.",
      "type": "boolean"
     },
     "readOnly": {
      "description": "readOnly Will force the ReadOnly setting in VolumeMounts. Default false.",
      "type": "boolean"
     }
    }
   },
   "v1.PluginBinding": {
    "description": "PluginBinding represents a binding implemented in a plugin.",
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "Name references to the binding name as denined in the kubevirt CR. version: 1alphav1",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.PodNetwork": {
    "description": "Represents the stock pod network interface.",
    "type": "object",
    "properties": {
     "vmIPv6NetworkCIDR": {
      "description": "IPv6 CIDR for the vm network. Defaults to fd10:0:2::/120 if not specified.",
      "type": "string"
     },
     "vmNetworkCIDR": {
      "description": "CIDR for vm network. Default 10.0.2.0/24 if not specified.",
      "type": "string"
     }
    }
   },
   "v1.Port": {
    "description": "Port represents a port to expose from the virtual machine. Default protocol TCP. The port field is mandatory",
    "type": "object",
    "required": [
     "port"
    ],
    "properties": {
     "name": {
      "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
      "type": "string"
     },
     "port": {
      "description": "Number of port to expose for the virtual machine. This must be a valid port number, 0 \u003c x \u003c 65536.",
      "type": "integer",
      "format": "int32",
      "default": 0
     },
     "protocol": {
      "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\".",
      "type": "string"
     }
    }
   },
   "v1.PreferenceMatcher": {
    "description": "PreferenceMatcher references a set of preference that is used to fill fields in the VMI template.",
    "type": "object",
    "properties": {
     "inferFromVolume": {
      "description": "InferFromVolume lists the name of a volume that should be used to infer or discover the preference to be used through known annotations on the underlying resource. Once applied to the PreferenceMatcher this field is removed.",
      "type": "string"
     },
     "inferFromVolumeFailurePolicy": {
      "description": "InferFromVolumeFailurePolicy controls what should happen on failure when preference the instancetype. Allowed values are: \"RejectInferFromVolumeFailure\" and \"IgnoreInferFromVolumeFailure\". If not specified, \"RejectInferFromVolumeFailure\" is used by default.",
      "type": "string"
     },
     "kind": {
      "description": "Kind specifies which preference resource is referenced. Allowed values are: \"VirtualMachinePreference\" and \"VirtualMachineClusterPreference\". If not specified, \"VirtualMachineClusterPreference\" is used by default.",
      "type": "string"
     },
     "name": {
      "description": "Name is the name of the VirtualMachinePreference or VirtualMachineClusterPreference",
      "type": "string"
     },
     "revisionName": {
      "description": "RevisionName specifies a ControllerRevision containing a specific copy of the VirtualMachinePreference or VirtualMachineClusterPreference to be used. This is initially captured the first time the instancetype is applied to the VirtualMachineInstance.",
      "type": "string"
     }
    }
   },
   "v1.Probe": {
    "description": "Probe describes a health check to be performed against a VirtualMachineInstance to determine whether it is alive or ready to receive traffic.",
    "type": "object",
    "properties": {
     "exec": {
      "description": "One and only one of the following should be specified. Exec specifies the action to take, it will be executed on the guest through the qemu-guest-agent. If the guest agent is not available, this probe will fail.",
      "$ref": "#/definitions/k8s.io.api.core.v1.ExecAction"
     },
     "failureThreshold": {
      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "guestAgentPing": {
      "description": "GuestAgentPing contacts the qemu-guest-agent for availability checks.",
      "$ref": "#/definitions/v1.GuestAgentPing"
     },
     "httpGet": {
      "description": "HTTPGet specifies the http request to perform.",
      "$ref": "#/definitions/k8s.io.api.core.v1.HTTPGetAction"
     },
     "initialDelaySeconds": {
      "description": "Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "type": "integer",
      "format": "int32"
     },
     "periodSeconds": {
      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "successThreshold": {
      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
      "type": "integer",
      "format": "int32"
     },
     "tcpSocket": {
      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
      "$ref": "#/definitions/k8s.io.api.core.v1.TCPSocketAction"
     },
     "timeoutSeconds": {
      "description": "Number of seconds after which the probe times out. For exec probes the timeout fails the probe but does not terminate the command running on the guest. This means a blocking command can result in an increasing load on the guest. A small buffer will be added to the resulting workload exec probe to compensate for delays caused by the qemu guest exec mechanism. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation": {
    "type": "object",
    "required": [
     "users"
    ],
    "properties": {
     "users": {
      "description": "Users represents a list of guest users that should have the ssh public keys added to their authorized_keys file.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "set"
     }
    }
   },
   "v1.QemuGuestAgentUserPasswordAccessCredentialPropagation": {
    "type": "object"
   },
   "v1.RESTClientConfiguration": {
    "description": "RESTClientConfiguration allows configuring certain aspects of the k8s rest client.",
    "type": "object",
    "properties": {
     "rateLimiter": {
      "description": "RateLimiter allows selecting and configuring different rate limiters for the k8s client.",
      "$ref": "#/definitions/v1.RateLimiter"
     }
    }
   },
   "v1.RTCTimer": {
    "type": "object",
    "properties": {
     "present": {
      "description": "Enabled set to false makes sure that the machine type or a preset can't add the timer. Defaults to true.",
      "type": "boolean"
     },
     "tickPolicy": {
      "description": "TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest. One of \"delay\", \"catchup\".",
      "type": "string"
     },
     "track": {
      "description": "Track the guest or the wall clock.",
      "type": "string"
     }
    }
   },
   "v1.RateLimiter": {
    "type": "object",
    "properties": {
     "tokenBucketRateLimiter": {
      "$ref": "#/definitions/v1.TokenBucketRateLimiter"
     }
    }
   },
   "v1.Realtime": {
    "description": "Realtime holds the tuning knobs specific for realtime workloads.",
    "type": "object",
    "properties": {
     "mask": {
      "description": "Mask defines the vcpu mask expression that defines which vcpus are used for realtime. Format matches libvirt's expressions. Example: \"0-3,^1\",\"0,2,3\",\"2-3\"",
      "type": "string"
     }
    }
   },
   "v1.ReloadableComponentConfiguration": {
    "description": "ReloadableComponentConfiguration holds all generic k8s configuration options which can be reloaded by components without requiring a restart.",
    "type": "object",
    "properties": {
     "restClient": {
      "description": "RestClient can be used to tune certain aspects of the k8s client in use.",
      "$ref": "#/definitions/v1.RESTClientConfiguration"
     }
    }
   },
   "v1.RemoveVolumeOptions": {
    "description": "RemoveVolumeOptions is provided when dynamically hot unplugging volume and disk",
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "dryRun": {
      "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "name": {
      "description": "Name represents the name that maps to both the disk and volume that should be removed",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.ResourceRequirements": {
    "type": "object",
    "properties": {
     "limits": {
      "description": "Limits describes the maximum amount of compute resources allowed. Valid resource keys are \"memory\" and \"cpu\".",
      "type": "object"
     },
     "overcommitGuestOverhead": {
      "description": "Don't ask the scheduler to take the guest-management overhead into account. Instead put the overhead only into the container's memory limit. This can lead to crashes if all memory is in use on a node. Defaults to false.",
      "type": "boolean"
     },
     "requests": {
      "description": "Requests is a description of the initial vmi resources. Valid resource keys are \"memory\" and \"cpu\".",
      "type": "object"
     }
    }
   },
   "v1.RestartOptions": {
    "description": "RestartOptions may be provided when deleting an API object.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "dryRun": {
      "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "gracePeriodSeconds": {
      "description": "The duration in seconds before the object should be force-restarted. Value must be non-negative integer. The value zero indicates, restart immediately. If this value is nil, the default grace period for deletion of the corresponding VMI for the specified type will be used to determine on how much time to give the VMI to restart. Defaults to a per object value if not specified. zero means restart immediately. Allowed Values: nil and 0",
      "type": "integer",
      "format": "int64"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     }
    }
   },
   "v1.Rng": {
    "description": "Rng represents the random device passed from host",
    "type": "object"
   },
   "v1.SEV": {
    "type": "object",
    "properties": {
     "attestation": {
      "description": "If specified, run the attestation process for a vmi.",
      "$ref": "#/definitions/v1.SEVAttestation"
     },
     "dhCert": {
      "description": "Base64 encoded guest owner's Diffie-Hellman key.",
      "type": "string"
     },
     "policy": {
      "description": "Guest policy flags as defined in AMD SEV API specification. Note: due to security reasons it is not allowed to enable guest debugging. Therefore NoDebug flag is not exposed to users and is always true.",
      "$ref": "#/definitions/v1.SEVPolicy"
     },
     "session": {
      "description": "Base64 encoded session blob.",
      "type": "string"
     }
    }
   },
   "v1.SEVAttestation": {
    "type": "object"
   },
   "v1.SEVMeasurementInfo": {
    "description": "SEVMeasurementInfo contains information about the guest launch measurement.",
    "type": "object",
    "properties": {
     "apiMajor": {
      "description": "API major version of the SEV host.",
      "type": "integer",
      "format": "int32"
     },
     "apiMinor": {
      "description": "API minor version of the SEV host.",
      "type": "integer",
      "format": "int32"
     },
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "buildID": {
      "description": "Build ID of the SEV host.",
      "type": "integer",
      "format": "int32"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "loaderSHA": {
      "description": "SHA256 of the loader binary",
      "type": "string"
     },
     "measurement": {
      "description": "Base64 encoded launch measurement of the SEV guest.",
      "type": "string"
     },
     "policy": {
      "description": "Policy of the SEV guest.",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.SEVPlatformInfo": {
    "description": "SEVPlatformInfo contains information about the AMD SEV features for the node.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "certChain": {
      "description": "Base64 encoded SEV certificate chain.",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "pdh": {
      "description": "Base64 encoded platform Diffie-Hellman key.",
      "type": "string"
     }
    }
   },
   "v1.SEVPolicy": {
    "type": "object",
    "properties": {
     "encryptedState": {
      "description": "SEV-ES is required. Defaults to false.",
      "type": "boolean"
     }
    }
   },
   "v1.SEVSecretOptions": {
    "description": "SEVSecretOptions is used to provide a secret for a running guest.",
    "type": "object",
    "properties": {
     "header": {
      "description": "Base64 encoded header needed to decrypt the secret.",
      "type": "string"
     },
     "secret": {
      "description": "Base64 encoded encrypted launch secret.",
      "type": "string"
     }
    }
   },
   "v1.SEVSessionOptions": {
    "description": "SEVSessionOptions is used to provide SEV session parameters.",
    "type": "object",
    "properties": {
     "dhCert": {
      "description": "Base64 encoded guest owner's Diffie-Hellman key.",
      "type": "string"
     },
     "session": {
      "description": "Base64 encoded session blob.",
      "type": "string"
     }
    }
   },
   "v1.SMBiosConfiguration": {
    "type": "object",
    "properties": {
     "family": {
      "type": "string"
     },
     "manufacturer": {
      "type": "string"
     },
     "product": {
      "type": "string"
     },
     "sku": {
      "type": "string"
     },
     "version": {
      "type": "string"
     }
    }
   },
   "v1.SSHPublicKeyAccessCredential": {
    "description": "SSHPublicKeyAccessCredential represents a source and propagation method for injecting ssh public keys into a vm guest",
    "type": "object",
    "required": [
     "source",
     "propagationMethod"
    ],
    "properties": {
     "propagationMethod": {
      "description": "PropagationMethod represents how the public key is injected into the vm guest.",
      "default": {},
      "$ref": "#/definitions/v1.SSHPublicKeyAccessCredentialPropagationMethod"
     },
     "source": {
      "description": "Source represents where the public keys are pulled from",
      "default": {},
      "$ref": "#/definitions/v1.SSHPublicKeyAccessCredentialSource"
     }
    }
   },
   "v1.SSHPublicKeyAccessCredentialPropagationMethod": {
    "description": "SSHPublicKeyAccessCredentialPropagationMethod represents the method used to inject a ssh public key into the vm guest. Only one of its members may be specified.",
    "type": "object",
    "properties": {
     "configDrive": {
      "description": "ConfigDrivePropagation means that the ssh public keys are injected into the VM using metadata using the configDrive cloud-init provider",
      "$ref": "#/definitions/v1.ConfigDriveSSHPublicKeyAccessCredentialPropagation"
     },
     "noCloud": {
      "description": "NoCloudPropagation means that the ssh public keys are injected into the VM using metadata using the noCloud cloud-init provider",
      "$ref": "#/definitions/v1.NoCloudSSHPublicKeyAccessCredentialPropagation"
     },
     "qemuGuestAgent": {
      "description": "QemuGuestAgentAccessCredentailPropagation means ssh public keys are dynamically injected into the vm at runtime via the qemu guest agent. This feature requires the qemu guest agent to be running within the guest.",
      "$ref": "#/definitions/v1.QemuGuestAgentSSHPublicKeyAccessCredentialPropagation"
     }
    }
   },
   "v1.SSHPublicKeyAccessCredentialSource": {
    "description": "SSHPublicKeyAccessCredentialSource represents where to retrieve the ssh key credentials Only one of its members may be specified.",
    "type": "object",
    "properties": {
     "secret": {
      "description": "Secret means that the access credential is pulled from a kubernetes secret",
      "$ref": "#/definitions/v1.AccessCredentialSecretSource"
     }
    }
   },
   "v1.SeccompConfiguration": {
    "description": "SeccompConfiguration holds Seccomp configuration for Kubevirt components",
    "type": "object",
    "properties": {
     "virtualMachineInstanceProfile": {
      "description": "VirtualMachineInstanceProfile defines what profile should be used with virt-launcher. Defaults to none",
      "$ref": "#/definitions/v1.VirtualMachineInstanceProfile"
     }
    }
   },
   "v1.SecretVolumeSource": {
    "description": "SecretVolumeSource adapts a Secret into a volume.",
    "type": "object",
    "properties": {
     "optional": {
      "description": "Specify whether the Secret or it's keys must be defined",
      "type": "boolean"
     },
     "secretName": {
      "description": "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
      "type": "string"
     },
     "volumeLabel": {
      "description": "The volume label of the resulting disk inside the VMI. Different bootstrapping mechanisms require different values. Typical values are \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart).",
      "type": "string"
     }
    }
   },
   "v1.ServiceAccountVolumeSource": {
    "description": "ServiceAccountVolumeSource adapts a ServiceAccount into a volume.",
    "type": "object",
    "properties": {
     "serviceAccountName": {
      "description": "Name of the service account in the pod's namespace to use. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
      "type": "string"
     }
    }
   },
   "v1.SoundDevice": {
    "description": "Represents the user's configuration to emulate sound cards in the VMI.",
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "model": {
      "description": "We only support ich9 or ac97. If SoundDevice is not set: No sound card is emulated. If SoundDevice is set but Model is not: ich9",
      "type": "string"
     },
     "name": {
      "description": "User's defined name for this sound device",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.StartOptions": {
    "description": "StartOptions may be provided on start request.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "dryRun": {
      "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "paused": {
      "description": "Indicates that VM will be started in paused state.",
      "type": "boolean"
     }
    }
   },
   "v1.StopOptions": {
    "description": "StopOptions may be provided when deleting an API object.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "dryRun": {
      "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "gracePeriod": {
      "description": "this updates the VMIs terminationGracePeriodSeconds during shutdown",
      "type": "integer",
      "format": "int64"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     }
    }
   },
   "v1.SupportContainerResources": {
    "description": "SupportContainerResources are used to specify the cpu/memory request and limits for the containers that support various features of Virtual Machines. These containers are usually idle and don't require a lot of memory or cpu.",
    "type": "object",
    "required": [
     "type",
     "resources"
    ],
    "properties": {
     "resources": {
      "default": {},
      "$ref": "#/definitions/k8s.io.api.core.v1.ResourceRequirements"
     },
     "type": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.SyNICTimer": {
    "type": "object",
    "properties": {
     "direct": {
      "$ref": "#/definitions/v1.FeatureState"
     },
     "enabled": {
      "type": "boolean"
     }
    }
   },
   "v1.SysprepSource": {
    "description": "Represents a Sysprep volume source.",
    "type": "object",
    "properties": {
     "configMap": {
      "description": "ConfigMap references a ConfigMap that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.",
      "$ref": "#/definitions/k8s.io.api.core.v1.LocalObjectReference"
     },
     "secret": {
      "description": "Secret references a k8s Secret that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.",
      "$ref": "#/definitions/k8s.io.api.core.v1.LocalObjectReference"
     }
    }
   },
   "v1.TLSConfiguration": {
    "description": "TLSConfiguration holds TLS options",
    "type": "object",
    "properties": {
     "ciphers": {
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "set"
     },
     "minTLSVersion": {
      "description": "MinTLSVersion is a way to specify the minimum protocol version that is acceptable for TLS connections. Protocol versions are based on the following most common TLS configurations:\n\n  https://ssl-config.mozilla.org/\n\nNote that SSLv3.0 is not a supported protocol version due to well known vulnerabilities such as POODLE: https://en.wikipedia.org/wiki/POODLE",
      "type": "string"
     }
    }
   },
   "v1.TPMDevice": {
    "type": "object",
    "properties": {
     "persistent": {
      "description": "Persistent indicates the state of the TPM device should be kept accross reboots Defaults to false",
      "type": "boolean"
     }
    }
   },
   "v1.Timer": {
    "description": "Represents all available timers in a vmi.",
    "type": "object",
    "properties": {
     "hpet": {
      "description": "HPET (High Precision Event Timer) - multiple timers with periodic interrupts.",
      "$ref": "#/definitions/v1.HPETTimer"
     },
     "hyperv": {
      "description": "Hyperv (Hypervclock) - lets guests read the host’s wall clock time (paravirtualized). For windows guests.",
      "$ref": "#/definitions/v1.HypervTimer"
     },
     "kvm": {
      "description": "KVM \t(KVM clock) - lets guests read the host’s wall clock time (paravirtualized). For linux guests.",
      "$ref": "#/definitions/v1.KVMTimer"
     },
     "pit": {
      "description": "PIT (Programmable Interval Timer) - a timer with periodic interrupts.",
      "$ref": "#/definitions/v1.PITTimer"
     },
     "rtc": {
      "description": "RTC (Real Time Clock) - a continuously running timer with periodic interrupts.",
      "$ref": "#/definitions/v1.RTCTimer"
     }
    }
   },
   "v1.TokenBucketRateLimiter": {
    "type": "object",
    "required": [
     "qps",
     "burst"
    ],
    "properties": {
     "burst": {
      "description": "Maximum burst for throttle. If it's zero, the component default will be used",
      "type": "integer",
      "format": "int32",
      "default": 0
     },
     "qps": {
      "description": "QPS indicates the maximum QPS to the apiserver from this client. If it's zero, the component default will be used",
      "type": "number",
      "format": "float",
      "default": 0
     }
    }
   },
   "v1.TopologyHints": {
    "type": "object",
    "properties": {
     "tscFrequency": {
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.USBHostDevice": {
    "type": "object",
    "required": [
     "resourceName"
    ],
    "properties": {
     "externalResourceProvider": {
      "description": "If true, KubeVirt will leave the allocation and monitoring to an external device plugin",
      "type": "boolean"
     },
     "resourceName": {
      "description": "Identifies the list of USB host devices. e.g: kubevirt.io/storage, kubevirt.io/bootable-usb, etc",
      "type": "string",
      "default": ""
     },
     "selectors": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.USBSelector"
      },
      "x-kubernetes-list-type": "atomic"
     }
    }
   },
   "v1.USBSelector": {
    "type": "object",
    "required": [
     "vendor",
     "product"
    ],
    "properties": {
     "product": {
      "type": "string",
      "default": ""
     },
     "vendor": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.UnpauseOptions": {
    "description": "UnpauseOptions may be provided on unpause request.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "dryRun": {
      "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     }
    }
   },
   "v1.UserPasswordAccessCredential": {
    "description": "UserPasswordAccessCredential represents a source and propagation method for injecting user passwords into a vm guest Only one of its members may be specified.",
    "type": "object",
    "required": [
     "source",
     "propagationMethod"
    ],
    "properties": {
     "propagationMethod": {
      "description": "propagationMethod represents how the user passwords are injected into the vm guest.",
      "default": {},
      "$ref": "#/definitions/v1.UserPasswordAccessCredentialPropagationMethod"
     },
     "source": {
      "description": "Source represents where the user passwords are pulled from",
      "default": {},
      "$ref": "#/definitions/v1.UserPasswordAccessCredentialSource"
     }
    }
   },
   "v1.UserPasswordAccessCredentialPropagationMethod": {
    "description": "UserPasswordAccessCredentialPropagationMethod represents the method used to inject a user passwords into the vm guest. Only one of its members may be specified.",
    "type": "object",
    "properties": {
     "qemuGuestAgent": {
      "description": "QemuGuestAgentAccessCredentailPropagation means passwords are dynamically injected into the vm at runtime via the qemu guest agent. This feature requires the qemu guest agent to be running within the guest.",
      "$ref": "#/definitions/v1.QemuGuestAgentUserPasswordAccessCredentialPropagation"
     }
    }
   },
   "v1.UserPasswordAccessCredentialSource": {
    "description": "UserPasswordAccessCredentialSource represents where to retrieve the user password credentials Only one of its members may be specified.",
    "type": "object",
    "properties": {
     "secret": {
      "description": "Secret means that the access credential is pulled from a kubernetes secret",
      "$ref": "#/definitions/v1.AccessCredentialSecretSource"
     }
    }
   },
   "v1.VGPUDisplayOptions": {
    "type": "object",
    "properties": {
     "enabled": {
      "description": "Enabled determines if a display addapter backed by a vGPU should be enabled or disabled on the guest. Defaults to true.",
      "type": "boolean"
     },
     "ramFB": {
      "description": "Enables a boot framebuffer, until the guest OS loads a real GPU driver Defaults to true.",
      "$ref": "#/definitions/v1.FeatureState"
     }
    }
   },
   "v1.VGPUOptions": {
    "type": "object",
    "properties": {
     "display": {
      "$ref": "#/definitions/v1.VGPUDisplayOptions"
     }
    }
   },
   "v1.VirtualMachine": {
    "description": "VirtualMachine handles the VirtualMachines that are not running or are in a stopped state The VirtualMachine contains the template to create the VirtualMachineInstance. It also mirrors the running state of the created VirtualMachineInstance in its status.",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec contains the specification of VirtualMachineInstance created",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineSpec"
     },
     "status": {
      "description": "Status holds the current state of the controller and brief information about its associated VirtualMachineInstance",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineStatus"
     }
    }
   },
   "v1.VirtualMachineCondition": {
    "description": "VirtualMachineCondition represents the state of VirtualMachine",
    "type": "object",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "lastTransitionTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string",
      "default": ""
     },
     "type": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.VirtualMachineInstance": {
    "description": "VirtualMachineInstance is *the* VirtualMachineInstance Definition. It represents a virtual machine in the runtime environment of kubernetes.",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "VirtualMachineInstance Spec contains the VirtualMachineInstance specification.",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineInstanceSpec"
     },
     "status": {
      "description": "Status is the high level overview of how the VirtualMachineInstance is doing. It contains information available to controllers and users.",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineInstanceStatus"
     }
    }
   },
   "v1.VirtualMachineInstanceCondition": {
    "type": "object",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "lastTransitionTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string",
      "default": ""
     },
     "type": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.VirtualMachineInstanceFileSystem": {
    "description": "VirtualMachineInstanceFileSystem represents guest os disk",
    "type": "object",
    "required": [
     "diskName",
     "mountPoint",
     "fileSystemType",
     "usedBytes",
     "totalBytes"
    ],
    "properties": {
     "disk": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceFileSystemDisk"
      }
     },
     "diskName": {
      "type": "string",
      "default": ""
     },
     "fileSystemType": {
      "type": "string",
      "default": ""
     },
     "mountPoint": {
      "type": "string",
      "default": ""
     },
     "totalBytes": {
      "type": "integer",
      "format": "int32",
      "default": 0
     },
     "usedBytes": {
      "type": "integer",
      "format": "int32",
      "default": 0
     }
    }
   },
   "v1.VirtualMachineInstanceFileSystemDisk": {
    "description": "VirtualMachineInstanceFileSystemDisk represents the guest os FS disks",
    "type": "object",
    "required": [
     "busType"
    ],
    "properties": {
     "busType": {
      "type": "string",
      "default": ""
     },
     "serial": {
      "type": "string"
     }
    }
   },
   "v1.VirtualMachineInstanceFileSystemInfo": {
    "description": "VirtualMachineInstanceFileSystemInfo represents information regarding single guest os filesystem",
    "type": "object",
    "required": [
     "disks"
    ],
    "properties": {
     "disks": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceFileSystem"
      }
     }
    }
   },
   "v1.VirtualMachineInstanceFileSystemList": {
    "description": "VirtualMachineInstanceFileSystemList comprises the list of all filesystems on guest machine",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceFileSystem"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1.VirtualMachineInstanceGuestAgentInfo": {
    "description": "VirtualMachineInstanceGuestAgentInfo represents information from the installed guest agent",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "fsFreezeStatus": {
      "description": "FSFreezeStatus is the state of the fs of the guest it can be either frozen or thawed",
      "type": "string"
     },
     "fsInfo": {
      "description": "FSInfo is a guest os filesystem information containing the disk mapping and disk mounts with usage",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineInstanceFileSystemInfo"
     },
     "guestAgentVersion": {
      "description": "GAVersion is a version of currently installed guest agent",
      "type": "string"
     },
     "hostname": {
      "description": "Hostname represents FQDN of a guest",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "os": {
      "description": "OS contains the guest operating system information",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineInstanceGuestOSInfo"
     },
     "supportedCommands": {
      "description": "Return command list the guest agent supports",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.GuestAgentCommandInfo"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "timezone": {
      "description": "Timezone is guest os current timezone",
      "type": "string"
     },
     "userList": {
      "description": "UserList is a list of active guest OS users",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceGuestOSUser"
      }
     }
    }
   },
   "v1.VirtualMachineInstanceGuestOSInfo": {
    "type": "object",
    "properties": {
     "id": {
      "description": "Guest OS Id",
      "type": "string"
     },
     "kernelRelease": {
      "description": "Guest OS Kernel Release",
      "type": "string"
     },
     "kernelVersion": {
      "description": "Kernel version of the Guest OS",
      "type": "string"
     },
     "machine": {
      "description": "Machine type of the Guest OS",
      "type": "string"
     },
     "name": {
      "description": "Name of the Guest OS",
      "type": "string"
     },
     "prettyName": {
      "description": "Guest OS Pretty Name",
      "type": "string"
     },
     "version": {
      "description": "Guest OS Version",
      "type": "string"
     },
     "versionId": {
      "description": "Version ID of the Guest OS",
      "type": "string"
     }
    }
   },
   "v1.VirtualMachineInstanceGuestOSUser": {
    "description": "VirtualMachineGuestOSUser is the single user of the guest os",
    "type": "object",
    "required": [
     "userName"
    ],
    "properties": {
     "domain": {
      "type": "string"
     },
     "loginTime": {
      "type": "number",
      "format": "double"
     },
     "userName": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.VirtualMachineInstanceGuestOSUserList": {
    "description": "VirtualMachineInstanceGuestOSUserList comprises the list of all active users on guest machine",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceGuestOSUser"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1.VirtualMachineInstanceList": {
    "description": "VirtualMachineInstanceList is a list of VirtualMachines",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstance"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1.VirtualMachineInstanceMigration": {
    "description": "VirtualMachineInstanceMigration represents the object tracking a VMI's migration to another host in the cluster",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineInstanceMigrationSpec"
     },
     "status": {
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineInstanceMigrationStatus"
     }
    }
   },
   "v1.VirtualMachineInstanceMigrationCondition": {
    "type": "object",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "lastTransitionTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string",
      "default": ""
     },
     "type": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.VirtualMachineInstanceMigrationList": {
    "description": "VirtualMachineInstanceMigrationList is a list of VirtualMachineMigrations",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceMigration"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1.VirtualMachineInstanceMigrationPhaseTransitionTimestamp": {
    "description": "VirtualMachineInstanceMigrationPhaseTransitionTimestamp gives a timestamp in relation to when a phase is set on a vmi",
    "type": "object",
    "properties": {
     "phase": {
      "description": "Phase is the status of the VirtualMachineInstanceMigrationPhase in kubernetes world. It is not the VirtualMachineInstanceMigrationPhase status, but partially correlates to it.",
      "type": "string"
     },
     "phaseTransitionTimestamp": {
      "description": "PhaseTransitionTimestamp is the timestamp of when the phase change occurred",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     }
    }
   },
   "v1.VirtualMachineInstanceMigrationSpec": {
    "type": "object",
    "properties": {
     "vmiName": {
      "description": "The name of the VMI to perform the migration on. VMI must exist in the migration objects namespace",
      "type": "string"
     }
    }
   },
   "v1.VirtualMachineInstanceMigrationState": {
    "type": "object",
    "properties": {
     "abortRequested": {
      "description": "Indicates that the migration has been requested to abort",
      "type": "boolean"
     },
     "abortStatus": {
      "description": "Indicates the final status of the live migration abortion",
      "type": "string"
     },
     "completed": {
      "description": "Indicates the migration completed",
      "type": "boolean"
     },
     "endTimestamp": {
      "description": "The time the migration action ended",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "failed": {
      "description": "Indicates that the migration failed",
      "type": "boolean"
     },
     "failureReason": {
      "description": "Contains the reason why the migration failed",
      "type": "string"
     },
     "migrationConfiguration": {
      "description": "Migration configurations to apply",
      "$ref": "#/definitions/v1.MigrationConfiguration"
     },
     "migrationPolicyName": {
      "description": "Name of the migration policy. If string is empty, no policy is matched",
      "type": "string"
     },
     "migrationUid": {
      "description": "The VirtualMachineInstanceMigration object associated with this migration",
      "type": "string"
     },
     "mode": {
      "description": "Lets us know if the vmi is currently running pre or post copy migration",
      "type": "string"
     },
     "sourceNode": {
      "description": "The source node that the VMI originated on",
      "type": "string"
     },
     "sourcePod": {
      "type": "string"
     },
     "startTimestamp": {
      "description": "The time the migration action began",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "targetAttachmentPodUID": {
      "description": "The UID of the target attachment pod for hotplug volumes",
      "type": "string"
     },
     "targetCPUSet": {
      "description": "If the VMI requires dedicated CPUs, this field will hold the dedicated CPU set on the target node",
      "type": "array",
      "items": {
       "type": "integer",
       "format": "int32",
       "default": 0
      },
      "x-kubernetes-list-type": "atomic"
     },
     "targetDirectMigrationNodePorts": {
      "description": "The list of ports opened for live migration on the destination node",
      "type": "object",
      "additionalProperties": {
       "type": "integer",
       "format": "int32",
       "default": 0
      }
     },
     "targetNode": {
      "description": "The target node that the VMI is moving to",
      "type": "string"
     },
     "targetNodeAddress": {
      "description": "The address of the target node to use for the migration",
      "type": "string"
     },
     "targetNodeDomainDetected": {
      "description": "The Target Node has seen the Domain Start Event",
      "type": "boolean"
     },
     "targetNodeDomainReadyTimestamp": {
      "description": "The timestamp at which the target node detects the domain is active",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "targetNodeTopology": {
      "description": "If the VMI requires dedicated CPUs, this field will hold the numa topology on the target node",
      "type": "string"
     },
     "targetPod": {
      "description": "The target pod that the VMI is moving to",
      "type": "string"
     }
    }
   },
   "v1.VirtualMachineInstanceMigrationStatus": {
    "description": "VirtualMachineInstanceMigration reprents information pertaining to a VMI's migration.",
    "type": "object",
    "nullable": true,
    "properties": {
     "conditions": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceMigrationCondition"
      }
     },
     "migrationState": {
      "description": "Represents the status of a live migration",
      "$ref": "#/definitions/v1.VirtualMachineInstanceMigrationState"
     },
     "phase": {
      "type": "string"
     },
     "phaseTransitionTimestamps": {
      "description": "PhaseTransitionTimestamp is the timestamp of when the last phase change occurred",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceMigrationPhaseTransitionTimestamp"
      },
      "x-kubernetes-list-type": "atomic"
     }
    }
   },
   "v1.VirtualMachineInstanceNetworkInterface": {
    "type": "object",
    "properties": {
     "infoSource": {
      "description": "Specifies the origin of the interface data collected. values: domain, guest-agent, multus-status.",
      "type": "string"
     },
     "interfaceName": {
      "description": "The interface name inside the Virtual Machine",
      "type": "string"
     },
     "ipAddress": {
      "description": "IP address of a Virtual Machine interface. It is always the first item of IPs",
      "type": "string"
     },
     "ipAddresses": {
      "description": "List of all IP addresses of a Virtual Machine interface",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "mac": {
      "description": "Hardware address of a Virtual Machine interface",
      "type": "string"
     },
     "name": {
      "description": "Name of the interface, corresponds to name of the network assigned to the interface",
      "type": "string"
     },
     "queueCount": {
      "description": "Specifies how many queues are allocated by MultiQueue",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.VirtualMachineInstancePhaseTransitionTimestamp": {
    "description": "VirtualMachineInstancePhaseTransitionTimestamp gives a timestamp in relation to when a phase is set on a vmi",
    "type": "object",
    "properties": {
     "phase": {
      "description": "Phase is the status of the VirtualMachineInstance in kubernetes world. It is not the VirtualMachineInstance status, but partially correlates to it.",
      "type": "string"
     },
     "phaseTransitionTimestamp": {
      "description": "PhaseTransitionTimestamp is the timestamp of when the phase change occurred",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     }
    }
   },
   "v1.VirtualMachineInstancePreset": {
    "description": "Deprecated for removal in v2, please use VirtualMachineInstanceType and VirtualMachinePreference instead.\n\nVirtualMachineInstancePreset defines a VMI spec.domain to be applied to all VMIs that match the provided label selector More info: https://kubevirt.io/user-guide/virtual_machines/presets/#overrides",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "VirtualMachineInstance Spec contains the VirtualMachineInstance specification.",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineInstancePresetSpec"
     }
    }
   },
   "v1.VirtualMachineInstancePresetList": {
    "description": "VirtualMachineInstancePresetList is a list of VirtualMachinePresets",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstancePreset"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1.VirtualMachineInstancePresetSpec": {
    "type": "object",
    "required": [
     "selector"
    ],
    "properties": {
     "domain": {
      "description": "Domain is the same object type as contained in VirtualMachineInstanceSpec",
      "$ref": "#/definitions/v1.DomainSpec"
     },
     "selector": {
      "description": "Selector is a label query over a set of VMIs. Required.",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
     }
    }
   },
   "v1.VirtualMachineInstanceProfile": {
    "type": "object",
    "properties": {
     "customProfile": {
      "description": "CustomProfile allows to request arbitrary profile for virt-launcher",
      "$ref": "#/definitions/v1.CustomProfile"
     }
    }
   },
   "v1.VirtualMachineInstanceReplicaSet": {
    "description": "VirtualMachineInstance is *the* VirtualMachineInstance Definition. It represents a virtual machine in the runtime environment of kubernetes.",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "VirtualMachineInstance Spec contains the VirtualMachineInstance specification.",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSetSpec"
     },
     "status": {
      "description": "Status is the high level overview of how the VirtualMachineInstance is doing. It contains information available to controllers and users.",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSetStatus"
     }
    }
   },
   "v1.VirtualMachineInstanceReplicaSetCondition": {
    "type": "object",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "lastTransitionTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string",
      "default": ""
     },
     "type": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.VirtualMachineInstanceReplicaSetList": {
    "description": "VMIList is a list of VMIs",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSet"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1.VirtualMachineInstanceReplicaSetSpec": {
    "type": "object",
    "required": [
     "selector",
     "template"
    ],
    "properties": {
     "paused": {
      "description": "Indicates that the replica set is paused.",
      "type": "boolean"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "template": {
      "description": "Template describes the pods that will be created.",
      "$ref": "#/definitions/v1.VirtualMachineInstanceTemplateSpec"
     }
    }
   },
   "v1.VirtualMachineInstanceReplicaSetStatus": {
    "type": "object",
    "nullable": true,
    "properties": {
     "conditions": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceReplicaSetCondition"
      }
     },
     "labelSelector": {
      "description": "Canonical form of the label selector for HPA which consumes it through the scale subresource.",
      "type": "string"
     },
     "readyReplicas": {
      "description": "The number of ready replicas for this replica set.",
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "description": "Total number of non-terminated pods targeted by this deployment (their labels match the selector).",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.VirtualMachineInstanceSpec": {
    "description": "VirtualMachineInstanceSpec is a description of a VirtualMachineInstance.",
    "type": "object",
    "required": [
     "domain"
    ],
    "properties": {
     "accessCredentials": {
      "description": "Specifies a set of public keys to inject into the vm guest",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.AccessCredential"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "affinity": {
      "description": "If affinity is specifies, obey all the affinity rules",
      "$ref": "#/definitions/k8s.io.api.core.v1.Affinity"
     },
     "architecture": {
      "description": "Specifies the architecture of the vm guest you are attempting to run. Defaults to the compiled architecture of the KubeVirt components",
      "type": "string"
     },
     "dnsConfig": {
      "description": "Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.",
      "$ref": "#/definitions/k8s.io.api.core.v1.PodDNSConfig"
     },
     "dnsPolicy": {
      "description": "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.\n\nPossible enum values:\n - `\"ClusterFirst\"` indicates that the pod should use cluster DNS first unless hostNetwork is true, if it is available, then fall back on the default (as determined by kubelet) DNS settings.\n - `\"ClusterFirstWithHostNet\"` indicates that the pod should use cluster DNS first, if it is available, then fall back on the default (as determined by kubelet) DNS settings.\n - `\"Default\"` indicates that the pod should use the default (as determined by kubelet) DNS settings.\n - `\"None\"` indicates that the pod should use empty DNS settings. DNS parameters such as nameservers and search paths should be defined via DNSConfig.",
      "type": "string",
      "enum": [
       "ClusterFirst",
       "ClusterFirstWithHostNet",
       "Default",
       "None"
      ]
     },
     "domain": {
      "description": "Specification of the desired behavior of the VirtualMachineInstance on the host.",
      "default": {},
      "$ref": "#/definitions/v1.DomainSpec"
     },
     "evictionStrategy": {
      "description": "EvictionStrategy describes the strategy to follow when a node drain occurs. The possible options are: - \"None\": No action will be taken, according to the specified 'RunStrategy' the VirtualMachine will be restarted or shutdown. - \"LiveMigrate\": the VirtualMachineInstance will be migrated instead of being shutdown. - \"LiveMigrateIfPossible\": the same as \"LiveMigrate\" but only if the VirtualMachine is Live-Migratable, otherwise it will behave as \"None\". - \"External\": the VirtualMachineInstance will be protected by a PDB and `vmi.Status.EvacuationNodeName` will be set on eviction. This is mainly useful for cluster-api-provider-kubevirt (capk) which needs a way for VMI's to be blocked from eviction, yet signal capk that eviction has been called on the VMI so the capk controller can handle tearing the VMI down. Details can be found in the commit description https://github.com/kubevirt/kubevirt/commit/c1d77face705c8b126696bac9a3ee3825f27f1fa.",
      "type": "string"
     },
     "hostname": {
      "description": "Specifies the hostname of the vmi If not specified, the hostname will be set to the name of the vmi, if dhcp or cloud-init is configured properly.",
      "type": "string"
     },
     "livenessProbe": {
      "description": "Periodic probe of VirtualMachineInstance liveness. VirtualmachineInstances will be stopped if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "$ref": "#/definitions/v1.Probe"
     },
     "networks": {
      "description": "List of networks that can be attached to a vm's virtual interface.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.Network"
      }
     },
     "nodeSelector": {
      "description": "NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "priorityClassName": {
      "description": "If specified, indicates the pod's priority. If not specified, the pod priority will be default or zero if there is no default.",
      "type": "string"
     },
     "readinessProbe": {
      "description": "Periodic probe of VirtualMachineInstance service readiness. VirtualmachineInstances will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
      "$ref": "#/definitions/v1.Probe"
     },
     "schedulerName": {
      "description": "If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.",
      "type": "string"
     },
     "startStrategy": {
      "description": "StartStrategy can be set to \"Paused\" if Virtual Machine should be started in paused state.",
      "type": "string"
     },
     "subdomain": {
      "description": "If specified, the fully qualified vmi hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\". If not specified, the vmi will not have a domainname at all. The DNS entry will resolve to the vmi, no matter if the vmi itself can pick up a hostname.",
      "type": "string"
     },
     "terminationGracePeriodSeconds": {
      "description": "Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.",
      "type": "integer",
      "format": "int64"
     },
     "tolerations": {
      "description": "If toleration is specified, obey all the toleration rules.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.Toleration"
      }
     },
     "topologySpreadConstraints": {
      "description": "TopologySpreadConstraints describes how a group of VMIs will be spread across a given topology domains. K8s scheduler will schedule VMI pods in a way which abides by the constraints.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/k8s.io.api.core.v1.TopologySpreadConstraint"
      },
      "x-kubernetes-list-map-keys": [
       "topologyKey",
       "whenUnsatisfiable"
      ],
      "x-kubernetes-list-type": "map",
      "x-kubernetes-patch-merge-key": "topologyKey",
      "x-kubernetes-patch-strategy": "merge"
     },
     "volumes": {
      "description": "List of volumes that can be mounted by disks belonging to the vmi.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.Volume"
      }
     }
    }
   },
   "v1.VirtualMachineInstanceStatus": {
    "description": "VirtualMachineInstanceStatus represents information about the status of a VirtualMachineInstance. Status may trail the actual state of a system.",
    "type": "object",
    "nullable": true,
    "properties": {
     "VSOCKCID": {
      "description": "VSOCKCID is used to track the allocated VSOCK CID in the VM.",
      "type": "integer",
      "format": "int64"
     },
     "activePods": {
      "description": "ActivePods is a mapping of pod UID to node name. It is possible for multiple pods to be running for a single VMI during migration.",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "conditions": {
      "description": "Conditions are specific points in VirtualMachineInstance's pod runtime.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceCondition"
      }
     },
     "currentCPUTopology": {
      "description": "CurrentCPUTopology specifies the current CPU topology used by the VM workload. Current topology may differ from the desired topology in the spec while CPU hotplug takes place.",
      "$ref": "#/definitions/v1.CPUTopology"
     },
     "evacuationNodeName": {
      "description": "EvacuationNodeName is used to track the eviction process of a VMI. It stores the name of the node that we want to evacuate. It is meant to be used by KubeVirt core components only and can't be set or modified by users.",
      "type": "string"
     },
     "fsFreezeStatus": {
      "description": "FSFreezeStatus is the state of the fs of the guest it can be either frozen or thawed",
      "type": "string"
     },
     "guestOSInfo": {
      "description": "Guest OS Information",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineInstanceGuestOSInfo"
     },
     "interfaces": {
      "description": "Interfaces represent the details of available network interfaces.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstanceNetworkInterface"
      }
     },
     "kernelBootStatus": {
      "description": "KernelBootStatus contains info about the kernelBootContainer",
      "$ref": "#/definitions/v1.KernelBootStatus"
     },
     "launcherContainerImageVersion": {
      "description": "LauncherContainerImageVersion indicates what container image is currently active for the vmi.",
      "type": "string"
     },
     "machine": {
      "description": "Machine shows the final resulting qemu machine type. This can be different than the machine type selected in the spec, due to qemus machine type alias mechanism.",
      "$ref": "#/definitions/v1.Machine"
     },
     "memory": {
      "description": "Memory shows various informations about the VirtualMachine memory.",
      "$ref": "#/definitions/v1.MemoryStatus"
     },
     "migrationMethod": {
      "description": "Represents the method using which the vmi can be migrated: live migration or block migration",
      "type": "string"
     },
     "migrationState": {
      "description": "Represents the status of a live migration",
      "$ref": "#/definitions/v1.VirtualMachineInstanceMigrationState"
     },
     "migrationTransport": {
      "description": "This represents the migration transport",
      "type": "string"
     },
     "nodeName": {
      "description": "NodeName is the name where the VirtualMachineInstance is currently running.",
      "type": "string"
     },
     "phase": {
      "description": "Phase is the status of the VirtualMachineInstance in kubernetes world. It is not the VirtualMachineInstance status, but partially correlates to it.",
      "type": "string"
     },
     "phaseTransitionTimestamps": {
      "description": "PhaseTransitionTimestamp is the timestamp of when the last phase change occurred",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineInstancePhaseTransitionTimestamp"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "qosClass": {
      "description": "The Quality of Service (QOS) classification assigned to the virtual machine instance based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md\n\nPossible enum values:\n - `\"BestEffort\"` is the BestEffort qos class.\n - `\"Burstable\"` is the Burstable qos class.\n - `\"Guaranteed\"` is the Guaranteed qos class.",
      "type": "string",
      "enum": [
       "BestEffort",
       "Burstable",
       "Guaranteed"
      ]
     },
     "reason": {
      "description": "A brief CamelCase message indicating details about why the VMI is in this state. e.g. 'NodeUnresponsive'",
      "type": "string"
     },
     "runtimeUser": {
      "description": "RuntimeUser is used to determine what user will be used in launcher",
      "type": "integer",
      "format": "int64",
      "default": 0
     },
     "selinuxContext": {
      "description": "SELinuxContext is the actual SELinux context of the virt-launcher pod",
      "type": "string"
     },
     "topologyHints": {
      "$ref": "#/definitions/v1.TopologyHints"
     },
     "virtualMachineRevisionName": {
      "description": "VirtualMachineRevisionName is used to get the vm revision of the vmi when doing an online vm snapshot",
      "type": "string"
     },
     "volumeStatus": {
      "description": "VolumeStatus contains the statuses of all the volumes",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VolumeStatus"
      },
      "x-kubernetes-list-type": "atomic"
     }
    }
   },
   "v1.VirtualMachineInstanceTemplateSpec": {
    "type": "object",
    "properties": {
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "VirtualMachineInstance Spec contains the VirtualMachineInstance specification.",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineInstanceSpec"
     }
    }
   },
   "v1.VirtualMachineList": {
    "description": "VirtualMachineList is a list of virtualmachines",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachine"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1.VirtualMachineMemoryDumpRequest": {
    "description": "VirtualMachineMemoryDumpRequest represent the memory dump request phase and info",
    "type": "object",
    "required": [
     "claimName",
     "phase"
    ],
    "properties": {
     "claimName": {
      "description": "ClaimName is the name of the pvc that will contain the memory dump",
      "type": "string",
      "default": ""
     },
     "endTimestamp": {
      "description": "EndTimestamp represents the time the memory dump was completed",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "fileName": {
      "description": "FileName represents the name of the output file",
      "type": "string"
     },
     "message": {
      "description": "Message is a detailed message about failure of the memory dump",
      "type": "string"
     },
     "phase": {
      "description": "Phase represents the memory dump phase",
      "type": "string",
      "default": ""
     },
     "remove": {
      "description": "Remove represents request of dissociating the memory dump pvc",
      "type": "boolean"
     },
     "startTimestamp": {
      "description": "StartTimestamp represents the time the memory dump started",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     }
    }
   },
   "v1.VirtualMachineOptions": {
    "description": "VirtualMachineOptions holds the cluster level information regarding the virtual machine.",
    "type": "object",
    "properties": {
     "disableFreePageReporting": {
      "description": "DisableFreePageReporting disable the free page reporting of memory balloon device https://libvirt.org/formatdomain.html#memory-balloon-device. This will have effect only if AutoattachMemBalloon is not false and the vmi is not requesting any high performance feature (dedicatedCPU/realtime/hugePages), in which free page reporting is always disabled.",
      "$ref": "#/definitions/v1.DisableFreePageReporting"
     },
     "disableSerialConsoleLog": {
      "description": "DisableSerialConsoleLog disables logging the auto-attached default serial console. If not set, serial console logs will be written to a file and then streamed from a container named `guest-console-log`. The value can be individually overridden for each VM, not relevant if AutoattachSerialConsole is disabled.",
      "$ref": "#/definitions/v1.DisableSerialConsoleLog"
     }
    }
   },
   "v1.VirtualMachineSpec": {
    "description": "VirtualMachineSpec describes how the proper VirtualMachine should look like",
    "type": "object",
    "required": [
     "template"
    ],
    "properties": {
     "dataVolumeTemplates": {
      "description": "dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference. DataVolumes in this list are dynamically created for the VirtualMachine and are tied to the VirtualMachine's life-cycle.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.DataVolumeTemplateSpec"
      }
     },
     "instancetype": {
      "description": "InstancetypeMatcher references a instancetype that is used to fill fields in Template",
      "$ref": "#/definitions/v1.InstancetypeMatcher"
     },
     "preference": {
      "description": "PreferenceMatcher references a set of preference that is used to fill fields in Template",
      "$ref": "#/definitions/v1.PreferenceMatcher"
     },
     "runStrategy": {
      "description": "Running state indicates the requested running state of the VirtualMachineInstance mutually exclusive with Running",
      "type": "string"
     },
     "running": {
      "description": "Running controls whether the associatied VirtualMachineInstance is created or not Mutually exclusive with RunStrategy",
      "type": "boolean"
     },
     "template": {
      "description": "Template is the direct specification of VirtualMachineInstance",
      "$ref": "#/definitions/v1.VirtualMachineInstanceTemplateSpec"
     }
    }
   },
   "v1.VirtualMachineStartFailure": {
    "description": "VirtualMachineStartFailure tracks VMIs which failed to transition successfully to running using the VM status",
    "type": "object",
    "properties": {
     "consecutiveFailCount": {
      "type": "integer",
      "format": "int32"
     },
     "lastFailedVMIUID": {
      "type": "string"
     },
     "retryAfterTimestamp": {
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     }
    }
   },
   "v1.VirtualMachineStateChangeRequest": {
    "type": "object",
    "required": [
     "action"
    ],
    "properties": {
     "action": {
      "description": "Indicates the type of action that is requested. e.g. Start or Stop",
      "type": "string",
      "default": ""
     },
     "data": {
      "description": "Provides additional data in order to perform the Action",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "uid": {
      "description": "Indicates the UUID of an existing Virtual Machine Instance that this change request applies to -- if applicable",
      "type": "string"
     }
    }
   },
   "v1.VirtualMachineStatus": {
    "description": "VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing",
    "type": "object",
    "nullable": true,
    "properties": {
     "conditions": {
      "description": "Hold the state information of the VirtualMachine and its VirtualMachineInstance",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineCondition"
      }
     },
     "created": {
      "description": "Created indicates if the virtual machine is created in the cluster",
      "type": "boolean"
     },
     "desiredGeneration": {
      "description": "DesiredGeneration is the generation which is desired for the VMI. This will be used in comparisons with ObservedGeneration to understand when the VMI is out of sync. This will be changed at the same time as ObservedGeneration to remove errors which could occur if Generation is updated through an Update() before ObservedGeneration in Status.",
      "type": "integer",
      "format": "int64"
     },
     "memoryDumpRequest": {
      "description": "MemoryDumpRequest tracks memory dump request phase and info of getting a memory dump to the given pvc",
      "$ref": "#/definitions/v1.VirtualMachineMemoryDumpRequest"
     },
     "observedGeneration": {
      "description": "ObservedGeneration is the generation observed by the vmi when started.",
      "type": "integer",
      "format": "int64"
     },
     "printableStatus": {
      "description": "PrintableStatus is a human readable, high-level representation of the status of the virtual machine",
      "type": "string"
     },
     "ready": {
      "description": "Ready indicates if the virtual machine is running and ready",
      "type": "boolean"
     },
     "restoreInProgress": {
      "description": "RestoreInProgress is the name of the VirtualMachineRestore currently executing",
      "type": "string"
     },
     "snapshotInProgress": {
      "description": "SnapshotInProgress is the name of the VirtualMachineSnapshot currently executing",
      "type": "string"
     },
     "startFailure": {
      "description": "StartFailure tracks consecutive VMI startup failures for the purposes of crash loop backoffs",
      "$ref": "#/definitions/v1.VirtualMachineStartFailure"
     },
     "stateChangeRequests": {
      "description": "StateChangeRequests indicates a list of actions that should be taken on a VMI e.g. stop a specific VMI then start a new one.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineStateChangeRequest"
      }
     },
     "volumeRequests": {
      "description": "VolumeRequests indicates a list of volumes add or remove from the VMI template and hotplug on an active running VMI.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VirtualMachineVolumeRequest"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "volumeSnapshotStatuses": {
      "description": "VolumeSnapshotStatuses indicates a list of statuses whether snapshotting is supported by each volume.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.VolumeSnapshotStatus"
      }
     }
    }
   },
   "v1.VirtualMachineVolumeRequest": {
    "type": "object",
    "properties": {
     "addVolumeOptions": {
      "description": "AddVolumeOptions when set indicates a volume should be added. The details within this field specify how to add the volume",
      "$ref": "#/definitions/v1.AddVolumeOptions"
     },
     "removeVolumeOptions": {
      "description": "RemoveVolumeOptions when set indicates a volume should be removed. The details within this field specify how to add the volume",
      "$ref": "#/definitions/v1.RemoveVolumeOptions"
     }
    }
   },
   "v1.Volume": {
    "description": "Volume represents a named volume in a vmi.",
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "cloudInitConfigDrive": {
      "description": "CloudInitConfigDrive represents a cloud-init Config Drive user-data source. The Config Drive data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest. More info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html",
      "$ref": "#/definitions/v1.CloudInitConfigDriveSource"
     },
     "cloudInitNoCloud": {
      "description": "CloudInitNoCloud represents a cloud-init NoCloud user-data source. The NoCloud data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest. More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html",
      "$ref": "#/definitions/v1.CloudInitNoCloudSource"
     },
     "configMap": {
      "description": "ConfigMapSource represents a reference to a ConfigMap in the same namespace. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/",
      "$ref": "#/definitions/v1.ConfigMapVolumeSource"
     },
     "containerDisk": {
      "description": "ContainerDisk references a docker image, embedding a qcow or raw disk. More info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html",
      "$ref": "#/definitions/v1.ContainerDiskSource"
     },
     "dataVolume": {
      "description": "DataVolume represents the dynamic creation a PVC for this volume as well as the process of populating that PVC with a disk image.",
      "$ref": "#/definitions/v1.DataVolumeSource"
     },
     "downwardAPI": {
      "description": "DownwardAPI represents downward API about the pod that should populate this volume",
      "$ref": "#/definitions/v1.DownwardAPIVolumeSource"
     },
     "downwardMetrics": {
      "description": "DownwardMetrics adds a very small disk to VMIs which contains a limited view of host and guest metrics. The disk content is compatible with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics.",
      "$ref": "#/definitions/v1.DownwardMetricsVolumeSource"
     },
     "emptyDisk": {
      "description": "EmptyDisk represents a temporary disk which shares the vmis lifecycle. More info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html",
      "$ref": "#/definitions/v1.EmptyDiskSource"
     },
     "ephemeral": {
      "description": "Ephemeral is a special volume source that \"wraps\" specified source and provides copy-on-write image on top of it.",
      "$ref": "#/definitions/v1.EphemeralVolumeSource"
     },
     "hostDisk": {
      "description": "HostDisk represents a disk created on the cluster level",
      "$ref": "#/definitions/v1.HostDisk"
     },
     "memoryDump": {
      "description": "MemoryDump is attached to the virt launcher and is populated with a memory dump of the vmi",
      "$ref": "#/definitions/v1.MemoryDumpVolumeSource"
     },
     "name": {
      "description": "Volume's name. Must be a DNS_LABEL and unique within the vmi. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
      "type": "string",
      "default": ""
     },
     "persistentVolumeClaim": {
      "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. Directly attached to the vmi via qemu. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
      "$ref": "#/definitions/v1.PersistentVolumeClaimVolumeSource"
     },
     "secret": {
      "description": "SecretVolumeSource represents a reference to a secret data in the same namespace. More info: https://kubernetes.io/docs/concepts/configuration/secret/",
      "$ref": "#/definitions/v1.SecretVolumeSource"
     },
     "serviceAccount": {
      "description": "ServiceAccountVolumeSource represents a reference to a service account. There can only be one volume of this type! More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
      "$ref": "#/definitions/v1.ServiceAccountVolumeSource"
     },
     "sysprep": {
      "description": "Represents a Sysprep volume source.",
      "$ref": "#/definitions/v1.SysprepSource"
     }
    }
   },
   "v1.VolumeSnapshotStatus": {
    "type": "object",
    "required": [
     "name",
     "enabled"
    ],
    "properties": {
     "enabled": {
      "description": "True if the volume supports snapshotting",
      "type": "boolean",
      "default": false
     },
     "name": {
      "description": "Volume name",
      "type": "string",
      "default": ""
     },
     "reason": {
      "description": "Empty if snapshotting is enabled, contains reason otherwise",
      "type": "string"
     }
    }
   },
   "v1.VolumeStatus": {
    "description": "VolumeStatus represents information about the status of volumes attached to the VirtualMachineInstance.",
    "type": "object",
    "required": [
     "name",
     "target"
    ],
    "properties": {
     "containerDiskVolume": {
      "description": "ContainerDiskVolume shows info about the containerdisk, if the volume is a containerdisk",
      "$ref": "#/definitions/v1.ContainerDiskInfo"
     },
     "hotplugVolume": {
      "description": "If the volume is hotplug, this will contain the hotplug status.",
      "$ref": "#/definitions/v1.HotplugVolumeStatus"
     },
     "memoryDumpVolume": {
      "description": "If the volume is memorydump volume, this will contain the memorydump info.",
      "$ref": "#/definitions/v1.DomainMemoryDumpInfo"
     },
     "message": {
      "description": "Message is a detailed message about the current hotplug volume phase",
      "type": "string"
     },
     "name": {
      "description": "Name is the name of the volume",
      "type": "string",
      "default": ""
     },
     "persistentVolumeClaimInfo": {
      "description": "PersistentVolumeClaimInfo is information about the PVC that handler requires during start flow",
      "$ref": "#/definitions/v1.PersistentVolumeClaimInfo"
     },
     "phase": {
      "description": "Phase is the phase",
      "type": "string"
     },
     "reason": {
      "description": "Reason is a brief description of why we are in the current hotplug volume phase",
      "type": "string"
     },
     "size": {
      "description": "Represents the size of the volume",
      "type": "integer",
      "format": "int64"
     },
     "target": {
      "description": "Target is the target name used when adding the volume to the VM, eg: vda",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1.Watchdog": {
    "description": "Named watchdog device.",
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "i6300esb": {
      "description": "i6300esb watchdog device.",
      "$ref": "#/definitions/v1.I6300ESBWatchdog"
     },
     "name": {
      "description": "Name of the watchdog.",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1alpha1.Condition": {
    "description": "Condition defines conditions",
    "type": "object",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "lastTransitionTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string",
      "default": ""
     },
     "type": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1alpha1.Error": {
    "description": "Error is the last error encountered during the snapshot/restore",
    "type": "object",
    "properties": {
     "message": {
      "type": "string"
     },
     "time": {
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     }
    }
   },
   "v1alpha1.MigrationPolicy": {
    "description": "MigrationPolicy holds migration policy (i.e. configurations) to apply to a VM or group of VMs",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.MigrationPolicySpec"
     },
     "status": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.MigrationPolicyStatus"
     }
    }
   },
   "v1alpha1.MigrationPolicyList": {
    "description": "MigrationPolicyList is a list of MigrationPolicy",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.MigrationPolicy"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1alpha1.MigrationPolicySpec": {
    "type": "object",
    "required": [
     "selectors"
    ],
    "properties": {
     "allowAutoConverge": {
      "type": "boolean"
     },
     "allowPostCopy": {
      "type": "boolean"
     },
     "bandwidthPerMigration": {
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     },
     "completionTimeoutPerGiB": {
      "type": "integer",
      "format": "int64"
     },
     "selectors": {
      "$ref": "#/definitions/v1alpha1.Selectors"
     }
    }
   },
   "v1alpha1.MigrationPolicyStatus": {
    "type": "object",
    "nullable": true
   },
   "v1alpha1.PersistentVolumeClaim": {
    "type": "object",
    "properties": {
     "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
      "default": {},
      "$ref": "#/definitions/k8s.io.api.core.v1.PersistentVolumeClaimSpec"
     }
    }
   },
   "v1alpha1.Selectors": {
    "type": "object",
    "properties": {
     "namespaceSelector": {
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "virtualMachineInstanceSelector": {
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     }
    }
   },
   "v1alpha1.SnapshotVolumesLists": {
    "description": "SnapshotVolumesLists includes the list of volumes which were included in the snapshot and volumes which were excluded from the snapshot",
    "type": "object",
    "properties": {
     "excludedVolumes": {
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "set"
     },
     "includedVolumes": {
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "set"
     }
    }
   },
   "v1alpha1.SourceSpec": {
    "description": "SourceSpec contains the appropriate spec for the resource being snapshotted",
    "type": "object",
    "properties": {
     "virtualMachine": {
      "$ref": "#/definitions/v1alpha1.VirtualMachine"
     }
    }
   },
   "v1alpha1.VirtualMachine": {
    "type": "object",
    "properties": {
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "VirtualMachineSpec contains the VirtualMachine specification.",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineSpec"
     },
     "status": {
      "description": "Status holds the current state of the controller and brief information about its associated VirtualMachineInstance",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineStatus"
     }
    }
   },
   "v1alpha1.VirtualMachineClone": {
    "description": "VirtualMachineClone is a CRD that clones one VM into another.",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.VirtualMachineCloneSpec"
     },
     "status": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.VirtualMachineCloneStatus"
     }
    }
   },
   "v1alpha1.VirtualMachineCloneList": {
    "description": "VirtualMachineCloneList is a list of MigrationPolicy",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VirtualMachineClone"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1alpha1.VirtualMachineCloneSpec": {
    "type": "object",
    "required": [
     "source"
    ],
    "properties": {
     "annotationFilters": {
      "description": "Example use: \"!some/key*\". For a detailed description, please refer to https://kubevirt.io/user-guide/operations/clone_api/#label-annotation-filters.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "labelFilters": {
      "description": "Example use: \"!some/key*\". For a detailed description, please refer to https://kubevirt.io/user-guide/operations/clone_api/#label-annotation-filters.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "newMacAddresses": {
      "description": "NewMacAddresses manually sets that target interfaces' mac addresses. The key is the interface name and the value is the new mac address. If this field is not specified, a new MAC address will be generated automatically, as for any interface that is not included in this map.",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "newSMBiosSerial": {
      "description": "NewSMBiosSerial manually sets that target's SMbios serial. If this field is not specified, a new serial will be generated automatically.",
      "type": "string"
     },
     "source": {
      "description": "Source is the object that would be cloned. Currently supported source types are: VirtualMachine of kubevirt.io API group, VirtualMachineSnapshot of snapshot.kubevirt.io API group",
      "$ref": "#/definitions/k8s.io.api.core.v1.TypedLocalObjectReference"
     },
     "target": {
      "description": "Target is the outcome of the cloning process. Currently supported source types are: - VirtualMachine of kubevirt.io API group - Empty (nil). If the target is not provided, the target type would default to VirtualMachine and a random name would be generated for the target. The target's name can be viewed by inspecting status \"TargetName\" field below.",
      "$ref": "#/definitions/k8s.io.api.core.v1.TypedLocalObjectReference"
     },
     "template": {
      "description": "For a detailed description, please refer to https://kubevirt.io/user-guide/operations/clone_api/#label-annotation-filters.",
      "default": {},
      "$ref": "#/definitions/v1alpha1.VirtualMachineCloneTemplateFilters"
     }
    }
   },
   "v1alpha1.VirtualMachineCloneStatus": {
    "type": "object",
    "nullable": true,
    "properties": {
     "conditions": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.Condition"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "creationTime": {
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "phase": {
      "type": "string"
     },
     "restoreName": {
      "type": "string"
     },
     "snapshotName": {
      "type": "string"
     },
     "targetName": {
      "type": "string"
     }
    }
   },
   "v1alpha1.VirtualMachineCloneTemplateFilters": {
    "type": "object",
    "properties": {
     "annotationFilters": {
      "description": "Example use: \"!some/key*\". For a detailed description, please refer to https://kubevirt.io/user-guide/operations/clone_api/#label-annotation-filters.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "labelFilters": {
      "description": "Example use: \"!some/key*\". For a detailed description, please refer to https://kubevirt.io/user-guide/operations/clone_api/#label-annotation-filters.",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     }
    }
   },
   "v1alpha1.VirtualMachineExport": {
    "description": "VirtualMachineExport defines the operation of exporting a VM source",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.VirtualMachineExportSpec"
     },
     "status": {
      "$ref": "#/definitions/v1alpha1.VirtualMachineExportStatus"
     }
    }
   },
   "v1alpha1.VirtualMachineExportLink": {
    "description": "VirtualMachineExportLink contains a list of volumes available for export, as well as the URLs to obtain these volumes",
    "type": "object",
    "required": [
     "cert"
    ],
    "properties": {
     "cert": {
      "description": "Cert is the public CA certificate base64 encoded",
      "type": "string",
      "default": ""
     },
     "manifests": {
      "description": "Manifests is a list of available manifests for the export",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VirtualMachineExportManifest"
      },
      "x-kubernetes-list-map-keys": [
       "type"
      ],
      "x-kubernetes-list-type": "map"
     },
     "volumes": {
      "description": "Volumes is a list of available volumes to export",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VirtualMachineExportVolume"
      },
      "x-kubernetes-list-map-keys": [
       "name"
      ],
      "x-kubernetes-list-type": "map"
     }
    }
   },
   "v1alpha1.VirtualMachineExportLinks": {
    "description": "VirtualMachineExportLinks contains the links that point the exported VM resources",
    "type": "object",
    "properties": {
     "external": {
      "$ref": "#/definitions/v1alpha1.VirtualMachineExportLink"
     },
     "internal": {
      "$ref": "#/definitions/v1alpha1.VirtualMachineExportLink"
     }
    }
   },
   "v1alpha1.VirtualMachineExportList": {
    "description": "VirtualMachineExportList is a list of VirtualMachineExport resources",
    "type": "object",
    "required": [
     "metadata",
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VirtualMachineExport"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1alpha1.VirtualMachineExportManifest": {
    "description": "VirtualMachineExportManifest contains the type and URL of the exported manifest",
    "type": "object",
    "required": [
     "type",
     "url"
    ],
    "properties": {
     "type": {
      "description": "Type is the type of manifest returned",
      "type": "string",
      "default": ""
     },
     "url": {
      "description": "Url is the url of the endpoint that returns the manifest",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1alpha1.VirtualMachineExportSpec": {
    "description": "VirtualMachineExportSpec is the spec for a VirtualMachineExport resource",
    "type": "object",
    "required": [
     "source"
    ],
    "properties": {
     "source": {
      "default": {},
      "$ref": "#/definitions/k8s.io.api.core.v1.TypedLocalObjectReference"
     },
     "tokenSecretRef": {
      "description": "TokenSecretRef is the name of the custom-defined secret that contains the token used by the export server pod",
      "type": "string"
     },
     "ttlDuration": {
      "description": "ttlDuration limits the lifetime of an export If this field is set, after this duration has passed from counting from CreationTimestamp, the export is eligible to be automatically deleted. If this field is omitted, a reasonable default is applied.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Duration"
     }
    }
   },
   "v1alpha1.VirtualMachineExportStatus": {
    "description": "VirtualMachineExportStatus is the status for a VirtualMachineExport resource",
    "type": "object",
    "nullable": true,
    "properties": {
     "conditions": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.Condition"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "links": {
      "$ref": "#/definitions/v1alpha1.VirtualMachineExportLinks"
     },
     "phase": {
      "type": "string"
     },
     "serviceName": {
      "description": "ServiceName is the name of the service created associated with the Virtual Machine export. It will be used to create the internal URLs for downloading the images",
      "type": "string"
     },
     "tokenSecretRef": {
      "description": "TokenSecretRef is the name of the secret that contains the token used by the export server pod",
      "type": "string"
     },
     "ttlExpirationTime": {
      "description": "The time at which the VM Export will be completely removed according to specified TTL Formula is CreationTimestamp + TTL",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "virtualMachineName": {
      "description": "VirtualMachineName shows the name of the source virtual machine if the source is either a VirtualMachine or a VirtualMachineSnapshot. This is mainly to easily identify the source VirtualMachine in case of a VirtualMachineSnapshot",
      "type": "string"
     }
    }
   },
   "v1alpha1.VirtualMachineExportVolume": {
    "description": "VirtualMachineExportVolume contains the name and available formats for the exported volume",
    "type": "object",
    "required": [
     "name"
    ],
    "properties": {
     "formats": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VirtualMachineExportVolumeFormat"
      },
      "x-kubernetes-list-map-keys": [
       "format"
      ],
      "x-kubernetes-list-type": "map"
     },
     "name": {
      "description": "Name is the name of the exported volume",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1alpha1.VirtualMachineExportVolumeFormat": {
    "description": "VirtualMachineExportVolumeFormat contains the format type and URL to get the volume in that format",
    "type": "object",
    "required": [
     "format",
     "url"
    ],
    "properties": {
     "format": {
      "description": "Format is the format of the image at the specified URL",
      "type": "string",
      "default": ""
     },
     "url": {
      "description": "Url is the url that contains the volume in the format specified",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1alpha1.VirtualMachinePool": {
    "description": "VirtualMachinePool resource contains a VirtualMachine configuration that can be used to replicate multiple VirtualMachine resources.",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.VirtualMachinePoolSpec"
     },
     "status": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.VirtualMachinePoolStatus"
     }
    }
   },
   "v1alpha1.VirtualMachinePoolCondition": {
    "type": "object",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastProbeTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "lastTransitionTime": {
      "type": [
       "string",
       "null"
      ],
      "default": {}
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string",
      "default": ""
     },
     "type": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1alpha1.VirtualMachinePoolList": {
    "description": "VirtualMachinePoolList is a list of VirtualMachinePool resources.",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VirtualMachinePool"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1alpha1.VirtualMachinePoolSpec": {
    "type": "object",
    "required": [
     "selector",
     "virtualMachineTemplate"
    ],
    "properties": {
     "paused": {
      "description": "Indicates that the pool is paused.",
      "type": "boolean"
     },
     "replicas": {
      "description": "Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.",
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "description": "Label selector for pods. Existing Poolss whose pods are selected by this will be the ones affected by this deployment.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "virtualMachineTemplate": {
      "description": "Template describes the VM that will be created.",
      "$ref": "#/definitions/v1alpha1.VirtualMachineTemplateSpec"
     }
    }
   },
   "v1alpha1.VirtualMachinePoolStatus": {
    "type": "object",
    "nullable": true,
    "properties": {
     "conditions": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VirtualMachinePoolCondition"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "labelSelector": {
      "description": "Canonical form of the label selector for HPA which consumes it through the scale subresource.",
      "type": "string"
     },
     "readyReplicas": {
      "type": "integer",
      "format": "int32"
     },
     "replicas": {
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1alpha1.VirtualMachineRestore": {
    "description": "VirtualMachineRestore defines the operation of restoring a VM",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.VirtualMachineRestoreSpec"
     },
     "status": {
      "$ref": "#/definitions/v1alpha1.VirtualMachineRestoreStatus"
     }
    }
   },
   "v1alpha1.VirtualMachineRestoreList": {
    "description": "VirtualMachineRestoreList is a list of VirtualMachineRestore resources",
    "type": "object",
    "required": [
     "metadata",
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VirtualMachineRestore"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1alpha1.VirtualMachineRestoreSpec": {
    "description": "VirtualMachineRestoreSpec is the spec for a VirtualMachineRestoreresource",
    "type": "object",
    "required": [
     "target",
     "virtualMachineSnapshotName"
    ],
    "properties": {
     "patches": {
      "description": "If the target for the restore does not exist, it will be created. Patches holds JSON patches that would be applied to the target manifest before it's created. Patches should fit the target's Kind.\n\nExample for a patch: {\"op\": \"replace\", \"path\": \"/metadata/name\", \"value\": \"new-vm-name\"}",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "atomic"
     },
     "target": {
      "description": "initially only VirtualMachine type supported",
      "default": {},
      "$ref": "#/definitions/k8s.io.api.core.v1.TypedLocalObjectReference"
     },
     "virtualMachineSnapshotName": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1alpha1.VirtualMachineRestoreStatus": {
    "description": "VirtualMachineRestoreStatus is the spec for a VirtualMachineRestoreresource",
    "type": "object",
    "nullable": true,
    "properties": {
     "complete": {
      "type": "boolean"
     },
     "conditions": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.Condition"
      }
     },
     "deletedDataVolumes": {
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "restoreTime": {
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "restores": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VolumeRestore"
      }
     }
    }
   },
   "v1alpha1.VirtualMachineSnapshot": {
    "description": "VirtualMachineSnapshot defines the operation of snapshotting a VM",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotSpec"
     },
     "status": {
      "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotStatus"
     }
    }
   },
   "v1alpha1.VirtualMachineSnapshotContent": {
    "description": "VirtualMachineSnapshotContent contains the snapshot data",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContentSpec"
     },
     "status": {
      "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContentStatus"
     }
    }
   },
   "v1alpha1.VirtualMachineSnapshotContentList": {
    "description": "VirtualMachineSnapshotContentList is a list of VirtualMachineSnapshot resources",
    "type": "object",
    "required": [
     "metadata",
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshotContent"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1alpha1.VirtualMachineSnapshotContentSpec": {
    "description": "VirtualMachineSnapshotContentSpec is the spec for a VirtualMachineSnapshotContent resource",
    "type": "object",
    "required": [
     "source"
    ],
    "properties": {
     "source": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.SourceSpec"
     },
     "virtualMachineSnapshotName": {
      "type": "string"
     },
     "volumeBackups": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VolumeBackup"
      }
     }
    }
   },
   "v1alpha1.VirtualMachineSnapshotContentStatus": {
    "description": "VirtualMachineSnapshotContentStatus is the status for a VirtualMachineSnapshotStatus resource",
    "type": "object",
    "nullable": true,
    "properties": {
     "creationTime": {
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "error": {
      "$ref": "#/definitions/v1alpha1.Error"
     },
     "readyToUse": {
      "type": "boolean"
     },
     "volumeSnapshotStatus": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VolumeSnapshotStatus"
      }
     }
    }
   },
   "v1alpha1.VirtualMachineSnapshotList": {
    "description": "VirtualMachineSnapshotList is a list of VirtualMachineSnapshot resources",
    "type": "object",
    "required": [
     "metadata",
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.VirtualMachineSnapshot"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1alpha1.VirtualMachineSnapshotSpec": {
    "description": "VirtualMachineSnapshotSpec is the spec for a VirtualMachineSnapshot resource",
    "type": "object",
    "required": [
     "source"
    ],
    "properties": {
     "deletionPolicy": {
      "type": "string"
     },
     "failureDeadline": {
      "description": "This time represents the number of seconds we permit the vm snapshot to take. In case we pass this deadline we mark this snapshot as failed. Defaults to DefaultFailureDeadline - 5min",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Duration"
     },
     "source": {
      "default": {},
      "$ref": "#/definitions/k8s.io.api.core.v1.TypedLocalObjectReference"
     }
    }
   },
   "v1alpha1.VirtualMachineSnapshotStatus": {
    "description": "VirtualMachineSnapshotStatus is the status for a VirtualMachineSnapshot resource",
    "type": "object",
    "nullable": true,
    "properties": {
     "conditions": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1alpha1.Condition"
      }
     },
     "creationTime": {
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "error": {
      "$ref": "#/definitions/v1alpha1.Error"
     },
     "indications": {
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      },
      "x-kubernetes-list-type": "set"
     },
     "phase": {
      "type": "string"
     },
     "readyToUse": {
      "type": "boolean"
     },
     "snapshotVolumes": {
      "$ref": "#/definitions/v1alpha1.SnapshotVolumesLists"
     },
     "sourceUID": {
      "type": "string"
     },
     "virtualMachineSnapshotContentName": {
      "type": "string"
     }
    }
   },
   "v1alpha1.VirtualMachineTemplateSpec": {
    "type": "object",
    "properties": {
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "VirtualMachineSpec contains the VirtualMachine specification.",
      "default": {},
      "$ref": "#/definitions/v1.VirtualMachineSpec"
     }
    }
   },
   "v1alpha1.VolumeBackup": {
    "description": "VolumeBackup contains the data neeed to restore a PVC",
    "type": "object",
    "required": [
     "volumeName",
     "persistentVolumeClaim"
    ],
    "properties": {
     "persistentVolumeClaim": {
      "default": {},
      "$ref": "#/definitions/v1alpha1.PersistentVolumeClaim"
     },
     "volumeName": {
      "type": "string",
      "default": ""
     },
     "volumeSnapshotName": {
      "type": "string"
     }
    }
   },
   "v1alpha1.VolumeRestore": {
    "description": "VolumeRestore contains the data neeed to restore a PVC",
    "type": "object",
    "required": [
     "volumeName",
     "persistentVolumeClaim",
     "volumeSnapshotName"
    ],
    "properties": {
     "dataVolumeName": {
      "type": "string"
     },
     "persistentVolumeClaim": {
      "type": "string",
      "default": ""
     },
     "volumeName": {
      "type": "string",
      "default": ""
     },
     "volumeSnapshotName": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1alpha1.VolumeSnapshotStatus": {
    "description": "VolumeSnapshotStatus is the status of a VolumeSnapshot",
    "type": "object",
    "required": [
     "volumeSnapshotName"
    ],
    "properties": {
     "creationTime": {
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.Time"
     },
     "error": {
      "$ref": "#/definitions/v1alpha1.Error"
     },
     "readyToUse": {
      "type": "boolean"
     },
     "volumeSnapshotName": {
      "type": "string",
      "default": ""
     }
    }
   },
   "v1beta1.CPUInstancetype": {
    "description": "CPUInstancetype contains the CPU related configuration of a given VirtualMachineInstancetypeSpec.\n\nGuest is a required attribute and defines the number of vCPUs to be exposed to the guest by the instancetype.",
    "type": "object",
    "required": [
     "guest"
    ],
    "properties": {
     "dedicatedCPUPlacement": {
      "description": "DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance on a node with enough dedicated pCPUs and pin the vCPUs to it.",
      "type": "boolean"
     },
     "guest": {
      "description": "Required number of vCPUs to expose to the guest.\n\nThe resulting CPU topology being derived from the optional PreferredCPUTopology attribute of CPUPreferences that itself defaults to PreferSockets.",
      "type": "integer",
      "format": "int64",
      "default": 0
     },
     "isolateEmulatorThread": {
      "description": "IsolateEmulatorThread requests one more dedicated pCPU to be allocated for the VMI to place the emulator thread on it.",
      "type": "boolean"
     },
     "model": {
      "description": "Model specifies the CPU model inside the VMI. List of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map. It is possible to specify special cases like \"host-passthrough\" to get the same CPU as the node and \"host-model\" to get CPU closest to the node one. Defaults to host-model.",
      "type": "string"
     },
     "numa": {
      "description": "NUMA allows specifying settings for the guest NUMA topology",
      "$ref": "#/definitions/v1.NUMA"
     },
     "realtime": {
      "description": "Realtime instructs the virt-launcher to tune the VMI for lower latency, optional for real time workloads",
      "$ref": "#/definitions/v1.Realtime"
     }
    }
   },
   "v1beta1.CPUPreferenceRequirement": {
    "type": "object",
    "required": [
     "guest"
    ],
    "properties": {
     "guest": {
      "description": "Minimal number of vCPUs required by the preference.",
      "type": "integer",
      "format": "int64",
      "default": 0
     }
    }
   },
   "v1beta1.CPUPreferences": {
    "description": "CPUPreferences contains various optional CPU preferences.",
    "type": "object",
    "properties": {
     "preferredCPUFeatures": {
      "description": "PreferredCPUFeatures optionally defines a slice of preferred CPU features.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.CPUFeature"
      }
     },
     "preferredCPUTopology": {
      "description": "PreferredCPUTopology optionally defines the preferred guest visible CPU topology, defaults to PreferSockets.",
      "type": "string"
     }
    }
   },
   "v1beta1.ClockPreferences": {
    "description": "ClockPreferences contains various optional defaults for Clock.",
    "type": "object",
    "properties": {
     "preferredClockOffset": {
      "description": "ClockOffset allows specifying the UTC offset or the timezone of the guest clock.",
      "$ref": "#/definitions/v1.ClockOffset"
     },
     "preferredTimer": {
      "description": "Timer specifies whih timers are attached to the vmi.",
      "$ref": "#/definitions/v1.Timer"
     }
    }
   },
   "v1beta1.DataVolumeBlankImage": {
    "description": "DataVolumeBlankImage provides the parameters to create a new raw blank image for the PVC",
    "type": "object"
   },
   "v1beta1.DataVolumeCheckpoint": {
    "description": "DataVolumeCheckpoint defines a stage in a warm migration.",
    "type": "object",
    "required": [
     "previous",
     "current"
    ],
    "properties": {
     "current": {
      "description": "Current is the identifier of the snapshot created for this checkpoint.",
      "type": "string",
      "default": ""
     },
     "previous": {
      "description": "Previous is the identifier of the snapshot from the previous checkpoint.",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1beta1.DataVolumeSource": {
    "description": "DataVolumeSource represents the source for our Data Volume, this can be HTTP, Imageio, S3, GCS, Registry or an existing PVC",
    "type": "object",
    "properties": {
     "blank": {
      "$ref": "#/definitions/v1beta1.DataVolumeBlankImage"
     },
     "gcs": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceGCS"
     },
     "http": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceHTTP"
     },
     "imageio": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceImageIO"
     },
     "pvc": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourcePVC"
     },
     "registry": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceRegistry"
     },
     "s3": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceS3"
     },
     "snapshot": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceSnapshot"
     },
     "upload": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceUpload"
     },
     "vddk": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceVDDK"
     }
    }
   },
   "v1beta1.DataVolumeSourceGCS": {
    "description": "DataVolumeSourceGCS provides the parameters to create a Data Volume from an GCS source",
    "type": "object",
    "required": [
     "url"
    ],
    "properties": {
     "secretRef": {
      "description": "SecretRef provides the secret reference needed to access the GCS source",
      "type": "string"
     },
     "url": {
      "description": "URL is the url of the GCS source",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1beta1.DataVolumeSourceHTTP": {
    "description": "DataVolumeSourceHTTP can be either an http or https endpoint, with an optional basic auth user name and password, and an optional configmap containing additional CAs",
    "type": "object",
    "required": [
     "url"
    ],
    "properties": {
     "certConfigMap": {
      "description": "CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate",
      "type": "string"
     },
     "extraHeaders": {
      "description": "ExtraHeaders is a list of strings containing extra headers to include with HTTP transfer requests",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "secretExtraHeaders": {
      "description": "SecretExtraHeaders is a list of Secret references, each containing an extra HTTP header that may include sensitive information",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "secretRef": {
      "description": "SecretRef A Secret reference, the secret should contain accessKeyId (user name) base64 encoded, and secretKey (password) also base64 encoded",
      "type": "string"
     },
     "url": {
      "description": "URL is the URL of the http(s) endpoint",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1beta1.DataVolumeSourceImageIO": {
    "description": "DataVolumeSourceImageIO provides the parameters to create a Data Volume from an imageio source",
    "type": "object",
    "required": [
     "url",
     "diskId"
    ],
    "properties": {
     "certConfigMap": {
      "description": "CertConfigMap provides a reference to the CA cert",
      "type": "string"
     },
     "diskId": {
      "description": "DiskID provides id of a disk to be imported",
      "type": "string",
      "default": ""
     },
     "secretRef": {
      "description": "SecretRef provides the secret reference needed to access the ovirt-engine",
      "type": "string"
     },
     "url": {
      "description": "URL is the URL of the ovirt-engine",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1beta1.DataVolumeSourcePVC": {
    "description": "DataVolumeSourcePVC provides the parameters to create a Data Volume from an existing PVC",
    "type": "object",
    "required": [
     "namespace",
     "name"
    ],
    "properties": {
     "name": {
      "description": "The name of the source PVC",
      "type": "string",
      "default": ""
     },
     "namespace": {
      "description": "The namespace of the source PVC",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1beta1.DataVolumeSourceRef": {
    "description": "DataVolumeSourceRef defines an indirect reference to the source of data for the DataVolume",
    "type": "object",
    "required": [
     "kind",
     "name"
    ],
    "properties": {
     "kind": {
      "description": "The kind of the source reference, currently only \"DataSource\" is supported",
      "type": "string",
      "default": ""
     },
     "name": {
      "description": "The name of the source reference",
      "type": "string",
      "default": ""
     },
     "namespace": {
      "description": "The namespace of the source reference, defaults to the DataVolume namespace",
      "type": "string"
     }
    }
   },
   "v1beta1.DataVolumeSourceRegistry": {
    "description": "DataVolumeSourceRegistry provides the parameters to create a Data Volume from an registry source",
    "type": "object",
    "properties": {
     "certConfigMap": {
      "description": "CertConfigMap provides a reference to the Registry certs",
      "type": "string"
     },
     "imageStream": {
      "description": "ImageStream is the name of image stream for import",
      "type": "string"
     },
     "pullMethod": {
      "description": "PullMethod can be either \"pod\" (default import), or \"node\" (node docker cache based import)",
      "type": "string"
     },
     "secretRef": {
      "description": "SecretRef provides the secret reference needed to access the Registry source",
      "type": "string"
     },
     "url": {
      "description": "URL is the url of the registry source (starting with the scheme: docker, oci-archive)",
      "type": "string"
     }
    }
   },
   "v1beta1.DataVolumeSourceS3": {
    "description": "DataVolumeSourceS3 provides the parameters to create a Data Volume from an S3 source",
    "type": "object",
    "required": [
     "url"
    ],
    "properties": {
     "certConfigMap": {
      "description": "CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate",
      "type": "string"
     },
     "secretRef": {
      "description": "SecretRef provides the secret reference needed to access the S3 source",
      "type": "string"
     },
     "url": {
      "description": "URL is the url of the S3 source",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1beta1.DataVolumeSourceSnapshot": {
    "description": "DataVolumeSourceSnapshot provides the parameters to create a Data Volume from an existing VolumeSnapshot",
    "type": "object",
    "required": [
     "namespace",
     "name"
    ],
    "properties": {
     "name": {
      "description": "The name of the source VolumeSnapshot",
      "type": "string",
      "default": ""
     },
     "namespace": {
      "description": "The namespace of the source VolumeSnapshot",
      "type": "string",
      "default": ""
     }
    }
   },
   "v1beta1.DataVolumeSourceUpload": {
    "description": "DataVolumeSourceUpload provides the parameters to create a Data Volume by uploading the source",
    "type": "object"
   },
   "v1beta1.DataVolumeSourceVDDK": {
    "description": "DataVolumeSourceVDDK provides the parameters to create a Data Volume from a Vmware source",
    "type": "object",
    "properties": {
     "backingFile": {
      "description": "BackingFile is the path to the virtual hard disk to migrate from vCenter/ESXi",
      "type": "string"
     },
     "initImageURL": {
      "description": "InitImageURL is an optional URL to an image containing an extracted VDDK library, overrides v2v-vmware config map",
      "type": "string"
     },
     "secretRef": {
      "description": "SecretRef provides a reference to a secret containing the username and password needed to access the vCenter or ESXi host",
      "type": "string"
     },
     "thumbprint": {
      "description": "Thumbprint is the certificate thumbprint of the vCenter or ESXi host",
      "type": "string"
     },
     "url": {
      "description": "URL is the URL of the vCenter or ESXi host with the VM to migrate",
      "type": "string"
     },
     "uuid": {
      "description": "UUID is the UUID of the virtual machine that the backing file is attached to in vCenter/ESXi",
      "type": "string"
     }
    }
   },
   "v1beta1.DataVolumeSpec": {
    "description": "DataVolumeSpec defines the DataVolume type specification",
    "type": "object",
    "properties": {
     "checkpoints": {
      "description": "Checkpoints is a list of DataVolumeCheckpoints, representing stages in a multistage import.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1beta1.DataVolumeCheckpoint"
      }
     },
     "contentType": {
      "description": "DataVolumeContentType options: \"kubevirt\", \"archive\"",
      "type": "string"
     },
     "finalCheckpoint": {
      "description": "FinalCheckpoint indicates whether the current DataVolumeCheckpoint is the final checkpoint.",
      "type": "boolean"
     },
     "preallocation": {
      "description": "Preallocation controls whether storage for DataVolumes should be allocated in advance.",
      "type": "boolean"
     },
     "priorityClassName": {
      "description": "PriorityClassName for Importer, Cloner and Uploader pod",
      "type": "string"
     },
     "pvc": {
      "description": "PVC is the PVC specification",
      "$ref": "#/definitions/k8s.io.api.core.v1.PersistentVolumeClaimSpec"
     },
     "source": {
      "description": "Source is the src of the data for the requested DataVolume",
      "$ref": "#/definitions/v1beta1.DataVolumeSource"
     },
     "sourceRef": {
      "description": "SourceRef is an indirect reference to the source of data for the requested DataVolume",
      "$ref": "#/definitions/v1beta1.DataVolumeSourceRef"
     },
     "storage": {
      "description": "Storage is the requested storage specification",
      "$ref": "#/definitions/v1beta1.StorageSpec"
     }
    }
   },
   "v1beta1.DevicePreferences": {
    "description": "DevicePreferences contains various optional Device preferences.",
    "type": "object",
    "properties": {
     "preferredAutoattachGraphicsDevice": {
      "description": "PreferredAutoattachGraphicsDevice optionally defines the preferred value of AutoattachGraphicsDevice",
      "type": "boolean"
     },
     "preferredAutoattachInputDevice": {
      "description": "PreferredAutoattachInputDevice optionally defines the preferred value of AutoattachInputDevice",
      "type": "boolean"
     },
     "preferredAutoattachMemBalloon": {
      "description": "PreferredAutoattachMemBalloon optionally defines the preferred value of AutoattachMemBalloon",
      "type": "boolean"
     },
     "preferredAutoattachPodInterface": {
      "description": "PreferredAutoattachPodInterface optionally defines the preferred value of AutoattachPodInterface",
      "type": "boolean"
     },
     "preferredAutoattachSerialConsole": {
      "description": "PreferredAutoattachSerialConsole optionally defines the preferred value of AutoattachSerialConsole",
      "type": "boolean"
     },
     "preferredBlockMultiQueue": {
      "description": "PreferredBlockMultiQueue optionally enables the vhost multiqueue feature for virtio disks.",
      "type": "boolean"
     },
     "preferredCdromBus": {
      "description": "PreferredCdromBus optionally defines the preferred bus for Cdrom Disk devices.",
      "type": "string"
     },
     "preferredDisableHotplug": {
      "description": "PreferredDisableHotplug optionally defines the preferred value of DisableHotplug",
      "type": "boolean"
     },
     "preferredDiskBlockSize": {
      "description": "PreferredBlockSize optionally defines the block size of Disk devices.",
      "$ref": "#/definitions/v1.BlockSize"
     },
     "preferredDiskBus": {
      "description": "PreferredDiskBus optionally defines the preferred bus for Disk Disk devices.",
      "type": "string"
     },
     "preferredDiskCache": {
      "description": "PreferredCache optionally defines the DriverCache to be used by Disk devices.",
      "type": "string"
     },
     "preferredDiskDedicatedIoThread": {
      "description": "PreferredDedicatedIoThread optionally enables dedicated IO threads for Disk devices.",
      "type": "boolean"
     },
     "preferredDiskIO": {
      "description": "PreferredIo optionally defines the QEMU disk IO mode to be used by Disk devices.",
      "type": "string"
     },
     "preferredInputBus": {
      "description": "PreferredInputBus optionally defines the preferred bus for Input devices.",
      "type": "string"
     },
     "preferredInputType": {
      "description": "PreferredInputType optionally defines the preferred type for Input devices.",
      "type": "string"
     },
     "preferredInterfaceMasquerade": {
      "description": "PreferredInterfaceMasquerade optionally defines the preferred masquerade configuration to use with each network interface.",
      "$ref": "#/definitions/v1.InterfaceMasquerade"
     },
     "preferredInterfaceModel": {
      "description": "PreferredInterfaceModel optionally defines the preferred model to be used by Interface devices.",
      "type": "string"
     },
     "preferredLunBus": {
      "description": "PreferredLunBus optionally defines the preferred bus for Lun Disk devices.",
      "type": "string"
     },
     "preferredNetworkInterfaceMultiQueue": {
      "description": "PreferredNetworkInterfaceMultiQueue optionally enables the vhost multiqueue feature for virtio interfaces.",
      "type": "boolean"
     },
     "preferredRng": {
      "description": "PreferredRng optionally defines the preferred rng device to be used.",
      "$ref": "#/definitions/v1.Rng"
     },
     "preferredSoundModel": {
      "description": "PreferredSoundModel optionally defines the preferred model for Sound devices.",
      "type": "string"
     },
     "preferredTPM": {
      "description": "PreferredTPM optionally defines the preferred TPM device to be used.",
      "$ref": "#/definitions/v1.TPMDevice"
     },
     "preferredUseVirtioTransitional": {
      "description": "PreferredUseVirtioTransitional optionally defines the preferred value of UseVirtioTransitional",
      "type": "boolean"
     },
     "preferredVirtualGPUOptions": {
      "description": "PreferredVirtualGPUOptions optionally defines the preferred value of VirtualGPUOptions",
      "$ref": "#/definitions/v1.VGPUOptions"
     }
    }
   },
   "v1beta1.FeaturePreferences": {
    "description": "FeaturePreferences contains various optional defaults for Features.",
    "type": "object",
    "properties": {
     "preferredAcpi": {
      "description": "PreferredAcpi optionally enables the ACPI feature",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "preferredApic": {
      "description": "PreferredApic optionally enables and configures the APIC feature",
      "$ref": "#/definitions/v1.FeatureAPIC"
     },
     "preferredHyperv": {
      "description": "PreferredHyperv optionally enables and configures HyperV features",
      "$ref": "#/definitions/v1.FeatureHyperv"
     },
     "preferredKvm": {
      "description": "PreferredKvm optionally enables and configures KVM features",
      "$ref": "#/definitions/v1.FeatureKVM"
     },
     "preferredPvspinlock": {
      "description": "PreferredPvspinlock optionally enables the Pvspinlock feature",
      "$ref": "#/definitions/v1.FeatureState"
     },
     "preferredSmm": {
      "description": "PreferredSmm optionally enables the SMM feature",
      "$ref": "#/definitions/v1.FeatureState"
     }
    }
   },
   "v1beta1.FirmwarePreferences": {
    "description": "FirmwarePreferences contains various optional defaults for Firmware.",
    "type": "object",
    "properties": {
     "preferredUseBios": {
      "description": "PreferredUseBios optionally enables BIOS",
      "type": "boolean"
     },
     "preferredUseBiosSerial": {
      "description": "PreferredUseBiosSerial optionally transmitts BIOS output over the serial.\n\nRequires PreferredUseBios to be enabled.",
      "type": "boolean"
     },
     "preferredUseEfi": {
      "description": "PreferredUseEfi optionally enables EFI",
      "type": "boolean"
     },
     "preferredUseSecureBoot": {
      "description": "PreferredUseSecureBoot optionally enables SecureBoot and the OVMF roms will be swapped for SecureBoot-enabled ones.\n\nRequires PreferredUseEfi and PreferredSmm to be enabled.",
      "type": "boolean"
     }
    }
   },
   "v1beta1.MachinePreferences": {
    "description": "MachinePreferences contains various optional defaults for Machine.",
    "type": "object",
    "properties": {
     "preferredMachineType": {
      "description": "PreferredMachineType optionally defines the preferred machine type to use.",
      "type": "string"
     }
    }
   },
   "v1beta1.MemoryInstancetype": {
    "description": "MemoryInstancetype contains the Memory related configuration of a given VirtualMachineInstancetypeSpec.\n\nGuest is a required attribute and defines the amount of RAM to be exposed to the guest by the instancetype.",
    "type": "object",
    "required": [
     "guest"
    ],
    "properties": {
     "guest": {
      "description": "Required amount of memory which is visible inside the guest OS.",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     },
     "hugepages": {
      "description": "Optionally enables the use of hugepages for the VirtualMachineInstance instead of regular memory.",
      "$ref": "#/definitions/v1.Hugepages"
     },
     "overcommitPercent": {
      "description": "OvercommitPercent is the percentage of the guest memory which will be overcommitted. This means that the VMIs parent pod (virt-launcher) will request less physical memory by a factor specified by the OvercommitPercent. Overcommits can lead to memory exhaustion, which in turn can lead to crashes. Use carefully. Defaults to 0",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1beta1.MemoryPreferenceRequirement": {
    "type": "object",
    "required": [
     "guest"
    ],
    "properties": {
     "guest": {
      "description": "Minimal amount of memory required by the preference.",
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.api.resource.Quantity"
     }
    }
   },
   "v1beta1.PreferenceRequirements": {
    "type": "object",
    "properties": {
     "cpu": {
      "description": "Required CPU related attributes of the instancetype.",
      "$ref": "#/definitions/v1beta1.CPUPreferenceRequirement"
     },
     "memory": {
      "description": "Required Memory related attributes of the instancetype.",
      "$ref": "#/definitions/v1beta1.MemoryPreferenceRequirement"
     }
    }
   },
   "v1beta1.StorageSpec": {
    "description": "StorageSpec defines the Storage type specification",
    "type": "object",
    "properties": {
     "accessModes": {
      "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
      "type": "array",
      "items": {
       "type": "string",
       "default": ""
      }
     },
     "dataSource": {
      "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
      "$ref": "#/definitions/k8s.io.api.core.v1.TypedLocalObjectReference"
     },
     "dataSourceRef": {
      "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
      "$ref": "#/definitions/k8s.io.api.core.v1.TypedObjectReference"
     },
     "resources": {
      "description": "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
      "default": {},
      "$ref": "#/definitions/k8s.io.api.core.v1.ResourceRequirements"
     },
     "selector": {
      "description": "A label query over volumes to consider for binding.",
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector"
     },
     "storageClassName": {
      "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
      "type": "string"
     },
     "volumeMode": {
      "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.\n\nPossible enum values:\n - `\"Block\"` means the volume will not be formatted with a filesystem and will remain a raw block device.\n - `\"Filesystem\"` means the volume will be or is formatted with a filesystem.",
      "type": "string",
      "enum": [
       "Block",
       "Filesystem"
      ]
     },
     "volumeName": {
      "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
      "type": "string"
     }
    }
   },
   "v1beta1.VirtualMachineClusterInstancetype": {
    "description": "VirtualMachineClusterInstancetype is a cluster scoped version of VirtualMachineInstancetype resource.",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Required spec describing the instancetype",
      "default": {},
      "$ref": "#/definitions/v1beta1.VirtualMachineInstancetypeSpec"
     }
    }
   },
   "v1beta1.VirtualMachineClusterInstancetypeList": {
    "description": "VirtualMachineClusterInstancetypeList is a list of VirtualMachineClusterInstancetype resources.",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1beta1.VirtualMachineClusterInstancetype"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1beta1.VirtualMachineClusterPreference": {
    "description": "VirtualMachineClusterPreference is a cluster scoped version of the VirtualMachinePreference resource.",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Required spec describing the preferences",
      "default": {},
      "$ref": "#/definitions/v1beta1.VirtualMachinePreferenceSpec"
     }
    }
   },
   "v1beta1.VirtualMachineClusterPreferenceList": {
    "description": "VirtualMachineClusterPreferenceList is a list of VirtualMachineClusterPreference resources.",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1beta1.VirtualMachineClusterPreference"
      },
      "x-kubernetes-list-type": "set"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1beta1.VirtualMachineInstancetype": {
    "description": "VirtualMachineInstancetype resource contains quantitative and resource related VirtualMachine configuration that can be used by multiple VirtualMachine resources.",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Required spec describing the instancetype",
      "default": {},
      "$ref": "#/definitions/v1beta1.VirtualMachineInstancetypeSpec"
     }
    }
   },
   "v1beta1.VirtualMachineInstancetypeList": {
    "description": "VirtualMachineInstancetypeList is a list of VirtualMachineInstancetype resources.",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1beta1.VirtualMachineInstancetype"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1beta1.VirtualMachineInstancetypeSpec": {
    "description": "VirtualMachineInstancetypeSpec is a description of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype.\n\nCPU and Memory are required attributes with both requiring that their Guest attribute is defined, ensuring a number of vCPUs and amount of RAM is always provided by each instancetype.",
    "type": "object",
    "required": [
     "cpu",
     "memory"
    ],
    "properties": {
     "annotations": {
      "description": "Optionally defines the required Annotations to be used by the instance type and applied to the VirtualMachineInstance",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "cpu": {
      "description": "Required CPU related attributes of the instancetype.",
      "default": {},
      "$ref": "#/definitions/v1beta1.CPUInstancetype"
     },
     "gpus": {
      "description": "Optionally defines any GPU devices associated with the instancetype.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.GPU"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "hostDevices": {
      "description": "Optionally defines any HostDevices associated with the instancetype.",
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1.HostDevice"
      },
      "x-kubernetes-list-type": "atomic"
     },
     "ioThreadsPolicy": {
      "description": "Optionally defines the IOThreadsPolicy to be used by the instancetype.",
      "type": "string"
     },
     "launchSecurity": {
      "description": "Optionally defines the LaunchSecurity to be used by the instancetype.",
      "$ref": "#/definitions/v1.LaunchSecurity"
     },
     "memory": {
      "description": "Required Memory related attributes of the instancetype.",
      "default": {},
      "$ref": "#/definitions/v1beta1.MemoryInstancetype"
     },
     "nodeSelector": {
      "description": "NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node's labels for the vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n\nNodeSelector is the name of the custom node selector for the instancetype.",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "schedulerName": {
      "description": "If specified, the VMI will be dispatched by specified scheduler. If not specified, the VMI will be dispatched by default scheduler.\n\nSchedulerName is the name of the custom K8s scheduler for the instancetype.",
      "type": "string"
     }
    }
   },
   "v1beta1.VirtualMachinePreference": {
    "description": "VirtualMachinePreference resource contains optional preferences related to the VirtualMachine.",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta"
     },
     "spec": {
      "description": "Required spec describing the preferences",
      "default": {},
      "$ref": "#/definitions/v1beta1.VirtualMachinePreferenceSpec"
     }
    }
   },
   "v1beta1.VirtualMachinePreferenceList": {
    "description": "VirtualMachinePreferenceList is a list of VirtualMachinePreference resources.",
    "type": "object",
    "required": [
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "type": "array",
      "items": {
       "default": {},
       "$ref": "#/definitions/v1beta1.VirtualMachinePreference"
      },
      "x-kubernetes-list-type": "set"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "default": {},
      "$ref": "#/definitions/k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta"
     }
    }
   },
   "v1beta1.VirtualMachinePreferenceSpec": {
    "description": "VirtualMachinePreferenceSpec is a description of the VirtualMachinePreference or VirtualMachineClusterPreference.",
    "type": "object",
    "properties": {
     "annotations": {
      "description": "Optionally defines preferred Annotations to be applied to the VirtualMachineInstance",
      "type": "object",
      "additionalProperties": {
       "type": "string",
       "default": ""
      }
     },
     "clock": {
      "description": "Clock optionally defines preferences associated with the Clock attribute of a VirtualMachineInstance DomainSpec",
      "$ref": "#/definitions/v1beta1.ClockPreferences"
     },
     "cpu": {
      "description": "CPU optionally defines preferences associated with the CPU attribute of a VirtualMachineInstance DomainSpec",
      "$ref": "#/definitions/v1beta1.CPUPreferences"
     },
     "devices": {
      "description": "Devices optionally defines preferences associated with the Devices attribute of a VirtualMachineInstance DomainSpec",
      "$ref": "#/definitions/v1beta1.DevicePreferences"
     },
     "features": {
      "description": "Features optionally defines preferences associated with the Features attribute of a VirtualMachineInstance DomainSpec",
      "$ref": "#/definitions/v1beta1.FeaturePreferences"
     },
     "firmware": {
      "description": "Firmware optionally defines preferences associated with the Firmware attribute of a VirtualMachineInstance DomainSpec",
      "$ref": "#/definitions/v1beta1.FirmwarePreferences"
     },
     "machine": {
      "description": "Machine optionally defines preferences associated with the Machine attribute of a VirtualMachineInstance DomainSpec",
      "$ref": "#/definitions/v1beta1.MachinePreferences"
     },
     "preferSpreadSocketToCoreRatio": {
      "description": "PreferSpreadSocketToCoreRatio defines the ratio to spread vCPUs between cores and sockets, it defaults to 2.",
      "type": "integer",
      "format": "int64"
     },
     "preferredSubdomain": {
      "description": "Subdomain of the VirtualMachineInstance",
      "type": "string"
     },
     "preferredTerminationGracePeriodSeconds": {
      "description": "Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.",
      "type": "integer",
      "format": "int64"
     },
     "requirements": {
      "description": "Requirements defines the minium amount of instance type defined resources required by a set of preferences",
      "$ref": "#/definitions/v1beta1.PreferenceRequirements"
     },
     "volumes": {
      "description": "Volumes optionally defines preferences associated with the Volumes attribute of a VirtualMachineInstace DomainSpec",
      "$ref": "#/definitions/v1beta1.VolumePreferences"
     }
    }
   },
   "v1beta1.VolumePreferences": {
    "type": "object",
    "properties": {
     "preferredStorageClassName": {
      "description": "PreffereedStorageClassName optionally defines the preferred storageClass",
      "type": "string"
     }
    }
   }
  },
  "securityDefinitions": {
   "BearerToken": {
    "description": "Bearer Token authentication",
    "type": "apiKey",
    "name": "authorization",
    "in": "header"
   }
  }
 }